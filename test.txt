PRE_100_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (bvadd (_ bv1 64) (shesh x))))

real	0m0.019s
user	0m0.016s
sys	0m0.002s
PRE_100_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (bvadd (_ bv1 64) (shesh x))))

real	0m0.056s
user	0m0.050s
sys	0m0.006s
PRE_100_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (bvadd (_ bv1 64) (shesh x))))

real	0m0.516s
user	0m0.489s
sys	0m0.025s
PRE_101_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) x) x) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) x) x)))

real	0m0.062s
user	0m0.057s
sys	0m0.005s
PRE_101_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) x (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) x) x)) (im (bvand (_ bv1 64) (arba x)) x (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) x) x))) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) x) (_ bv0 64)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) x (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) x) x)) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (arba x)) x (_ bv0 64))))))

real	0m0.312s
user	0m0.304s
sys	0m0.007s
PRE_101_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) x) (_ bv0 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) x (bvor (_ bv1 64) x))))

real	0m2.553s
user	0m2.496s
sys	0m0.050s
PRE_102_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) x) (bvnot (ehad x)) (smol (bvor x (smol x)))) (smol (bvor x (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot (ehad x)) (smol (bvor x (smol x))))) (im (bvand (_ bv1 64) x) (bvnot (ehad x)) (smol (bvor x (smol x))))))

real	0m0.066s
user	0m0.061s
sys	0m0.005s
PRE_102_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvor x (smol x))) (bvnot (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (smol (bvor x (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (smol (bvor x (smol x))) (bvnot (ehad x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvor x (smol x))) (bvnot (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvnot (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvor x (smol x))) (bvnot (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvor x (smol x))) (bvnot (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvor x (smol x))) (bvnot (ehad x))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) (smol (bvor x (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvor x (smol x))) (bvnot (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (ehad x)) (smol (bvor x (smol x)))) (bvnot (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (smol (bvor x (smol x))) (bvnot (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (smol (bvor x (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvor x (smol x))) (bvnot (ehad x))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvor x (smol x))) (bvnot (ehad x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvor x (smol x))) (bvnot (ehad x))))))))

real	0m0.383s
user	0m0.370s
sys	0m0.012s
PRE_102_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvor x (smol x))) (bvnot (ehad x))))

real	0m2.624s
user	0m2.574s
sys	0m0.043s
PRE_103_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (ehad x)) (bvor x (shesh x))) (bvor (_ bv1 64) (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) (ehad x)) x)))

real	0m0.064s
user	0m0.058s
sys	0m0.006s
PRE_103_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (bvor x (shesh x)) (bvor (_ bv1 64) (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) (ehad x)) x)))

real	0m0.274s
user	0m0.265s
sys	0m0.009s
PRE_103_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (ehad x)) (bvor x (shesh x))) (im (bvand (_ bv1 64) x) x (bvor (_ bv1 64) (ehad x)))))

real	0m2.593s
user	0m2.529s
sys	0m0.057s
PRE_104_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (smol x) (im (bvand (_ bv1 64) (shesh x)) (ehad x) (_ bv0 64))))

real	0m0.019s
user	0m0.016s
sys	0m0.003s
PRE_104_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (ehad x) (_ bv0 64)) (smol x)))

real	0m0.055s
user	0m0.053s
sys	0m0.002s
PRE_104_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (ehad x) (smol x)) (im (bvand (_ bv1 64) x) (_ bv0 64) (smol x))))

real	0m0.577s
user	0m0.557s
sys	0m0.018s
PRE_105_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (smol x) (bvand (_ bv1 64) x)))

real	0m0.018s
user	0m0.017s
sys	0m0.001s
PRE_105_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (smol x) (bvand (_ bv1 64) x)))

real	0m0.054s
user	0m0.048s
sys	0m0.006s
PRE_105_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (smol x) (bvand (_ bv1 64) x)))

real	0m0.524s
user	0m0.510s
sys	0m0.013s
PRE_106_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) (bvand x (arba x))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (bvand x (arba x))) (bvand x (arba x)))))

real	0m0.063s
user	0m0.058s
sys	0m0.005s
PRE_106_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (bvand (_ bv1 64) (bvnot x)) (bvand x (arba x))))

real	0m0.259s
user	0m0.250s
sys	0m0.008s
PRE_106_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (bvand (_ bv1 64) (bvnot x)) (bvand x (arba x))))

real	0m2.440s
user	0m2.382s
sys	0m0.048s
PRE_107_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (smol (bvnot (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvadd x (shesh x))) (smol (bvnot (bvxor (_ bv1 64) x))))))

real	0m0.053s
user	0m0.048s
sys	0m0.005s
PRE_107_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvadd x (shesh x))) (smol (bvnot (bvxor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (smol (bvnot (bvxor (_ bv1 64) x))))))

real	0m0.229s
user	0m0.218s
sys	0m0.010s
PRE_107_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (smol (bvnot (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvadd x (shesh x))) (smol (bvnot (bvxor (_ bv1 64) x))))))

real	0m2.245s
user	0m2.202s
sys	0m0.034s
PRE_108_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (bvand (_ bv1 64) (bvnot x)) x) x) (bvadd x (shesh (arba x)))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd x (shesh (arba x))) (_ bv1 64)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (arba x))) (_ bv1 64)))))

real	0m0.100s
user	0m0.095s
sys	0m0.005s
PRE_108_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) x (_ bv1 64)) (im (bvand (_ bv1 64) (bvnot x)) (bvadd x (shesh (arba x))) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba x)) x (im (bvand (_ bv1 64) (bvnot x)) (bvadd x (shesh (arba x))) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (shesh (arba x))) (_ bv1 64))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (_ bv0 64) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) x) x (bvadd x (shesh (arba x)))) x)))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (shesh (arba x))) (_ bv1 64)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvadd x (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (shesh (arba x))) (_ bv1 64)) (bvadd x (shesh (arba x))))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (shesh (arba x))) (_ bv1 64))))))

real	0m0.553s
user	0m0.540s
sys	0m0.011s
PRE_108_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvadd x (shesh (arba x))) x) x) (bvand (_ bv1 64) (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (_ bv0 64) x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (_ bv1 64) (bvadd x (shesh (arba x))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (arba x))) (_ bv1 64)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (_ bv1 64) (bvadd x (shesh (arba x))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad x)) (_ bv1 64) (bvadd x (shesh (arba x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (_ bv1 64) (bvadd x (shesh (arba x))))))))

real	0m4.559s
user	0m4.469s
sys	0m0.077s
PRE_109_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor (bvnot x) (arba x))) (im (bvand (_ bv1 64) (shesh (bvor x (ehad x)))) (im (bvand (_ bv1 64) (bvxor x (shesh (shesh x)))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvand x (smol x)))) (arba (arba (ehad (bvand x (shesh x))))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))))) (arba (arba (ehad (bvand x (shesh x)))))) (bvor x (shesh x))))

real	0m4.372s
user	0m4.334s
sys	0m0.023s
PRE_109_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor (bvnot x) (ehad x))) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (im (bvand (_ bv1 64) (ehad (bvor x (ehad x)))) (im (bvand (_ bv1 64) (bvor (ehad x) (shesh x))) (im (bvand (_ bv1 64) (ehad (bvor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh (arba x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd x (ehad x)))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (arba (arba (ehad (bvand x (shesh x)))))) (bvor x (shesh x))) (arba (arba (ehad (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (bvor x (shesh x)) (arba (arba (ehad (bvand x (shesh x)))))) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba x)) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (bvor x (shesh x))))) (im (bvand (_ bv1 64) (arba x)) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd x (ehad x)))) (im (bvand (_ bv1 64) (arba (bvadd x (bvnot (_ bv1 64))))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (im (bvand x (bvor (_ bv1 64) (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (arba x)) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvxor (arba x) (shesh x))) (bvor x (shesh x)) (arba (arba (ehad (bvand x (shesh x))))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (bvand x (arba (smol x)))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (bvor x (shesh x)) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (bvor x (shesh x))) (arba (arba (ehad (bvand x (shesh x)))))) (bvor x (shesh x))))) (arba (arba (ehad (bvand x (shesh x))))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (im (bvand (_ bv1 64) x) (_ bv0 64) x))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (bvor x (shesh x)))) (arba (arba (ehad (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (bvxor (arba x) (shesh x))) (arba (arba (ehad (bvand x (shesh x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))))) (im (bvand (_ bv1 64) (ehad (bvor x (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh x)) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))))) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (im (bvand (_ bv1 64) (ehad (bvor x (ehad x)))) (bvor x (shesh x)) (im (bvand (_ bv1 64) (bvxor x (arba x))) (bvor x (shesh x)) (arba (arba (ehad (bvand x (shesh x))))))) (im (bvand (_ bv1 64) (ehad (bvor x (ehad x)))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (im (bvand (_ bv1 64) (ehad (bvor x (shesh x)))) (bvor x (shesh x)) (arba (arba (ehad (bvand x (shesh x)))))))))))

real	0m20.012s
user	0m19.802s
sys	0m0.145s
PRE_109_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvor x (ehad x)))) (im (bvand (_ bv1 64) (arba (bvor x (ehad x)))) (im (bvand (_ bv1 64) (arba (bvadd x (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (bvadd x (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh (smol x)))) (im (bvand (_ bv1 64) (bvor (arba x) (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) (shesh x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (arba (arba (ehad (bvand x (shesh x))))) (im (bvand (_ bv1 64) (ehad x)) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (bvand x (ehad x))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (arba (arba (ehad (bvand x (shesh x))))))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (bvor x (shesh x))) (arba (arba (ehad (bvand x (shesh x)))))) (bvor x (shesh x))) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor (arba x) (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (bvxor x (shesh x)))) (bvor x (shesh x)) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (bvor x (shesh x))) (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (arba x))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x)))) (arba (arba (ehad (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (bvor (ehad x) (arba x))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (bvor (arba x) (shesh x))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (arba (arba (ehad (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba x))) (arba (arba (ehad (bvand x (shesh x))))) (im (bvand (_ bv1 64) (arba (smol x))) (smol (_ bv1 64)) (bvor x (shesh x)))) (arba (arba (ehad (bvand x (shesh x)))))))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (arba (bvadd x (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (bvor x (shesh x)) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (ehad x))) (im (bvand (_ bv1 64) (bvor (bvnot x) (arba x))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (arba (arba (ehad (bvand x (shesh x)))))) (bvor x (shesh x))) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor x (shesh x)) (arba (arba (ehad (bvand x (shesh x)))))) (bvor x (shesh x))))))) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (ehad x)))) (im (bvand (_ bv1 64) (arba (bvadd x (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (bvadd x (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (bvxor (arba x) (shesh x))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (ehad x))) (arba (arba (ehad (bvand x (shesh x))))) (im (bvand (_ bv1 64) (arba (smol x))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x)))) (arba (arba (ehad (bvand x (shesh x))))))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (shesh (smol x)))) (im (bvand (_ bv1 64) (bvor (arba x) (shesh x))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (bvor x (shesh x))) (arba (arba (ehad (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (ehad x))) (arba (arba (ehad (bvand x (shesh x))))) (im (bvand (_ bv1 64) (bvand x (arba x))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x)))) (arba (arba (ehad (bvand x (shesh x)))))))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (arba (bvadd x (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (bvor x (shesh x)) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba x)) (arba (arba (ehad (bvand x (shesh x))))) (bvor x (shesh x))) (bvor x (shesh x))))))) (bvor x (shesh x)))))

real	3m1.227s
user	2m58.653s
sys	0m2.093s
PRE_10_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (bvadd (_ bv1 64) (shesh x)) (bvand (_ bv1 64) (bvnot x))))

real	0m0.063s
user	0m0.059s
sys	0m0.004s
PRE_10_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (bvadd (_ bv1 64) (shesh x)) (bvand (_ bv1 64) (bvnot x))))

real	0m0.255s
user	0m0.243s
sys	0m0.011s
PRE_10_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (bvadd (_ bv1 64) (shesh x)) (bvand (_ bv1 64) (bvnot x))))

real	0m2.424s
user	0m2.369s
sys	0m0.048s
PRE_110_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (bvxor x (shesh x)) (smol (bvxor (_ bv1 64) (shesh x)))) (smol (bvxor (_ bv1 64) (shesh x)))) (smol (shesh x))) (smol (shesh x))) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x))))))

real	0m0.086s
user	0m0.080s
sys	0m0.006s
PRE_110_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) (bvxor x (shesh x))) (smol (shesh x))) (smol (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x))) (bvxor x (shesh x))) (smol (shesh x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (smol (shesh x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvxor x (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x)))) (smol (shesh x))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvxor (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (smol (bvxor (_ bv1 64) (shesh x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x))))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor x (shesh x)) (smol (shesh x))) (smol (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvxor x (shesh x)) (smol (shesh x))) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol (bvxor (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))))))

real	0m0.620s
user	0m0.608s
sys	0m0.010s
PRE_110_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvxor x (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x)))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvxor (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvxor (_ bv1 64) (bvxor x (shesh x))) (smol (bvxor (_ bv1 64) (shesh x)))) (smol (bvxor (_ bv1 64) (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvxor (_ bv1 64) (bvxor x (shesh x))) (smol (bvxor (_ bv1 64) (shesh x)))) (bvxor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvxor (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))))) (bvxor (_ bv1 64) (bvxor x (shesh x))))))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (smol (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (bvor (_ bv1 64) (bvxor x (shesh x)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (shesh x)) (bvxor x (shesh x)))))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvxor x (shesh x)) (smol (bvxor (_ bv1 64) (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol (bvxor (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvxor x (shesh x)) (smol (shesh x))) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (shesh x)) (bvxor x (shesh x)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvxor x (shesh x)) (smol (bvxor (_ bv1 64) (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvxor x (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x)))))))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (shesh x)) (bvxor x (shesh x))) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol (shesh x)) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvxor x (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x)))))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvxor x (shesh x)) (smol (bvxor (_ bv1 64) (shesh x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvxor x (shesh x)) (smol (bvxor (_ bv1 64) (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x))))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (shesh x)) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor x (shesh x)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x))))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (bvor (_ bv1 64) (bvxor x (shesh x)))) (smol (shesh x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x))))))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (smol (bvxor (_ bv1 64) (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) (bvxor x (shesh x))) (smol (shesh x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) (bvxor x (shesh x))) (smol (shesh x))))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (bvxor x (shesh x))) (smol (shesh x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))))))))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (smol (bvxor (_ bv1 64) (shesh x)))))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (smol (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (smol (shesh x))) (smol (shesh x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (smol (bvxor (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (bvxor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvxor (_ bv1 64) (bvxor x (shesh x))) (smol (bvxor (_ bv1 64) (shesh x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (smol (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (smol (shesh x)))))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvxor (_ bv1 64) (bvxor x (shesh x))) (smol (bvxor (_ bv1 64) (shesh x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (smol (bvxor (_ bv1 64) (shesh x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvxor (_ bv1 64) (bvxor x (shesh x))) (smol (bvxor (_ bv1 64) (shesh x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x)))))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvor (_ bv1 64) (bvxor x (shesh x))) (smol (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))) (bvor (_ bv1 64) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (shesh x)) (bvor (_ bv1 64) (bvxor x (shesh x)))))))))))))

real	0m22.038s
user	0m21.905s
sys	0m0.047s
PRE_111_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (_ bv1 64) (smol (smol (shesh x)))))

real	0m0.037s
user	0m0.030s
sys	0m0.007s
PRE_111_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (_ bv1 64) (smol (smol (shesh x)))))

real	0m0.132s
user	0m0.120s
sys	0m0.012s
PRE_111_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (_ bv1 64) (smol (smol (shesh x)))))

real	0m1.180s
user	0m1.150s
sys	0m0.027s
PRE_112_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvor (_ bv1 64) (smol x)))

real	0m0.016s
user	0m0.015s
sys	0m0.001s
PRE_112_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvor (_ bv1 64) (smol x)))

real	0m0.044s
user	0m0.040s
sys	0m0.004s
PRE_112_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvor (_ bv1 64) (smol x)))

real	0m0.376s
user	0m0.356s
sys	0m0.019s
PRE_113_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (ehad (bvadd (_ bv1 64) x)) (smol x)))

real	0m0.015s
user	0m0.013s
sys	0m0.003s
PRE_113_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (ehad (bvadd (_ bv1 64) x)) (smol x)))

real	0m0.044s
user	0m0.038s
sys	0m0.007s
PRE_113_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (ehad (bvadd (_ bv1 64) x)) (smol x)))

real	0m0.414s
user	0m0.400s
sys	0m0.013s
PRE_114_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) x) (bvadd x (arba (ehad x)))) x) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) x) (bvadd x (arba (ehad x))) x))))

real	0m0.097s
user	0m0.094s
sys	0m0.002s
PRE_114_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) x) x) (bvadd x (arba (ehad x)))))

real	0m0.412s
user	0m0.401s
sys	0m0.010s
PRE_114_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (bvadd x (arba (ehad x))) (bvor (_ bv1 64) x)) (bvadd x (arba (ehad x)))) (bvadd x (arba (ehad x)))) (bvor (_ bv1 64) x)) x) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvor (_ bv1 64) x) x)))

real	0m4.083s
user	0m4.012s
sys	0m0.059s
PRE_115_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvor x (ehad x)) (ehad x)))

real	0m0.020s
user	0m0.015s
sys	0m0.005s
PRE_115_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (ehad x) (bvor x (ehad x))))

real	0m0.067s
user	0m0.060s
sys	0m0.007s
PRE_115_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvor x (ehad x)) (ehad x)))

real	0m0.544s
user	0m0.525s
sys	0m0.017s
PRE_116_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (smol (shesh x)) (smol x)) (im (bvand (_ bv1 64) (shesh x)) (smol (shesh x)) (ehad (smol (smol x))))) (smol (shesh x))))

real	0m0.033s
user	0m0.029s
sys	0m0.003s
PRE_116_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (smol (shesh x)) (im (bvand (_ bv1 64) x) (smol (shesh x)) (ehad (smol (smol x))))))

real	0m0.116s
user	0m0.111s
sys	0m0.004s
PRE_116_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (smol (shesh x)) (ehad (smol (smol x)))) (smol (shesh x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (smol (shesh x)) (ehad (smol (smol x)))) (smol (shesh x))) (im (bvand (_ bv1 64) (shesh x)) (smol (shesh x)) (im (bvand (_ bv1 64) x) (smol (shesh x)) (ehad (smol (smol x))))))))

real	0m1.368s
user	0m1.346s
sys	0m0.018s
PRE_117_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (arba (smol x)) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)))

real	0m0.016s
user	0m0.013s
sys	0m0.003s
PRE_117_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (arba (smol x)) (bvxor (_ bv1 64) x)))

real	0m0.050s
user	0m0.044s
sys	0m0.006s
PRE_117_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (arba (smol x)) (bvxor (_ bv1 64) x)))

real	0m0.490s
user	0m0.473s
sys	0m0.015s
PRE_118_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (shesh (arba (arba x))) (smol (bvxor (_ bv1 64) x))) (shesh (arba (arba x)))) (im (bvand (_ bv1 64) x) (smol (smol (ehad x))) (shesh (arba (arba x))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (smol x) (shesh (arba (arba x)))) (smol (bvxor (_ bv1 64) x)))))

real	0m0.039s
user	0m0.038s
sys	0m0.001s
PRE_118_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (smol x) (shesh (arba (arba x)))) (im (bvand (_ bv1 64) (ehad x)) (shesh (arba (arba x))) (smol (bvxor (_ bv1 64) x)))))

real	0m0.138s
user	0m0.133s
sys	0m0.005s
PRE_118_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (shesh (arba (arba x))) (smol (bvxor (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad x)) (smol x) (shesh (arba (arba x))))))

real	0m1.376s
user	0m1.344s
sys	0m0.028s
PRE_119_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (bvnot (bvor x (arba x))) (bvxor x (smol x))))

real	0m0.048s
user	0m0.046s
sys	0m0.002s
PRE_119_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (bvnot (bvor x (arba x))) (bvxor x (smol x))))

real	0m0.206s
user	0m0.202s
sys	0m0.003s
PRE_119_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (bvnot (bvor x (arba x))) (bvxor x (smol x))))

real	0m1.880s
user	0m1.825s
sys	0m0.048s
PRE_11_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvnot x) (shesh x)))

real	0m0.012s
user	0m0.008s
sys	0m0.004s
PRE_11_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvnot x) (shesh x)))

real	0m0.028s
user	0m0.022s
sys	0m0.006s
PRE_11_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvnot x) (shesh x)))

real	0m0.236s
user	0m0.225s
sys	0m0.011s
PRE_120_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (_ bv0 64))

real	0m0.010s
user	0m0.007s
sys	0m0.003s
PRE_120_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (_ bv0 64))

real	0m0.018s
user	0m0.016s
sys	0m0.002s
PRE_120_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (_ bv0 64))

real	0m0.103s
user	0m0.094s
sys	0m0.009s
PRE_121_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvnot (_ bv1 64)) (im (bvand (_ bv1 64) (ehad x)) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))))))

real	0m4.431s
user	0m4.380s
sys	0m0.035s
PRE_121_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor (ehad x) (arba x))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (im (bvand (_ bv1 64) x) (bvnot (_ bv1 64)) (im (bvand (_ bv1 64) (bvor x (ehad (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh (arba x)))) (im (bvand (_ bv1 64) (arba (bvadd x (smol x)))) (im (bvand (ehad x) (bvxor x (bvadd (_ bv1 64) x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (shesh (bvand x (ehad x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (bvor x (shesh (shesh x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad (bvnot x))))))))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))) (im (bvand (_ bv1 64) (bvor x (ehad (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvand x (shesh x)))) (im (bvand (_ bv1 64) (bvor x (shesh (shesh x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (bvor x (shesh (arba x)))) (im (bvand (_ bv1 64) (ehad (bvor x (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (bvxor x (shesh (ehad x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvxor x (ehad (bvnot x))))))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (im (bvand (_ bv1 64) (arba (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (bvor x (ehad (ehad x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (bvor x (shesh (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))) (bvnot (_ bv1 64)))))

real	0m20.841s
user	0m20.607s
sys	0m0.168s
PRE_121_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (bvor x (smol x)))) (im (bvand (_ bv1 64) (arba (bvor x (ehad x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (ehad x)))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvnot (_ bv1 64)) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (arba (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x))))))))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (shesh (arba (ehad x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (shesh (bvand x (smol x)))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (bvxor x (shesh x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (arba (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (shesh (shesh (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (shesh (bvadd x (smol x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (arba (ehad (bvxor x (ehad (bvnot x)))))))))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (arba (ehad (bvxor x (ehad (bvnot x)))))))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvadd x (bvnot (_ bv1 64))))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (ehad x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))))) (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvnot (_ bv1 64)) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (arba (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (bvxor x (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))))))) (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) (bvnot (bvand x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (shesh (shesh (arba x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))))) (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) x) (bvnot (_ bv1 64)) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (arba (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (shesh (bvadd x (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvadd x (smol x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (shesh (bvxor x (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))) (arba (ehad (bvxor x (ehad (bvnot x)))))))) (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvnot (_ bv1 64)) (im (bvand (_ bv1 64) (arba (bvor x (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvand x (shesh x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (arba (ehad (bvxor x (ehad (bvnot x)))))))) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (bvadd x (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvadd x (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (shesh (shesh (shesh (smol (shesh x))))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (shesh (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (bvadd x (smol x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))))))))) (im (bvand (_ bv1 64) (arba (bvor x (smol x)))) (im (bvand (_ bv1 64) (arba (bvor x (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (bvadd x (arba x)))) (im (bvand (_ bv1 64) (shesh x)) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (arba (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (shesh x)) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (arba (bvxor x (arba x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (shesh x)) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (arba (bvxor x (arba x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (ehad x)))) (im (bvand (_ bv1 64) (arba (bvadd x (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (shesh (bvxor x (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (bvxor x (arba (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))))))) (im (bvand (_ bv1 64) (shesh (shesh (shesh x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (shesh (shesh (ehad x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (shesh (shesh (shesh (smol (shesh x))))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))))))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvadd x (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (shesh (arba (ehad x)))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (ehad (bvadd x (ehad x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (shesh (shesh (shesh (smol (shesh x))))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (bvxor x (ehad (ehad x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))))))) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (shesh x)) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))))) (im (bvand (_ bv1 64) (arba (bvor x (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (bvadd x (shesh x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (shesh (shesh (shesh (smol (shesh x))))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (ehad (bvor x (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (shesh (bvadd x (ehad x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))))) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (shesh (shesh (shesh (smol (shesh x))))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh (shesh x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (shesh (shesh (shesh (smol (shesh x))))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (bvxor x (ehad (ehad x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (shesh x)) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))))))))))

real	4m5.214s
user	4m1.637s
sys	0m2.919s
PRE_122_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (ehad (bvand x (shesh x))) (smol x)))

real	0m0.051s
user	0m0.047s
sys	0m0.005s
PRE_122_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (smol x) (ehad (bvand x (shesh x)))))

real	0m0.209s
user	0m0.200s
sys	0m0.008s
PRE_122_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (ehad (bvand x (shesh x))) (smol x)))

real	0m1.940s
user	0m1.897s
sys	0m0.037s
PRE_123_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (_ bv0 64) (shesh (arba (ehad x)))))

real	0m0.034s
user	0m0.029s
sys	0m0.005s
PRE_123_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (_ bv0 64) (shesh (arba (ehad x)))))

real	0m0.123s
user	0m0.113s
sys	0m0.010s
PRE_123_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (shesh (arba (ehad x))) (_ bv0 64)))

real	0m1.079s
user	0m1.053s
sys	0m0.022s
PRE_124_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvor (_ bv1 64) (smol x)) (bvadd x (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (ehad x)) (bvadd x (bvnot (_ bv0 64))) (bvor (_ bv1 64) (smol x)))))

real	0m0.063s
user	0m0.059s
sys	0m0.004s
PRE_124_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (bvnot (_ bv0 64))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (bvnot (_ bv0 64))) (bvor (_ bv1 64) (smol x))) (bvadd x (bvnot (_ bv0 64)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (bvnot (_ bv0 64))) (bvor (_ bv1 64) (smol x)))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (bvnot (_ bv0 64))) (bvor (_ bv1 64) (smol x))) (bvadd x (bvnot (_ bv0 64)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (bvnot (_ bv0 64))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvadd x (bvnot (_ bv0 64))) (bvor (_ bv1 64) (smol x))))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x))))))))

real	0m0.394s
user	0m0.384s
sys	0m0.009s
PRE_124_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (bvnot (_ bv0 64))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x)))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (bvnot (_ bv0 64))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x)))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (bvnot (_ bv0 64))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (bvnot (_ bv0 64))) (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (bvnot (_ bv0 64))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (bvnot (_ bv0 64))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (bvnot (_ bv0 64))) (bvor (_ bv1 64) (smol x))))))

real	0m4.417s
user	0m4.344s
sys	0m0.061s
PRE_125_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (smol x)) (bvnot (bvand (_ bv1 64) x))))

real	0m0.062s
user	0m0.053s
sys	0m0.009s
PRE_125_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (smol x)) (bvnot (bvand (_ bv1 64) x))))

real	0m0.256s
user	0m0.247s
sys	0m0.008s
PRE_125_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (smol x)) (bvnot (bvand (_ bv1 64) x))))

real	0m2.335s
user	0m2.281s
sys	0m0.045s
PRE_126_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (_ bv1 64)) (arba x)) (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (_ bv1 64)) (arba x))) (im (bvand (_ bv1 64) (shesh x)) (smol (bvnot (_ bv1 64))) (arba x))))

real	0m0.064s
user	0m0.060s
sys	0m0.003s
PRE_126_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) x) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) x) (arba x) (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (smol (bvnot (_ bv1 64))) (arba x))) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (arba x)) (im (bvand (_ bv1 64) x) (arba x) (smol (bvnot (_ bv1 64)))))))))

real	0m0.372s
user	0m0.364s
sys	0m0.007s
PRE_126_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) x) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) x) (arba x) (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (smol (bvor x (bvnot (_ bv1 64)))) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64))))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) x) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) x) (arba x) (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64))))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) x) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) x) (arba x) (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) x) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) x) (arba x) (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64))))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64)))))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) x) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) x) (arba x) (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64))))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (smol (bvor x (bvnot (_ bv1 64)))) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) x) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (smol (bvnot (_ bv1 64))) (arba x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (smol (bvor x (bvnot (_ bv1 64)))) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64)))))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (arba x) (bvnot (_ bv1 64))) (arba x))) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64))))))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (smol (bvnot (_ bv1 64)))))))))

real	0m5.968s
user	0m5.900s
sys	0m0.045s
PRE_127_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))))

real	0m0.021s
user	0m0.015s
sys	0m0.005s
PRE_127_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))))

real	0m0.065s
user	0m0.062s
sys	0m0.003s
PRE_127_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))))

real	0m0.598s
user	0m0.586s
sys	0m0.011s
PRE_128_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (bvor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (bvor x (bvadd x (ehad x))))) (im (bvand (_ bv1 64) (shesh (bvadd x (smol x)))) (im (bvand (_ bv1 64) (bvand x (shesh (arba (bvnot x))))) (shesh (arba (ehad (bvand x (arba (arba x)))))) (smol (bvadd x (bvxor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad (bvxor x (bvadd (_ bv1 64) (shesh x))))) (im (bvand (_ bv1 64) (bvxor x (arba (bvadd (_ bv1 64) (bvor (_ bv1 64) x))))) (shesh (arba (ehad (bvand x (arba (arba x)))))) (smol (bvadd x (bvxor (_ bv1 64) x)))) (smol (bvadd x (bvxor (_ bv1 64) x))))) (smol (bvadd x (bvxor (_ bv1 64) x)))) (smol (bvadd x (bvxor (_ bv1 64) x)))))

real	1m2.654s
user	1m2.058s
sys	0m0.387s
PRE_128_100.sl
CVC4 interrupted by SIGTERM.
timeout: the monitored command dumped core

real	5m6.352s
user	4m56.283s
sys	0m4.418s
PRE_128_1000.sl
CVC4 interrupted by SIGTERM.
timeout: the monitored command dumped core

real	5m9.125s
user	4m54.982s
sys	0m6.707s
PRE_129_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvor (_ bv1 64) (smol x)))

real	0m0.018s
user	0m0.014s
sys	0m0.004s
PRE_129_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvor (_ bv1 64) (smol x)))

real	0m0.045s
user	0m0.042s
sys	0m0.003s
PRE_129_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvor (_ bv1 64) (smol x)))

real	0m0.392s
user	0m0.371s
sys	0m0.019s
PRE_12_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (smol (bvor x (bvnot (_ bv1 64)))) (bvadd x (shesh (bvnot (_ bv0 64))))))

real	0m0.092s
user	0m0.087s
sys	0m0.005s
PRE_12_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (smol (bvor x (bvnot (_ bv1 64)))) (bvadd x (shesh (bvnot (_ bv0 64))))) (bvadd x (shesh (bvnot (_ bv0 64))))))

real	0m0.409s
user	0m0.399s
sys	0m0.009s
PRE_12_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (smol (bvor x (bvnot (_ bv1 64)))) (bvadd x (shesh (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (bvand x (ehad x))) (bvnot (_ bv1 64)) (bvadd x (shesh (bvnot (_ bv0 64)))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (smol (bvnot (_ bv1 64))) (bvadd x (shesh (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (ehad x)) (bvnot (_ bv1 64)) (bvadd x (shesh (bvnot (_ bv0 64))))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) x) (bvadd x (shesh (bvnot (_ bv0 64)))) (im (bvand (_ bv1 64) (ehad x)) (smol (bvnot (_ bv1 64))) (bvadd x (shesh (bvnot (_ bv0 64)))))) (im (bvand (_ bv1 64) (ehad x)) (smol (bvor x (bvnot (_ bv1 64)))) (bvadd x (shesh (bvnot (_ bv0 64))))))) (im (bvand (_ bv1 64) (ehad x)) (bvnot (_ bv1 64)) (bvadd x (shesh (bvnot (_ bv0 64)))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) x) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd x (shesh (bvnot (_ bv0 64)))) (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvor x (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvor x (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvor x (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (im (bvand (_ bv1 64) (ehad x)) (bvnot (_ bv1 64)) (bvadd x (shesh (bvnot (_ bv0 64))))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvor x (bvnot (_ bv1 64)))))))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (smol (bvnot (_ bv1 64))) (bvadd x (shesh (bvnot (_ bv0 64))))))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvor x (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (bvand x (ehad x))) (bvnot (_ bv1 64)) (im (bvand (_ bv1 64) (ehad x)) (smol (bvnot (_ bv1 64))) (bvadd x (shesh (bvnot (_ bv0 64))))))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (smol (bvnot (_ bv1 64))) (bvadd x (shesh (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvor x (bvnot (_ bv1 64))))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvor x (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd x (shesh (bvnot (_ bv0 64)))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvor x (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvor x (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvor x (bvnot (_ bv1 64)))))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvor x (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (im (bvand (_ bv1 64) (ehad x)) (bvnot (_ bv1 64)) (bvadd x (shesh (bvnot (_ bv0 64)))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvor x (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (bvnot (_ bv1 64)) (bvadd x (shesh (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (im (bvand (_ bv1 64) (ehad x)) (bvnot (_ bv1 64)) (bvadd x (shesh (bvnot (_ bv0 64))))))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvor x (bvnot (_ bv1 64))))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (smol (bvnot (_ bv1 64))) (bvadd x (shesh (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (smol (bvnot (_ bv1 64))) (bvadd x (shesh (bvnot (_ bv0 64)))))) (im (bvand (_ bv1 64) (ehad x)) (smol (bvnot (_ bv1 64))) (bvadd x (shesh (bvnot (_ bv0 64)))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (ehad x)) (smol (bvnot (_ bv1 64))) (bvadd x (shesh (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64)))) (smol (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (ehad x)) (smol (bvnot (_ bv1 64))) (bvadd x (shesh (bvnot (_ bv0 64)))))) (im (bvand (_ bv1 64) (ehad x)) (smol (bvnot (_ bv1 64))) (bvadd x (shesh (bvnot (_ bv0 64)))))))))))

real	0m7.602s
user	0m7.522s
sys	0m0.059s
PRE_130_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (bvadd (_ bv1 64) (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvadd (_ bv1 64) (shesh (bvnot (_ bv0 64)))) (smol (_ bv1 64)))))

real	0m0.063s
user	0m0.056s
sys	0m0.006s
PRE_130_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (shesh (bvnot x))) (bvadd (_ bv1 64) (shesh (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (smol (_ bv1 64)))))

real	0m0.273s
user	0m0.263s
sys	0m0.009s
PRE_130_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (smol (_ bv1 64)) (bvadd (_ bv1 64) (shesh (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (bvadd (_ bv1 64) (shesh (bvnot x))))))

real	0m2.479s
user	0m2.422s
sys	0m0.049s
PRE_131_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (arba (ehad (bvnot x))) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) x) (arba (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (arba (ehad (bvnot x))) (bvxor (_ bv1 64) x)))))

real	0m0.032s
user	0m0.028s
sys	0m0.004s
PRE_131_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (arba (ehad (bvnot x))) (bvxor (_ bv1 64) x)))

real	0m0.112s
user	0m0.108s
sys	0m0.003s
PRE_131_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (arba (ehad (bvnot x))) (bvxor (_ bv1 64) x)))

real	0m1.012s
user	0m0.985s
sys	0m0.025s
PRE_132_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd (_ bv1 64) x) (bvnot (smol x))))

real	0m0.062s
user	0m0.058s
sys	0m0.004s
PRE_132_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd (_ bv1 64) x) (bvnot (smol x))))

real	0m0.255s
user	0m0.252s
sys	0m0.002s
PRE_132_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd (_ bv1 64) x) (bvnot (smol x))))

real	0m2.497s
user	0m2.444s
sys	0m0.046s
PRE_133_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) (bvxor (_ bv1 64) x)) x))

real	0m0.017s
user	0m0.012s
sys	0m0.005s
PRE_133_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) x (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) (bvand x (bvadd (_ bv1 64) x)))))

real	0m0.075s
user	0m0.070s
sys	0m0.005s
PRE_133_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (_ bv1 64) x) (bvand x (bvadd (_ bv1 64) x))))

real	0m0.657s
user	0m0.639s
sys	0m0.016s
PRE_134_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (arba x))) (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (shesh (ehad (smol (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (shesh (ehad (smol (bvnot x)))) (shesh (ehad (bvnot (_ bv0 64))))))))

real	0m0.291s
user	0m0.284s
sys	0m0.006s
PRE_134_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (shesh (ehad (smol (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (shesh (ehad (smol (bvnot x)))) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) (shesh (ehad (bvnot (_ bv0 64)))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (shesh (ehad (smol (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (shesh (bvnot x)) (_ bv1 64))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (shesh (ehad (smol (bvnot x)))) (bvand (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (bvnot x)) (im (bvand (_ bv1 64) (bvxor x (arba x))) (shesh (ehad (smol (bvnot x)))) (_ bv1 64)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) (shesh (ehad (smol (bvnot x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (shesh (ehad (smol (bvnot x)))) (shesh (ehad (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (arba x)) (shesh (ehad (smol (bvnot x)))) (shesh (ehad (bvnot (_ bv0 64)))))))))

real	0m1.344s
user	0m1.323s
sys	0m0.016s
PRE_134_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (shesh (ehad (bvnot (_ bv0 64)))) (shesh (ehad (smol (bvnot x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) (shesh (ehad (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) (shesh (ehad (smol (bvnot x))))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvand (_ bv1 64) x) (shesh (ehad (smol (bvnot x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) (shesh (ehad (smol (bvnot x))))) (shesh (ehad (smol (bvnot x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) (shesh (ehad (smol (bvnot x)))))))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) (shesh (ehad (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) (shesh (ehad (smol (bvnot x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (shesh (ehad (smol (bvnot x)))) (shesh (ehad (bvnot (_ bv0 64))))))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) (shesh (ehad (smol (bvnot x))))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvand (_ bv1 64) x) (shesh (ehad (smol (bvnot x))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) (shesh (ehad (smol (bvnot x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvand (_ bv1 64) x) (shesh (ehad (smol (bvnot x))))))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvand (_ bv1 64) x) (shesh (ehad (smol (bvnot x))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) (shesh (ehad (smol (bvnot x))))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (ehad (smol (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) (shesh (ehad (smol (bvnot x)))))))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) (shesh (ehad (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvand (_ bv1 64) x) (shesh (ehad (smol (bvnot x))))))))

real	0m12.483s
user	0m12.326s
sys	0m0.114s
PRE_135_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvxor (_ bv1 64) x) (arba (bvadd x (smol x)))))

real	0m0.047s
user	0m0.042s
sys	0m0.005s
PRE_135_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (arba (bvadd x (smol x))) (bvxor (_ bv1 64) x)))

real	0m0.188s
user	0m0.180s
sys	0m0.007s
PRE_135_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (arba (bvadd x (smol x))) (bvxor (_ bv1 64) x)))

real	0m1.695s
user	0m1.658s
sys	0m0.033s
PRE_136_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (_ bv1 64)) (bvnot (bvxor (_ bv1 64) (ehad x)))) (smol x)))

real	0m0.042s
user	0m0.036s
sys	0m0.006s
PRE_136_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (smol x) (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) x) (smol x) (bvnot (bvxor (_ bv1 64) (ehad x))))))

real	0m0.159s
user	0m0.153s
sys	0m0.005s
PRE_136_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (smol x) (im (bvand (_ bv1 64) (shesh x)) (bvnot (_ bv1 64)) (bvnot (bvxor (_ bv1 64) (ehad x))))))

real	0m1.444s
user	0m1.414s
sys	0m0.025s
PRE_137_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (bvor x (ehad x)) (smol (bvor (_ bv1 64) x))) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba x)) (bvor x (ehad x)) (im (bvand (_ bv1 64) x) (bvor x (ehad x)) (smol (bvor (_ bv1 64) x))))))

real	0m0.022s
user	0m0.018s
sys	0m0.004s
PRE_137_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (smol (bvor (_ bv1 64) x)) (bvor x (ehad x))))

real	0m0.064s
user	0m0.059s
sys	0m0.005s
PRE_137_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (smol (bvor (_ bv1 64) x)) (bvor x (ehad x))))

real	0m0.592s
user	0m0.574s
sys	0m0.016s
PRE_138_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) x) (shesh (smol x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (smol x)) (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) x)))

real	0m0.062s
user	0m0.058s
sys	0m0.004s
PRE_138_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x)) (shesh (smol x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) x) (shesh (smol x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvnot x)) (shesh (smol x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x)) (shesh (smol x)))))))

real	0m0.371s
user	0m0.362s
sys	0m0.008s
PRE_138_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x)))

real	0m2.412s
user	0m2.358s
sys	0m0.047s
PRE_139_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) x (smol (bvor (_ bv1 64) x))))

real	0m0.014s
user	0m0.013s
sys	0m0.000s
PRE_139_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) x (smol (bvor (_ bv1 64) x))))

real	0m0.042s
user	0m0.036s
sys	0m0.005s
PRE_139_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) x (smol (bvor (_ bv1 64) x))))

real	0m0.391s
user	0m0.378s
sys	0m0.012s
PRE_13_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) (arba x)) (arba x)) (_ bv0 64)))

real	0m0.063s
user	0m0.056s
sys	0m0.006s
PRE_13_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (arba x) (_ bv0 64))) (arba (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) x))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (_ bv0 64) (arba (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (_ bv0 64) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (arba (im (bvand (_ bv1 64) (arba x)) x (_ bv0 64))) (arba x))))) (im (ehad (bvxor x (bvadd (_ bv1 64) (bvxor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (arba x) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (smol x))) (arba x) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (arba x)))) (im (arba (smol (bvxor x (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (arba x) (_ bv0 64)) (im (bvand (_ bv1 64) (bvand x (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (arba x)) (im (bvand (_ bv1 64) (bvor x (arba x))) (_ bv0 64) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (arba x) (_ bv0 64)))))))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba x) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba x) (_ bv0 64))) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (arba x) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (_ bv0 64) (arba x))))) (arba (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) (im (bvand (_ bv1 64) (arba (arba x))) (_ bv0 64) (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) (arba (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) x)))))))

real	0m3.247s
user	0m3.196s
sys	0m0.041s
PRE_13_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba x) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (arba x)) (_ bv0 64)) (arba x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (arba x) (im (bvand (_ bv1 64) (arba (smol x))) (arba x) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (arba (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) x)) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (_ bv0 64) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (arba x)))))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad x)) (arba (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x)) (_ bv0 64)) (im (bvand (_ bv1 64) (arba (smol x))) (arba x) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) x)) (im (ehad (ehad (bvxor x (bvadd (_ bv1 64) x)))) (arba x) (_ bv0 64))))) (im (bvand (_ bv1 64) (ehad x)) (arba x) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba x) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x)) (_ bv0 64)))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (arba x) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba x) (_ bv0 64))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (arba x) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) (arba x)))) (arba x)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad x)) (arba x) (im (arba (bvxor x (bvadd x (bvnot (_ bv1 64))))) (arba x) (_ bv0 64))) (im (shesh (shesh (bvand x (shesh x)))) (arba x) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (_ bv0 64) (arba (im (bvand (_ bv1 64) (ehad x)) x (_ bv0 64))))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (arba x)) (arba x)) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (arba x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (arba x) (_ bv0 64)))))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (arba x) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) (im (bvand (_ bv1 64) (arba (ehad x))) (arba x) (_ bv0 64)))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba x) (_ bv0 64))) (arba x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) (arba x)) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (_ bv0 64) (arba x))) (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (arba x) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba x) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (_ bv0 64) (arba x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (arba x) (_ bv0 64)) (_ bv0 64)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (arba x)))))) (_ bv0 64)) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (bvand x (shesh x))) (arba x) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (arba x) (_ bv0 64)) (arba x)) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (_ bv0 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (arba x))) (arba x) (_ bv0 64)) (_ bv0 64)))) (im (bvand (_ bv1 64) (bvand x (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba x) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) (arba x)) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba x) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba x) (_ bv0 64))) (_ bv0 64))))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (arba x) (im (bvand (_ bv1 64) (arba (smol x))) (arba x) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (arba x) (_ bv0 64)))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba x) (_ bv0 64)) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (_ bv0 64) (arba x))) (arba x))) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba x) (_ bv0 64)) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (arba (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x)) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (arba x) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (arba x) (_ bv0 64)) (arba x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (arba x)) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (_ bv0 64) (arba x)))) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba x) (arba (im (bvand (_ bv1 64) (shesh x)) x (_ bv0 64)))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (arba (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) x)) (_ bv0 64)))) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba x) (_ bv0 64)) (arba x))) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba x) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x)) (_ bv0 64))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) x) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba x) (_ bv0 64))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba (im (bvand (_ bv1 64) x) (_ bv0 64) x)) (arba (im (bvand (_ bv1 64) x) x (_ bv0 64)))) (arba x))) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (shesh (bvand x (smol x))) (arba x) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (arba x) (im (bvand (_ bv1 64) (arba (smol x))) (arba (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x)) (_ bv0 64))) (_ bv0 64)) (arba (im (bvand (_ bv1 64) (shesh x)) x (_ bv0 64))))) (im (arba (bvxor x (bvadd x (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (_ bv0 64) (arba x)) (arba x)) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (arba x) (_ bv0 64))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) (arba x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) (arba x))) (arba x)) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (arba x)) (im (bvand (_ bv1 64) (arba (ehad x))) (arba x) (_ bv0 64))) (arba x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) (arba x) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba x) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (ehad x))) (arba x) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba x) (_ bv0 64))))) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba x) (_ bv0 64)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (smol x))) (arba x) (_ bv0 64))) (arba x))) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (arba x) (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) (arba (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (arba (smol (bvxor x (bvadd (_ bv1 64) x)))) (arba x) (_ bv0 64)) (arba x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (_ bv0 64) (arba (im (bvand (_ bv1 64) (ehad x)) x (_ bv0 64))))))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (arba x) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) (arba x))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba x) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (_ bv0 64) (arba x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba x) (_ bv0 64))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba x) (_ bv0 64)) (_ bv0 64)) (arba x)) (arba x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (arba x) (_ bv0 64)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (arba x))) (arba x) (_ bv0 64))) (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba x) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) (arba x)) (im (bvand (_ bv1 64) (shesh (arba x))) (arba x) (_ bv0 64))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba x) (_ bv0 64)) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba x) (_ bv0 64)))) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (arba x) (_ bv0 64)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (arba x) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (_ bv0 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) (arba x)))) (arba x))))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) (arba x))) (arba (im (bvand (_ bv1 64) (shesh x)) x (_ bv0 64)))) (im (arba (bvxor x (bvadd x (bvnot (_ bv1 64))))) (arba x) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (_ bv0 64) (arba x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (arba x) (_ bv0 64))) (arba x)) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba x) (_ bv0 64)) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (arba x) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (arba x) (_ bv0 64))) (arba x)))))) (_ bv0 64)) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (arba (bvand x (bvadd (_ bv1 64) (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (arba x) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (arba x) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (arba (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x)) (_ bv0 64)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (arba (im (bvand (_ bv1 64) (shesh x)) x (_ bv0 64))) (arba x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (arba x))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (arba x) (_ bv0 64)) (_ bv0 64)) (arba x)) (arba x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (arba (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (arba x) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba x) (_ bv0 64)) (_ bv0 64)))) (_ bv0 64)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (_ bv0 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba x) (_ bv0 64)) (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (_ bv0 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba x) (_ bv0 64))) (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (arba x) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (_ bv0 64) (arba x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba x) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) (arba x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (smol x))) (arba x) (_ bv0 64)) (arba x))))) (_ bv0 64))))))

real	0m59.761s
user	0m59.142s
sys	0m0.459s
PRE_140_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) (smol (bvand x (smol x)))) (smol (bvand x (smol x)))) (smol x)) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (smol x) (smol (bvand x (smol x))))))

real	0m0.066s
user	0m0.063s
sys	0m0.003s
PRE_140_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (smol (bvand x (smol x))) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvand x (smol x))) (smol x))) (im (bvand (_ bv1 64) (arba x)) (smol (bvand x (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvand x (smol x))) (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvand x (smol x))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvand x (smol x))) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvand x (smol x))) (bvor (_ bv1 64) (smol x))))) (smol (bvand x (smol x))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (smol x) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvand x (smol x))) (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (bvand x (smol x))) (smol x)) (smol (bvand x (smol x))))) (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvand x (smol x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba x)) (smol (bvand x (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvand x (smol x))) (bvor (_ bv1 64) (smol x)))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad x)) (smol (bvand x (smol x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvand x (smol x))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvand x (smol x))) (smol x)) (im (bvand (_ bv1 64) (ehad x)) (smol (bvand x (smol x))) (im (bvand (_ bv1 64) (arba x)) (smol (bvand x (smol x))) (smol x))))))))

real	0m0.454s
user	0m0.441s
sys	0m0.011s
PRE_140_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvand x (smol x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvand x (smol x))) (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvand x (smol x))) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvand x (smol x))) (bvor (_ bv1 64) (smol x))))))

real	0m2.832s
user	0m2.774s
sys	0m0.046s
PRE_141_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvxor x (ehad (ehad x))))) (im (bvand (_ bv1 64) (shesh (bvand x (shesh x)))) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (bvadd x (ehad x))))) (shesh (arba x)) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x)))))) (im (bvand (_ bv1 64) (ehad (bvadd x (shesh x)))) (_ bv0 64) (im (bvand (_ bv1 64) (bvnot (bvor x (arba (arba x))))) (shesh (arba x)) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x))))))))

real	0m9.514s
user	0m9.388s
sys	0m0.093s
PRE_141_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvor (_ bv1 64) (arba (bvand x (bvadd (_ bv1 64) (bvnot x))))) (im (bvor (_ bv1 64) (arba (bvxor x (bvadd (_ bv1 64) (bvor (_ bv1 64) x))))) (im (bvxor (_ bv1 64) (arba (bvand x (bvadd (_ bv1 64) (bvnot x))))) (im (bvxor (_ bv1 64) (arba (smol (bvxor x (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh (arba x))))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba (smol x))))) (im (bvand (_ bv1 64) (shesh (arba (bvor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (shesh (bvor x (arba x))))) (im (bvxor (_ bv1 64) (arba (bvxor x (bvadd (_ bv1 64) (bvor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (arba (bvor x (smol (bvnot x))))) (im (bvand (_ bv1 64) (arba (bvor x (bvadd x (shesh x))))) (im (bvand (_ bv1 64) (shesh (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (bvor x (bvadd x (ehad x))))) (im (bvand (_ bv1 64) (arba (bvor x (ehad (ehad x))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvnot x)) (shesh (arba (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x))) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x))))) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x))))) (shesh (arba (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x)))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x)))) (shesh (arba x)))) (_ bv0 64)) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x))))) (shesh (arba (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x)))) (shesh (arba (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x)))) (im (bvand (_ bv1 64) (bvand x (ehad (ehad x)))) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x)))) (_ bv0 64))) (im (bvand (_ bv1 64) (bvand x (shesh x))) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x)))) (_ bv0 64))) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x))))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba (smol x))))) (im (bvand (_ bv1 64) (shesh (arba (bvor x (shesh x))))) (im (bvand (_ bv1 64) (arba (bvadd x (smol (shesh x))))) (shesh (arba x)) (im (bvand (_ bv1 64) (ehad (ehad (bvadd (_ bv1 64) (ehad x))))) (shesh (arba x)) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x)))))) (im (bvand (_ bv1 64) (shesh (arba (arba x)))) (shesh (arba x)) (im (bvand (_ bv1 64) (shesh (ehad (bvxor x (shesh x))))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x)))) (shesh (arba x))) (shesh (arba x))))) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x)))))) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x))))) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x))))) (shesh (arba (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x)))) (shesh (arba (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x)))) (_ bv0 64)))

real	0m58.646s
user	0m57.953s
sys	0m0.507s
PRE_141_1000.sl
CVC4 interrupted by SIGTERM.
timeout: the monitored command dumped core

real	5m9.182s
user	4m54.990s
sys	0m6.800s
PRE_142_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (bvxor (_ bv1 64) (arba x)) (arba x)) (bvadd x (smol x))) (bvadd x (smol x))))

real	0m0.022s
user	0m0.017s
sys	0m0.005s
PRE_142_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvadd x (smol x)) (im (bvand (_ bv1 64) (arba x)) (bvxor (_ bv1 64) (arba x)) (arba x))))

real	0m0.066s
user	0m0.062s
sys	0m0.004s
PRE_142_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (bvxor (_ bv1 64) (arba x)) (arba x)) (bvadd x (smol x))))

real	0m0.648s
user	0m0.621s
sys	0m0.025s
PRE_143_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (bvnot (shesh (shesh (bvnot x)))) (smol (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvnot (shesh (shesh (bvnot x)))) (smol (arba (bvnot x))))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (smol (arba (bvnot x))) (bvnot (shesh (shesh (bvnot x)))))))

real	0m0.318s
user	0m0.308s
sys	0m0.009s
PRE_143_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvnot (shesh (shesh (bvnot x)))) (ehad (ehad (ehad (bvnot x))))) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvnot (shesh (shesh (bvnot x)))) (ehad (ehad (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvnot (shesh (shesh (bvnot x)))) (ehad (ehad (ehad (bvnot x))))) (ehad (ehad (ehad (bvnot x))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvnot (shesh (shesh (bvnot x)))) (ehad (ehad (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba (smol (bvnot x))) (bvnot (shesh (shesh (bvnot x))))) (arba (smol (bvnot x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (bvnot (shesh (shesh (bvnot x)))) (ehad (ehad (ehad (bvnot x))))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvnot (shesh (shesh (bvnot x)))) (ehad (ehad (ehad (bvnot x)))))))) (ehad (ehad (ehad (bvnot x))))) (bvnot (shesh (shesh (bvnot x))))))

real	0m1.392s
user	0m1.373s
sys	0m0.015s
PRE_143_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (ehad x)) (ehad (ehad (ehad (bvnot x)))) (bvnot (shesh (shesh (bvnot x))))) (bvnot (shesh (shesh (bvnot x))))) (ehad (ehad (ehad (bvnot x))))) (ehad (ehad (ehad (bvnot x))))) (bvnot (shesh (shesh (bvnot x))))))

real	0m11.042s
user	0m10.910s
sys	0m0.101s
PRE_144_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) x) (bvnot (arba (bvnot (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (bvxor x (shesh x)) (bvnot (arba x))) (bvxor x (shesh x)))) (bvnot (arba x))))

real	0m0.313s
user	0m0.307s
sys	0m0.006s
PRE_144_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (arba (bvnot (ehad x)))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvnot (arba x)) (bvnot (arba (bvnot (ehad x)))))) (im (bvand (_ bv1 64) x) (bvnot (arba (bvnot (ehad x)))) (bvnot (arba x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba x)) (bvnot (arba (bvnot (ehad x)))) (im (bvand (_ bv1 64) (bvnot x)) (bvnot (arba x)) (bvnot (arba (bvnot (ehad x)))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (arba (bvnot (ehad x)))) (im (bvand (_ bv1 64) x) (bvnot (arba (bvnot (ehad x)))) (bvxor x (shesh x))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) x) (bvnot (arba (bvnot (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (arba x)) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) x) (bvnot (arba (bvnot (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (bvxor x (shesh x)) (bvnot (arba x))))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (bvxor x (shesh x)) (bvnot (arba (bvnot (ehad x))))) (bvnot (arba (bvnot (ehad x))))) (im (bvand (_ bv1 64) (bvnot x)) (bvxor x (shesh x)) (bvnot (arba (bvnot (ehad x)))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) x) (bvnot (arba (bvnot (ehad x)))) (bvxor x (shesh x))) (bvnot (arba (bvnot (ehad x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (arba (bvnot (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (bvnot (arba x)) (bvnot (arba (bvnot (ehad x))))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (arba x)) (bvxor x (shesh x))) (bvnot (arba (bvnot (ehad x)))))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvxor x (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (arba x)) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (arba x)) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvxor x (shesh x)) (bvnot (arba x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (arba x)) (bvxor x (shesh x))) (bvnot (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (arba x)) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (arba x)) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvxor x (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (arba x)) (bvxor x (shesh x))) (bvnot (arba x)))))))))

real	0m1.508s
user	0m1.489s
sys	0m0.015s
PRE_144_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvnot (arba (bvnot (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (arba x)) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (arba x)) (bvxor x (shesh x)))) (bvnot (arba (bvnot (ehad x))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) x) (bvnot (arba (bvnot (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (arba x)) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (arba x)) (bvxor x (shesh x)))) (bvnot (arba (bvnot (ehad x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (arba x)) (bvxor x (shesh x)))))

real	0m11.551s
user	0m11.409s
sys	0m0.111s
PRE_145_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (smol x) (ehad (smol x))) x) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (ehad (smol x)))) x))

real	0m0.064s
user	0m0.060s
sys	0m0.004s
PRE_145_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (ehad (smol x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol x) x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (ehad (smol x))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (ehad (smol x)) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) x (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (ehad (smol x)) (smol x)))))) (ehad (smol x))))

real	0m0.381s
user	0m0.371s
sys	0m0.009s
PRE_145_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (ehad (smol x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (smol x) (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (im (bvand (_ bv1 64) (arba (ehad x))) (ehad (smol x)) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x)))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) x) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) (im (bvand (_ bv1 64) (arba (ehad x))) (ehad (smol x)) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (ehad (smol x)) (im (bvand (_ bv1 64) (arba (arba x))) (ehad (smol x)) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (smol x)) (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x)))))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (im (bvand (_ bv1 64) (arba (arba x))) (ehad (smol x)) (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (ehad (smol x)) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x))) (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x)))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (ehad (smol x)) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (ehad (smol x)) (im (bvand (_ bv1 64) (arba (arba x))) (smol x) (ehad (smol x)))) (ehad (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (smol x)) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x)))))))))) (im (bvand (_ bv1 64) (bvnot x)) (ehad (smol x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (ehad (smol x)) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) x) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (ehad (smol x))))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (smol x)) (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (ehad (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (smol x)) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) (ehad (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (ehad (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (smol x)) (smol x)) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) (im (bvand (_ bv1 64) (arba (arba x))) (smol x) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (smol x)) (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (smol x)) (im (bvand (_ bv1 64) (arba (arba x))) (ehad (smol x)) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol x) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (ehad (smol x))))))))))))

real	0m7.825s
user	0m7.755s
sys	0m0.048s
PRE_146_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) (smol x)) x))) x) x))

real	0m0.064s
user	0m0.058s
sys	0m0.006s
PRE_146_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) (smol x)) (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) (smol x)) x) x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) x (im (bvand (_ bv1 64) (ehad (ehad x))) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) x) x (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) x (bvor (_ bv1 64) (smol x))) x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) x (_ bv1 64)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (ehad (ehad x))) (bvor (_ bv1 64) (smol x)) (_ bv1 64)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvor (_ bv1 64) (smol x))) x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (ehad (ehad x))) x (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) x) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) x) x (bvor (_ bv1 64) (smol x))) x))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) x) (_ bv1 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvor (_ bv1 64) (smol x)) x) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) x) x (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) (smol x)) x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvor (_ bv1 64) (smol x)) x) x)) (_ bv1 64)) (im (bvand (_ bv1 64) (arba x)) x (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) x) x (bvor (_ bv1 64) (smol x)))))))))

real	0m0.437s
user	0m0.424s
sys	0m0.012s
PRE_146_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvor (_ bv1 64) (smol x)) x) x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) x (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (bvor (_ bv1 64) (smol x)) x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) x (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvor (_ bv1 64) (smol x)) x) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (bvor (_ bv1 64) (smol x)) x) x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (shesh x)) x (bvor (_ bv1 64) (smol x))))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) x (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) x (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) x)) (bvor (_ bv1 64) (smol x)))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) x (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (bvor (_ bv1 64) (smol x)) x) x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (shesh (smol x))) x (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) x) x) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) x) (im (bvand (_ bv1 64) (shesh x)) x (bvor (_ bv1 64) (smol x)))))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) x (bvor (_ bv1 64) (smol x))) x) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) (smol x)) x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) x (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) x (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) (smol x)) x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) x (bvor (_ bv1 64) (smol x))) x)) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) x (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) x (bvor (_ bv1 64) (smol x)))))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvor (_ bv1 64) (smol x)) x) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh x)) x (bvor (_ bv1 64) (smol x))) x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh x)) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) x (bvor (_ bv1 64) (smol x)))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) x (bvor (_ bv1 64) (smol x))) x) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (shesh (arba x))) x (bvor (_ bv1 64) (smol x)))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) x (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvor (_ bv1 64) (smol x)))))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) x (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol x))) x (bvor (_ bv1 64) (smol x))) x) x)) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (arba (arba (ehad x)))) x (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (bvor (_ bv1 64) (smol x)) x) x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) x (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) x (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) x (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvor (_ bv1 64) (smol x)) x))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) x (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (shesh (arba x))) x (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (bvor (_ bv1 64) (smol x)) x))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (im (bvand (_ bv1 64) (shesh (arba x))) (bvor (_ bv1 64) (smol x)) x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor (_ bv1 64) (smol x)) x) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvor (_ bv1 64) (smol x)) x) x) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvor (_ bv1 64) (smol x)) x) (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) (smol x)) x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) x (im (bvand (_ bv1 64) (shesh x)) x (bvor (_ bv1 64) (smol x))))))))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) x (bvor (_ bv1 64) (smol x))) x) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) x (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) x (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) x) (im (bvand (_ bv1 64) (shesh (arba x))) x (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvor (_ bv1 64) (smol x)) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) x (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (shesh (arba x))) x (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) x) (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) x (bvor (_ bv1 64) (smol x))) x) (im (bvand (_ bv1 64) (shesh (shesh x))) x (bvor (_ bv1 64) (smol x))))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) x (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (shesh (arba x))) x (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor (_ bv1 64) (smol x)) x) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) x) x)) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (bvor (_ bv1 64) (smol x)) x) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) x (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh x)) x (bvor (_ bv1 64) (smol x))) x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvor (_ bv1 64) (smol x))) x)) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) x (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) (smol x)) x) x))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (bvor (_ bv1 64) (smol x)) x) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) x (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvor (_ bv1 64) (smol x)) x) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) x (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) x (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) x) x) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) x (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x)))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) x (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvor (_ bv1 64) (smol x)) x) x)) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (shesh (arba x))) x (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) x (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (bvor (_ bv1 64) (smol x)) x) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) x (bvor (_ bv1 64) (smol x))) x) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) x (bvor (_ bv1 64) (smol x)))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvor (_ bv1 64) (smol x)) x) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) x (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) (smol x)) x) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) x (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) x (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (shesh x)) x (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvor (_ bv1 64) (smol x)) x) (bvor (_ bv1 64) (smol x))))))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) x (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (ehad (smol (im (bvand (_ bv1 64) x) (_ bv1 64) x))) x) (im (bvand (_ bv1 64) (arba (smol x))) (ehad (smol (im (bvand (_ bv1 64) x) (_ bv1 64) x))) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (ehad (smol (im (bvand (_ bv1 64) x) (_ bv1 64) x))) x) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (ehad (smol (im (bvand (_ bv1 64) x) (_ bv1 64) x))) x) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) x)) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) x) x) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) x))))))))

real	1m6.177s
user	1m5.494s
sys	0m0.500s
PRE_147_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvnot x) (bvnot (bvadd x (smol x)))))

real	0m0.046s
user	0m0.044s
sys	0m0.002s
PRE_147_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvnot x)) (bvnot (bvadd x (smol x))) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (bvnot x) (bvnot (bvadd x (smol x)))) (im (bvand (_ bv1 64) (bvnot x)) (bvnot (bvadd x (smol x))) (bvnot x)))))

real	0m0.212s
user	0m0.205s
sys	0m0.007s
PRE_147_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvnot (bvadd x (smol x))) (bvnot x)))

real	0m1.650s
user	0m1.613s
sys	0m0.032s
PRE_148_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (shesh (arba (ehad x))) (smol (bvand x (smol x)))) (shesh (arba (ehad x)))) (im (bvand (_ bv1 64) (ehad x)) (smol (bvand x (smol x))) (shesh (arba (ehad x))))))

real	0m0.046s
user	0m0.042s
sys	0m0.004s
PRE_148_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (shesh (arba (ehad x))) (smol (bvand x (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (smol (bvand x (smol x))) (shesh (arba (ehad x))))))

real	0m0.204s
user	0m0.199s
sys	0m0.005s
PRE_148_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (shesh (arba (ehad x))) (smol (bvand x (smol x)))) (im (bvand (_ bv1 64) (arba x)) (smol (bvand x (smol x))) (shesh (arba (ehad x))))))

real	0m1.850s
user	0m1.815s
sys	0m0.030s
PRE_149_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvnot (shesh (arba x))) (smol (_ bv1 64))))

real	0m0.036s
user	0m0.032s
sys	0m0.004s
PRE_149_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (smol (_ bv1 64)) (bvnot (shesh (arba x)))))

real	0m0.129s
user	0m0.125s
sys	0m0.004s
PRE_149_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvnot (shesh (arba x))) (smol (_ bv1 64))))

real	0m1.156s
user	0m1.129s
sys	0m0.023s
PRE_14_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (bvand x (arba x))) (shesh (bvor x (shesh x)))) (bvnot (bvand x (arba x)))))

real	0m0.063s
user	0m0.058s
sys	0m0.004s
PRE_14_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (shesh (bvor x (shesh x))) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (arba x)) (bvnot (bvand x (arba x))) (shesh (bvor x (shesh x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (shesh (bvor x (shesh x))) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (bvnot (bvand x (arba x))) (shesh (bvor x (shesh x)))) (shesh (bvor x (shesh x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (shesh (bvor x (shesh x))) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (arba x)) (bvnot (bvand x (arba x))) (shesh (bvor x (shesh x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (shesh (bvor x (shesh x))) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (ehad x)) (bvnot (bvand x (arba x))) (im (bvand (_ bv1 64) (arba x)) (bvnot (bvand x (arba x))) (shesh (bvor x (shesh x)))))))))

real	0m0.315s
user	0m0.306s
sys	0m0.007s
PRE_14_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (bvor x (shesh x))) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (bvand x (arba x))) (shesh (bvor x (shesh x))))))

real	0m2.581s
user	0m2.526s
sys	0m0.048s
PRE_150_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (arba (ehad (bvnot x))) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh x)) (shesh (smol x)) (arba (ehad (bvnot x))))) (im (bvand (_ bv1 64) x) (shesh (smol x)) (im (bvand (_ bv1 64) (shesh x)) (shesh (smol x)) (arba (ehad (bvnot x)))))))

real	0m0.034s
user	0m0.031s
sys	0m0.003s
PRE_150_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (shesh (smol x)) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (shesh (smol x)) (arba (ehad (bvnot x)))) (arba (ehad (bvnot x))))) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (shesh (smol x)) (arba (ehad (bvnot x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (shesh (smol x)) (arba (ehad (bvnot x))))) (arba (ehad (bvnot x))))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba (ehad (bvnot x))) (shesh (smol x))) (shesh (smol x)))))

real	0m0.348s
user	0m0.343s
sys	0m0.004s
PRE_150_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba (ehad (bvnot x))) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (shesh (smol x)) (arba (ehad (bvnot x))))) (im (bvand (_ bv1 64) (shesh x)) (shesh (smol x)) (arba (ehad (bvnot x))))))

real	0m2.893s
user	0m2.834s
sys	0m0.050s
PRE_15_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (smol (ehad x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) x (smol (_ bv1 64))) (im (bvand (_ bv1 64) (shesh x)) (smol (_ bv1 64)) (im (bvand (_ bv1 64) (ehad (ehad x))) x (smol (_ bv1 64)))))))

real	0m0.065s
user	0m0.061s
sys	0m0.004s
PRE_15_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol (_ bv1 64)) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (arba x))) (smol (_ bv1 64)) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (smol (_ bv1 64)) (bvxor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (smol (_ bv1 64)) (bvxor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol (_ bv1 64)) x)))

real	0m0.339s
user	0m0.329s
sys	0m0.009s
PRE_15_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (arba x))) (smol (_ bv1 64)) (smol (ehad x))))

real	0m2.592s
user	0m2.534s
sys	0m0.051s
PRE_16_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (ehad (bvadd (_ bv1 64) x)) (smol (bvnot (bvxor (_ bv1 64) x)))) (smol (bvnot (bvxor (_ bv1 64) x)))))

real	0m0.039s
user	0m0.033s
sys	0m0.005s
PRE_16_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (ehad (bvadd (_ bv1 64) x)) (smol (bvnot (bvxor (_ bv1 64) x)))))

real	0m0.142s
user	0m0.139s
sys	0m0.003s
PRE_16_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (ehad (bvadd (_ bv1 64) x)) (smol (bvnot (bvxor (_ bv1 64) x)))))

real	0m1.281s
user	0m1.247s
sys	0m0.030s
PRE_17_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvnot (smol (_ bv1 64))) (smol (_ bv1 64))))

real	0m0.013s
user	0m0.008s
sys	0m0.005s
PRE_17_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvnot (smol (_ bv1 64))) (smol (_ bv1 64))))

real	0m0.030s
user	0m0.025s
sys	0m0.004s
PRE_17_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvnot (smol (_ bv1 64))) (smol (_ bv1 64))))

real	0m0.230s
user	0m0.220s
sys	0m0.010s
PRE_18_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba x)) (smol x) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvand x (smol (shesh x))) (smol x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (_ bv0 64) (smol x))))

real	0m0.097s
user	0m0.088s
sys	0m0.009s
PRE_18_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (smol (im (bvand (_ bv1 64) x) x (_ bv0 64))) (bvand x (smol (shesh x)))) (im (bvand (_ bv1 64) (arba x)) (smol (im (bvand (_ bv1 64) x) x (_ bv0 64))) (bvand x (smol (shesh x))))) (smol (im (bvand (_ bv1 64) x) x (_ bv0 64)))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (smol (im (bvand (_ bv1 64) x) x (_ bv0 64))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (smol (im (bvand (_ bv1 64) x) x (_ bv0 64))) (bvand x (smol (shesh x)))) (bvand x (smol (shesh x)))))) (smol x)) (im (bvand (_ bv1 64) (bvor x (arba x))) (_ bv0 64) (smol x))))

real	0m0.491s
user	0m0.481s
sys	0m0.008s
PRE_18_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (bvand x (smol (shesh x)))) (bvand x (smol (shesh x)))) (_ bv0 64)) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (bvand x (smol (shesh x)))) (bvand x (smol (shesh x)))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (bvnot x)) (_ bv0 64) (bvand x (smol (shesh x)))) (bvand x (smol (shesh x))))) (_ bv0 64))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (bvand x (smol (shesh x)))) (bvand x (smol (shesh x)))) (_ bv0 64)) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) x) (bvand x (smol (shesh x))) (_ bv0 64)) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) x) (bvand x (smol (shesh x))) (_ bv0 64)) (bvand x (smol (shesh x))))) (_ bv0 64)))) (smol x)) (smol x)) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) x) (bvand x (smol (shesh x))) (_ bv0 64)) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba x)) (smol (im (bvand (_ bv1 64) x) x (_ bv0 64))) (bvand x (smol (shesh x)))) (bvand x (smol (shesh x)))) (_ bv0 64))) (im (bvand (_ bv1 64) (bvand x (ehad x))) (bvand x (smol (shesh x))) (smol (im (bvand (_ bv1 64) x) x (_ bv0 64))))) (smol x)) (smol x))))

real	0m5.548s
user	0m5.460s
sys	0m0.072s
PRE_19_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (arba x)))

real	0m0.019s
user	0m0.014s
sys	0m0.005s
PRE_19_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (bvor (_ bv1 64) (arba x))))

real	0m0.058s
user	0m0.051s
sys	0m0.006s
PRE_19_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (bvor (_ bv1 64) (arba x))))

real	0m0.518s
user	0m0.504s
sys	0m0.013s
PRE_1_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (smol (bvxor x (arba x))) (smol x)))

real	0m0.050s
user	0m0.047s
sys	0m0.003s
PRE_1_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (smol (bvxor x (arba x))) (smol x)))

real	0m0.206s
user	0m0.203s
sys	0m0.003s
PRE_1_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (smol x) (smol (bvxor x (arba x)))))

real	0m1.893s
user	0m1.843s
sys	0m0.045s
PRE_20_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) x (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (_ bv1 64)))

real	0m0.020s
user	0m0.017s
sys	0m0.002s
PRE_20_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor x (smol (_ bv1 64))) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand (_ bv1 64) (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand (_ bv1 64) (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (_ bv0 64)))))

real	0m0.341s
user	0m0.335s
sys	0m0.005s
PRE_20_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (arba x))) x (bvand (_ bv1 64) (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand (_ bv1 64) (bvnot x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv0 64)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) x (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (ehad (ehad x))) x (_ bv1 64)))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (_ bv0 64)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64)))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (arba x))) x (bvand (_ bv1 64) (bvnot x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (_ bv0 64)) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv0 64)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand (_ bv1 64) (bvnot x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (arba x))) x (bvand (_ bv1 64) (bvnot x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64)))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64)))))))

real	0m6.151s
user	0m6.079s
sys	0m0.054s
PRE_21_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (smol (_ bv1 64)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (smol (_ bv1 64)))))

real	0m0.019s
user	0m0.017s
sys	0m0.002s
PRE_21_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (smol (_ bv1 64))) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))))

real	0m0.061s
user	0m0.057s
sys	0m0.004s
PRE_21_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (smol (_ bv1 64))) (im (bvand (_ bv1 64) x) (smol (_ bv1 64)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (im (bvand (_ bv1 64) x) (smol (_ bv1 64)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))))))

real	0m0.873s
user	0m0.859s
sys	0m0.011s
PRE_22_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (bvadd x (smol (smol x))) x) (bvadd x (smol (smol x)))) x))

real	0m0.093s
user	0m0.088s
sys	0m0.004s
PRE_22_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) x (bvadd x (smol (smol x)))))

real	0m0.395s
user	0m0.382s
sys	0m0.011s
PRE_22_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvadd x (smol (smol x))) x) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (bvand x (arba x))) (bvadd x (smol (smol x))) x) (im (bvand (_ bv1 64) (bvxor x (arba x))) x (bvadd x (smol (smol x))))) (im (bvand (_ bv1 64) (bvxor x (arba x))) x (bvadd x (smol (smol x))))) (im (bvand (_ bv1 64) (bvxor x (arba x))) x (bvadd x (smol (smol x))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) x (bvadd x (smol (smol x)))) (im (bvand (_ bv1 64) (bvand x (arba x))) (bvadd x (smol (smol x))) x)) (im (bvand (_ bv1 64) (bvxor x (arba x))) x (bvadd x (smol (smol x))))))))

real	0m4.403s
user	0m4.317s
sys	0m0.073s
PRE_23_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvnot (bvor x (arba x))) (bvnot x)))

real	0m0.049s
user	0m0.045s
sys	0m0.004s
PRE_23_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (bvnot x) (bvnot (bvadd x (ehad x)))) (bvnot (bvor x (arba x)))))

real	0m0.204s
user	0m0.196s
sys	0m0.007s
PRE_23_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (bvnot (bvor x (arba x))) (bvnot x)) (im (bvand (_ bv1 64) x) (bvnot (bvor x (arba x))) (bvnot (bvadd x (ehad x))))))

real	0m1.968s
user	0m1.933s
sys	0m0.030s
PRE_24_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (ehad (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) x) (_ bv1 64))))

real	0m0.066s
user	0m0.060s
sys	0m0.007s
PRE_24_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (ehad x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) x) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) x (_ bv1 64)) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv1 64) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (im (bvand (_ bv1 64) (ehad x)) x (im (bvand (_ bv1 64) (shesh (ehad x))) x (_ bv1 64)))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba x)) x (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) x) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) x (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) x)) (_ bv1 64))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) x (_ bv1 64)) (_ bv1 64))) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) x (_ bv1 64)) (_ bv1 64)) x) (_ bv1 64)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba x)) x (im (bvand (_ bv1 64) (arba (ehad x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv1 64) x)))))))

real	0m0.400s
user	0m0.392s
sys	0m0.007s
PRE_24_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (_ bv1 64) x) (_ bv1 64)) x) (ehad (ehad x))) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad x)) x (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv1 64) (im (bvand (_ bv1 64) (arba (arba x))) (_ bv1 64) x)) x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) x (_ bv1 64)) x)) (ehad (ehad x))) (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) x (_ bv1 64))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) x (_ bv1 64)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) x) x) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (_ bv1 64) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (ehad x)) x (_ bv1 64)) x)))) (im (bvand (_ bv1 64) (arba (smol x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (ehad x)) x (im (bvand (_ bv1 64) x) x (_ bv1 64))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) x) (im (arba (bvxor x (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) x (_ bv1 64)) (_ bv1 64)))))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) x (_ bv1 64)) (_ bv1 64)) x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv1 64) x) (im (bvand (_ bv1 64) x) x (ehad (ehad x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (ehad (ehad x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (arba x))) (_ bv1 64) x) x)) (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) x (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (arba x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (shesh x))) x (_ bv1 64))))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) x (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh x)) x (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) x (im (ehad (bvxor x (bvadd (_ bv1 64) x))) x (_ bv1 64)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (arba x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (shesh x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) x) x))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (ehad x)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) x (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) x (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (arba x))) x (im (bvand (_ bv1 64) (ehad x)) (_ bv1 64) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) x (_ bv1 64))) x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (ehad x)) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv1 64) x) (im (arba (bvxor x (bvadd x (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (_ bv1 64)) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (_ bv1 64)) (_ bv1 64)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) x) (_ bv1 64)) (_ bv1 64)))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) x) (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (_ bv1 64) x) (ehad (ehad x))) (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) x (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) x (_ bv1 64)))) (im (bvand (_ bv1 64) (ehad x)) x (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) x (_ bv1 64)) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (_ bv1 64) x) (_ bv1 64))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvnot x)) x (im (bvand (_ bv1 64) (arba (ehad x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (ehad x)) (im (ehad (ehad (bvxor x (bvadd (_ bv1 64) x)))) x (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) x) (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) x (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (ehad (ehad x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv1 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (ehad (ehad x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (ehad (ehad (bvxor x (bvadd (_ bv1 64) x)))) x (_ bv1 64)) x) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (_ bv1 64) x) x))) (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (arba x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) x (im (bvand (_ bv1 64) (ehad x)) (_ bv1 64) x)) (_ bv1 64)) x) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) x (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) x (_ bv1 64)) x) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) x) (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) x (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (_ bv1 64) x) x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (ehad x)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) x (_ bv1 64)) x) (im (arba (bvxor x (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))) x (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (ehad x))) x (_ bv1 64))))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (shesh (ehad x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (arba x))) (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (ehad x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (arba (ehad x))) x (_ bv1 64))))))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (ehad x)) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) x (im (bvand (_ bv1 64) (arba (arba (ehad x)))) x (_ bv1 64))) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (arba (arba x))) (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) x) (_ bv1 64))))))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) x (_ bv1 64)) (_ bv1 64)) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (im (bvand (_ bv1 64) (arba (arba x))) x (_ bv1 64))) x) x) (ehad (ehad x))) (ehad (ehad x)))) (im (bvand (_ bv1 64) (ehad x)) x (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (_ bv1 64)) (im (bvand (_ bv1 64) (arba (arba x))) (_ bv1 64) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) x (_ bv1 64)))))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) x (im (bvand (_ bv1 64) (shesh (shesh x))) x (_ bv1 64))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) x (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (_ bv1 64) x)) (_ bv1 64))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv1 64) x) (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvnot (bvor x (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) x (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (_ bv1 64) (im (bvand (_ bv1 64) x) x (_ bv1 64))))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) x (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) x)) x) (im (arba (smol (bvxor x (bvadd (_ bv1 64) x)))) x (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad x)) x (_ bv1 64)) (_ bv1 64)) (_ bv1 64)))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (ehad (ehad x)) (_ bv1 64)) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (ehad (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) x (_ bv1 64))) (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64)) (_ bv1 64)) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (_ bv1 64)) x)) (im (bvand (_ bv1 64) (shesh (shesh x))) x (im (bvand (_ bv1 64) (arba (arba (ehad x)))) x (_ bv1 64))))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) x (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) x) (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) x (_ bv1 64)) x) (im (bvand (_ bv1 64) (arba (arba x))) x (im (bvand (_ bv1 64) (arba (arba (smol x)))) x (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (_ bv1 64) x) x) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv1 64) x) (_ bv1 64)) x))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (ehad x)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) x (_ bv1 64)) (_ bv1 64)) x)) x) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) x (_ bv1 64)) x) x) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) x) x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (_ bv1 64) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) x (_ bv1 64)) x)))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv1 64) x) (ehad (ehad x))) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad x)) x (im (bvand (_ bv1 64) (arba (smol x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (_ bv1 64) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad x)) x (im (bvand (_ bv1 64) (shesh (ehad x))) x (_ bv1 64))))) (ehad (ehad x))) (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) x (im (bvand (_ bv1 64) (shesh (ehad x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (_ bv1 64) (im (bvand (_ bv1 64) (arba (arba x))) (_ bv1 64) x)))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) x (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad x)) (_ bv1 64) x) (_ bv1 64))) (im (bvand (_ bv1 64) (bvand x (ehad x))) x (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) x (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) x (_ bv1 64)))))) (im (ehad (ehad (bvxor x (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) x) x) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad x)) x (_ bv1 64)) (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (ehad (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) x (_ bv1 64))) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) x) (im (arba (smol (bvxor x (bvadd (_ bv1 64) x)))) x (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) x)) (im (bvand (_ bv1 64) (bvand x (ehad x))) (_ bv1 64) x))) (ehad (ehad x))) (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) x (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (im (bvand (_ bv1 64) (arba (arba x))) (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) x (im (bvand (_ bv1 64) (arba (arba x))) x (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (shesh (bvand x (shesh (shesh x)))) x (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (_ bv1 64) x) (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) x)) (im (bvand (_ bv1 64) x) x (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad x)) (_ bv1 64) x) x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (ehad x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) x) (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad x)) x (im (bvand (_ bv1 64) (shesh (ehad x))) x (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (ehad x)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (_ bv1 64)) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (ehad (ehad x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) x (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv1 64) x))))))))))

real	1m9.653s
user	1m8.971s
sys	0m0.489s
PRE_25_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (shesh (arba x)) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)))

real	0m0.016s
user	0m0.012s
sys	0m0.004s
PRE_25_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (bvxor (_ bv1 64) x) (shesh (arba x))) (bvxor (_ bv1 64) x)))

real	0m0.281s
user	0m0.269s
sys	0m0.012s
PRE_25_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (arba x)) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (arba x)) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (arba x)) (bvxor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (arba x)) (bvxor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (arba x)) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (arba x)) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (arba x)) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (arba x)) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (arba x)) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (arba x)) (bvxor (_ bv1 64) x)) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (arba x)) (bvxor (_ bv1 64) x)))))) (bvxor (_ bv1 64) x))))

real	0m3.463s
user	0m3.405s
sys	0m0.047s
PRE_26_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (bvor x (shesh x)) (smol (bvand x (smol x)))))

real	0m0.047s
user	0m0.043s
sys	0m0.004s
PRE_26_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (bvor x (shesh x)) (smol (bvand x (smol x)))))

real	0m0.185s
user	0m0.176s
sys	0m0.009s
PRE_26_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (bvor x (shesh x)) (smol (bvand x (smol x)))))

real	0m1.702s
user	0m1.657s
sys	0m0.039s
PRE_27_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))

real	0m0.018s
user	0m0.018s
sys	0m0.001s
PRE_27_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (bvand x (smol x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (bvand x (smol x))))) (bvand x (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd (_ bv1 64) x) (bvand x (smol x))) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvand x (smol x)) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (bvand x (smol x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvand x (smol x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvand x (smol x)) (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) x)))))))))

real	0m0.363s
user	0m0.353s
sys	0m0.009s
PRE_27_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (bvand x (smol x)))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (bvand x (smol x)) (bvadd (_ bv1 64) x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand x (smol x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) x) (bvand x (smol x))))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (bvand x (smol x)) (bvadd (_ bv1 64) x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvand x (smol x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (bvand x (smol x)) (bvadd (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) x) (bvand x (smol x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvand x (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand x (smol x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (bvand x (ehad x))) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvand x (ehad x))) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvadd (_ bv1 64) x) (bvand x (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (bvand x (smol x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (bvand x (smol x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (bvand x (smol x))))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))))))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvor x (ehad x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand x (smol x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvand x (smol x)) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) x) (bvand x (smol x)))))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvadd (_ bv1 64) x) (bvand x (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvand x (smol x)) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) x) (bvand x (smol x))))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand x (smol x))) (im (bvand (_ bv1 64) (ehad x)) (bvand x (smol x)) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvand x (smol x)) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (bvand x (smol x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (bvand x (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (bvand x (smol x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvadd (_ bv1 64) x) (bvand x (smol x))))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand x (smol x)))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand x (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand x (smol x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvnot x)) (bvand x (smol x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvadd (_ bv1 64) x) (bvand x (smol x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvadd (_ bv1 64) x) (bvand x (smol x)))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvnot x)) (bvand x (smol x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvand x (smol x)) (bvadd (_ bv1 64) x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand x (smol x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand x (smol x)))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (bvand x (smol x))) (bvadd (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand x (smol x)) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvand x (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand x (smol x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvand x (smol x)) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (bvand x (smol x))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvand x (smol x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvand x (smol x)) (bvadd (_ bv1 64) x)) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))))))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) x) (bvand x (smol x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (bvnot x)) (bvand x (smol x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (bvand x (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvand x (shesh x))) (bvadd (_ bv1 64) x) (bvand x (smol x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (im (arba (bvand x (bvadd (_ bv1 64) (bvnot x)))) (bvand x (smol x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvand x (smol x)) (bvadd (_ bv1 64) x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (bvand x (smol x)) (bvadd (_ bv1 64) x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvand x (shesh x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvand x (smol x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (bvand x (smol x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvand x (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvand x (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvand x (smol x)) (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (bvor x (ehad x))) (bvadd (_ bv1 64) x) (bvand x (smol x))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (bvand x (smol x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (bvand x (smol x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvand x (smol x)) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand x (smol x))))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) x) (bvand x (smol x))))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) x) (bvand x (smol x)))) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (bvor x (ehad x))) (bvadd (_ bv1 64) x) (bvand x (smol x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand x (smol x)))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvnot x)) (bvand x (smol x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand x (smol x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand x (smol x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand x (smol x)) (bvadd (_ bv1 64) x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) x) (bvand x (smol x)))) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvand x (smol x))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (bvand x (smol x)))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (bvand x (ehad x))) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (bvadd (_ bv1 64) x) (bvand x (smol x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) x) (bvand x (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvand x (smol x)) (bvadd (_ bv1 64) x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand x (smol x)) (bvadd (_ bv1 64) x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))))))) (bvadd (_ bv1 64) x)))))

real	1m1.502s
user	1m0.869s
sys	0m0.459s
PRE_28_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (shesh x))

real	0m0.012s
user	0m0.009s
sys	0m0.003s
PRE_28_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (shesh x))

real	0m0.022s
user	0m0.018s
sys	0m0.004s
PRE_28_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (shesh x))

real	0m0.167s
user	0m0.157s
sys	0m0.009s
PRE_29_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (smol (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (bvnot (_ bv0 64)) (smol (bvadd (_ bv1 64) x))) (smol (bvadd (_ bv1 64) x)))))

real	0m0.019s
user	0m0.015s
sys	0m0.003s
PRE_29_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (smol (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (_ bv0 64)) (smol (bvadd (_ bv1 64) x)))))

real	0m0.058s
user	0m0.052s
sys	0m0.005s
PRE_29_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (bvnot (_ bv0 64)) (smol (bvadd (_ bv1 64) x))) (smol (bvadd (_ bv1 64) x))))

real	0m0.542s
user	0m0.531s
sys	0m0.010s
PRE_2_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (bvnot (smol (smol (smol x)))) (ehad (bvnot x))) (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (smol (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (bvnot x)) (bvnot (smol (smol (smol x))))))) (bvnot (smol (smol (smol x))))))

real	0m0.308s
user	0m0.302s
sys	0m0.005s
PRE_2_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (ehad (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (ehad (bvnot x)) (bvnot (smol (smol (smol x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (ehad (bvnot x)) (bvnot (smol (smol (smol x))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (arba x))) (ehad (bvnot x)) (bvnot (smol (smol (smol x))))) (bvnot (smol (smol (smol x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (ehad (bvnot x)) (bvnot (smol (smol (smol x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot (smol (smol (smol x)))) (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (ehad (bvnot x)) (im (bvand (_ bv1 64) (arba (smol x))) (ehad (bvnot x)) (bvnot (smol (smol (smol x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot (smol (smol (smol x)))) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (smol (smol (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (ehad (bvnot x)) (bvnot (smol (smol (smol x))))))) (im (bvand (_ bv1 64) (arba (smol x))) (ehad (bvnot x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (ehad (bvnot x)) (bvnot (smol (smol (smol x))))))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (ehad (bvnot x)) (bvnot (smol (smol (smol x))))) (bvnot (smol (smol (smol x))))) (bvnot (smol (smol (smol x))))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (smol (smol (smol x)))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (ehad (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot (smol (smol (smol x)))) (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (ehad (bvnot x)) (bvnot (smol (smol (smol x))))) (ehad (bvnot x))) (bvnot (smol (smol (smol x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvnot (smol (smol (smol x)))) (ehad (bvnot x))) (ehad (bvnot x)))) (bvnot (smol (smol (smol x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (ehad (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (smol (smol (smol x)))) (ehad (bvnot x)))) (bvnot (smol (smol (smol x))))) (bvnot (smol (smol (smol x)))))))) (im (bvand (_ bv1 64) (bvand x (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (ehad (bvnot x)) (bvnot (smol (smol (smol x))))) (im (bvand (_ bv1 64) (bvand x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (ehad (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (smol (smol (smol x)))) (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (smol (smol (smol x)))) (ehad (bvnot x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (bvnot x)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (smol (smol (smol x)))) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot (smol (smol (smol x)))) (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (ehad (bvnot x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (smol (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (ehad (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (smol (smol (smol x)))) (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (ehad (bvnot x)) (bvnot (smol (smol (smol x))))) (im (bvand (_ bv1 64) (arba (arba x))) (ehad (bvnot x)) (bvnot (smol (smol (smol x))))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (ehad (bvnot x)) (bvnot (smol (smol (smol x))))) (ehad (bvnot x))))))

real	0m1.450s
user	0m1.433s
sys	0m0.013s
PRE_2_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvnot (smol (smol (smol x)))) (ehad (bvnot x))))

real	0m26.849s
user	0m26.414s
sys	0m0.361s
PRE_30_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (shesh (smol (shesh (bvnot x)))) (bvxor (_ bv1 64) (shesh x))))

real	0m0.295s
user	0m0.290s
sys	0m0.004s
PRE_30_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (bvnot x)) (shesh (smol (shesh (bvnot x)))) (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (shesh x))) (shesh (smol (shesh (bvnot x))))) (bvxor (_ bv1 64) (shesh x))) (shesh (smol (shesh (bvnot x))))))

real	0m1.257s
user	0m1.240s
sys	0m0.014s
PRE_30_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (arba x)) (shesh (smol (shesh (bvnot x)))) (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (shesh x))) (shesh (smol (shesh (bvnot x))))))

real	0m10.855s
user	0m10.701s
sys	0m0.124s
PRE_31_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (smol (bvnot x)) (bvand x (shesh x))))

real	0m0.022s
user	0m0.015s
sys	0m0.007s
PRE_31_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (smol (bvnot x)) (bvand x (shesh x))))

real	0m0.066s
user	0m0.062s
sys	0m0.004s
PRE_31_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (smol (bvnot x)) (bvand x (shesh x))))

real	0m0.645s
user	0m0.624s
sys	0m0.019s
PRE_32_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) (smol x)) (smol (bvnot (bvxor (_ bv1 64) x)))))

real	0m0.038s
user	0m0.037s
sys	0m0.000s
PRE_32_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (smol (bvnot (bvxor (_ bv1 64) x))) (bvor (_ bv1 64) (smol x))))

real	0m0.138s
user	0m0.129s
sys	0m0.008s
PRE_32_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) (smol x)) (smol (bvnot (bvxor (_ bv1 64) x)))))

real	0m1.274s
user	0m1.238s
sys	0m0.032s
PRE_33_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (smol (_ bv1 64)) (_ bv0 64)))

real	0m0.017s
user	0m0.015s
sys	0m0.002s
PRE_33_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (smol (_ bv1 64)) (_ bv0 64)))

real	0m0.050s
user	0m0.047s
sys	0m0.004s
PRE_33_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (smol (_ bv1 64)) (_ bv0 64)))

real	0m0.441s
user	0m0.425s
sys	0m0.015s
PRE_34_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (bvnot (arba (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (bvnot x)) (bvnot (arba (bvnot x))))) (bvnot x)))

real	0m0.031s
user	0m0.026s
sys	0m0.004s
PRE_34_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (bvnot x)) (bvnot x) (bvnot (arba (bvnot x))))))

real	0m0.112s
user	0m0.106s
sys	0m0.006s
PRE_34_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (bvnot x)) (bvnot x) (bvnot (arba (bvnot x))))))

real	0m1.046s
user	0m1.015s
sys	0m0.028s
PRE_35_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (smol x) (_ bv1 64)) (smol x)) x))

real	0m0.017s
user	0m0.013s
sys	0m0.004s
PRE_35_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (smol x)) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) x (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) x (smol x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (im (bvand (_ bv1 64) x) x (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (smol x) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) x (smol x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) x (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) x (smol x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand (_ bv1 64) x) (smol x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) x (smol x)) (smol x))) (im (bvand (_ bv1 64) (shesh x)) (smol (im (bvand (_ bv1 64) x) x (_ bv0 64))) (im (bvand (_ bv1 64) (arba (ehad x))) x (smol x)))))))

real	0m0.432s
user	0m0.424s
sys	0m0.007s
PRE_35_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) x (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) x (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (smol x)))))

real	0m3.451s
user	0m3.394s
sys	0m0.048s
PRE_36_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba x))) (shesh (ehad (smol (bvnot x)))) (shesh (ehad (bvnot (_ bv0 64))))))

real	0m0.290s
user	0m0.283s
sys	0m0.006s
PRE_36_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (shesh (ehad (bvnot (_ bv0 64)))) (shesh (ehad (smol (bvnot x))))) (shesh (ehad (smol (bvnot x))))))

real	0m1.206s
user	0m1.185s
sys	0m0.017s
PRE_36_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba x))) (shesh (ehad (smol (bvnot x)))) (shesh (ehad (bvnot (_ bv0 64))))))

real	0m10.509s
user	0m10.379s
sys	0m0.101s
PRE_37_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (arba (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) (arba (bvxor x (smol x))) (arba (ehad (ehad x))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (arba (bvxor x (smol x))) (arba (ehad (ehad x)))) (arba (ehad (ehad x))))))

real	0m0.048s
user	0m0.042s
sys	0m0.006s
PRE_37_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (arba (bvxor x (smol x))) (arba (ehad (ehad x)))))

real	0m0.191s
user	0m0.182s
sys	0m0.009s
PRE_37_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (arba (bvxor x (smol x))) (arba (ehad (ehad x)))))

real	0m1.779s
user	0m1.746s
sys	0m0.028s
PRE_38_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (shesh x) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))))

real	0m0.019s
user	0m0.014s
sys	0m0.005s
PRE_38_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) (smol (_ bv1 64)) (shesh x))))

real	0m0.062s
user	0m0.055s
sys	0m0.007s
PRE_38_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) (smol (_ bv1 64)) (shesh x))))

real	0m0.619s
user	0m0.596s
sys	0m0.021s
PRE_39_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (bvadd x (bvnot (_ bv1 64))) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (smol (_ bv1 64))))

real	0m0.018s
user	0m0.016s
sys	0m0.002s
PRE_39_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (bvadd x (bvnot (_ bv1 64))) (smol (_ bv1 64))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (bvadd (_ bv1 64) x)) (smol (_ bv1 64)))))

real	0m0.067s
user	0m0.063s
sys	0m0.004s
PRE_39_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (bvadd x (bvnot (_ bv1 64))) (bvadd (_ bv1 64) (bvadd (_ bv1 64) x))) (smol (_ bv1 64))))

real	0m0.678s
user	0m0.665s
sys	0m0.011s
PRE_3_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) x (bvadd x (bvnot (_ bv1 64)))))

real	0m0.019s
user	0m0.017s
sys	0m0.002s
PRE_3_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (bvadd x (bvnot (_ bv1 64))) x) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x))))

real	0m0.064s
user	0m0.058s
sys	0m0.007s
PRE_3_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (bvadd x (bvnot (_ bv1 64))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x))) x))

real	0m0.609s
user	0m0.591s
sys	0m0.016s
PRE_40_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (smol x)) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (smol x))) (bvadd x (ehad (smol x)))))

real	0m0.096s
user	0m0.094s
sys	0m0.002s
PRE_40_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd x (ehad (smol x))))) (bvadd x (ehad (smol x))))))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (ehad x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (ehad x)) (im (arba (bvxor x (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))) (smol x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (bvadd (_ bv1 64) (shesh (ehad x)))))))))

real	0m3.488s
user	0m3.435s
sys	0m0.041s
PRE_40_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)))))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (smol x)) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))))))))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (smol x) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (arba x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (bvadd x (ehad (smol x))))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x))))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (smol x)) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd x (ehad (smol x)))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (smol x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (im (bvand (_ bv1 64) (bvand x (arba x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd x (ehad (smol x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (smol x)) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (smol x))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))))))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd x (ehad (smol x)))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (arba (arba x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (smol x)) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (smol x) (im (bvand (_ bv1 64) (shesh x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)))))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd x (ehad (smol x))))))))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (arba x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (smol x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))) (bvadd x (ehad (smol x)))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (smol x)) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))) (bvadd x (ehad (smol x)))) (bvadd x (ehad (smol x)))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvxor x (arba x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd x (ehad (smol x)))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (smol x)) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (im (bvand (_ bv1 64) (shesh x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (bvand x (arba x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd x (ehad (smol x)))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))))))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (bvand x (arba x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (smol x)) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol x) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x))))) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (smol x) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x))))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (smol x) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x)))))) (bvadd (_ bv1 64) (shesh (ehad x)))))))))))

real	2m25.593s
user	2m24.400s
sys	0m0.798s
PRE_41_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) (arba x)) (bvor x (arba x))))

real	0m0.022s
user	0m0.016s
sys	0m0.006s
PRE_41_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) (arba x)) (bvor x (arba x))))

real	0m0.064s
user	0m0.057s
sys	0m0.007s
PRE_41_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) (arba x)) (bvor x (arba x))))

real	0m0.580s
user	0m0.565s
sys	0m0.013s
PRE_42_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (smol (bvadd (_ bv1 64) x)) (shesh x)))

real	0m0.016s
user	0m0.010s
sys	0m0.006s
PRE_42_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (smol (bvadd (_ bv1 64) x)) (shesh x)))

real	0m0.042s
user	0m0.040s
sys	0m0.003s
PRE_42_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (smol (bvadd (_ bv1 64) x)) (shesh x)))

real	0m0.412s
user	0m0.399s
sys	0m0.011s
PRE_43_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (smol x)) (bvnot (bvadd x (arba x)))) (bvor (_ bv1 64) (smol x))))

real	0m0.051s
user	0m0.044s
sys	0m0.007s
PRE_43_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvadd x (arba x))) (bvor (_ bv1 64) (smol x)))))

real	0m0.212s
user	0m0.206s
sys	0m0.006s
PRE_43_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvnot x)) (bvnot (bvadd x (arba x))) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))))

real	0m1.989s
user	0m1.941s
sys	0m0.042s
PRE_44_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (ehad x))

real	0m0.012s
user	0m0.009s
sys	0m0.003s
PRE_44_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (ehad x))

real	0m0.023s
user	0m0.018s
sys	0m0.005s
PRE_44_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (ehad x))

real	0m0.160s
user	0m0.148s
sys	0m0.012s
PRE_45_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (shesh (bvnot x)) (_ bv0 64)))

real	0m0.011s
user	0m0.010s
sys	0m0.002s
PRE_45_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (shesh (bvnot x)) (_ bv0 64)))

real	0m0.033s
user	0m0.028s
sys	0m0.005s
PRE_45_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (shesh (bvnot x)) (_ bv0 64)))

real	0m0.287s
user	0m0.275s
sys	0m0.012s
PRE_46_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (_ bv0 64) (shesh (arba (arba x)))))

real	0m0.036s
user	0m0.030s
sys	0m0.006s
PRE_46_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (_ bv0 64) (shesh (arba (arba x)))))

real	0m0.127s
user	0m0.123s
sys	0m0.004s
PRE_46_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (shesh (arba (arba x))) (_ bv0 64)))

real	0m1.161s
user	0m1.138s
sys	0m0.021s
PRE_47_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (smol (bvnot (_ bv1 64)))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (bvor (_ bv1 64) (smol x)))) (bvadd x (smol (bvnot (_ bv1 64))))) (bvor (_ bv1 64) (smol x)))))

real	0m0.092s
user	0m0.084s
sys	0m0.008s
PRE_47_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd x (smol (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64)))))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (smol (bvnot (_ bv1 64)))) (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvor x (smol (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvor x (smol (smol (_ bv1 64)))) (bvadd x (smol (bvnot (_ bv1 64)))))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (ehad x)) (bvor x (smol (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor x (smol (smol (_ bv1 64)))) (bvor (_ bv1 64) (smol x)))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (smol (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (bvor x (smol (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor x (smol (smol (_ bv1 64)))) (bvadd x (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor x (smol (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd x (smol (bvnot (_ bv1 64)))) (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (bvadd x (smol (bvnot (_ bv1 64))))) (bvor (_ bv1 64) (smol x))))))

real	0m0.638s
user	0m0.626s
sys	0m0.010s
PRE_47_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (smol (bvnot (_ bv1 64)))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (arba x)) (bvor x (smol (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd x (smol (bvnot (_ bv1 64)))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvor x (smol (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor x (smol (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (bvadd x (smol (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (smol (bvnot (_ bv1 64)))) (bvor (_ bv1 64) (smol x)))))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (bvor x (smol (smol (_ bv1 64))))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvadd x (smol (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (bvadd x (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (bvor (_ bv1 64) (smol x)))))))))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba x)) (bvor x (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor x (bvadd (_ bv1 64) x)) (bvor (_ bv1 64) (smol x)))) (bvor x (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (smol (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvor x (bvadd (_ bv1 64) x)) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (bvadd (_ bv1 64) x))))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (bvor x (smol (smol (_ bv1 64))))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (bvadd (_ bv1 64) x))) (bvor x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (bvand x (arba x))) (bvor x (smol (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))))))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64)))))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba x)) (bvor x (bvadd (_ bv1 64) x)) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor x (bvadd (_ bv1 64) x)) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvor x (smol (smol (_ bv1 64)))))))))))))

real	0m20.473s
user	0m20.354s
sys	0m0.062s
PRE_48_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (bvand x (smol (arba x)))) (bvadd (_ bv1 64) (ehad x))))

real	0m0.096s
user	0m0.090s
sys	0m0.005s
PRE_48_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvand x (smol (arba x))) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvand x (ehad x))) (_ bv0 64) (bvand x (smol (arba x)))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvand x (ehad x))) (_ bv0 64) (bvand x (smol (arba x)))) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (bvand x (smol (arba x)))))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (ehad x)) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvand x (smol (arba x))) (_ bv0 64))))))

real	0m0.485s
user	0m0.470s
sys	0m0.013s
PRE_48_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (bvand x (smol (arba x)))) (bvadd (_ bv1 64) (ehad x))) (bvadd (_ bv1 64) (ehad x))) (bvadd (_ bv1 64) (ehad x))) (bvadd (_ bv1 64) (ehad x))))

real	0m4.059s
user	0m3.962s
sys	0m0.085s
PRE_49_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (shesh x) (smol (bvor (_ bv1 64) x))))

real	0m0.014s
user	0m0.011s
sys	0m0.003s
PRE_49_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (shesh x) (smol (bvor (_ bv1 64) x))))

real	0m0.043s
user	0m0.042s
sys	0m0.001s
PRE_49_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (shesh x) (smol (bvor (_ bv1 64) x))))

real	0m0.403s
user	0m0.394s
sys	0m0.008s
PRE_4_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) x (bvnot (_ bv1 64))))

real	0m0.011s
user	0m0.010s
sys	0m0.002s
PRE_4_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) x (bvnot (_ bv1 64))))

real	0m0.026s
user	0m0.022s
sys	0m0.004s
PRE_4_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) x (bvnot (_ bv1 64))))

real	0m0.200s
user	0m0.191s
sys	0m0.009s
PRE_50_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (bvxor x (smol x))) (bvadd (_ bv1 64) x)))

real	0m0.062s
user	0m0.058s
sys	0m0.004s
PRE_50_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (bvxor x (smol x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (bvxor x (smol x))) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (bvxor x (smol x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (bvxor x (smol x))) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (bvxor x (smol x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (arba (bvxor x (smol x)))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (bvxor x (smol x))) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (bvxor x (smol x))) (bvadd (_ bv1 64) x)))))

real	0m0.333s
user	0m0.326s
sys	0m0.006s
PRE_50_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (bvxor x (smol x))) (bvadd (_ bv1 64) x)))

real	0m2.359s
user	0m2.307s
sys	0m0.045s
PRE_51_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (bvadd x (bvnot (_ bv1 64))) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (bvnot x)))

real	0m0.021s
user	0m0.016s
sys	0m0.004s
PRE_51_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (bvadd x (bvnot (_ bv1 64))) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (bvnot x)))

real	0m0.064s
user	0m0.059s
sys	0m0.005s
PRE_51_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (bvadd x (bvnot (_ bv1 64))) (bvnot x)) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (bvnot x))))

real	0m0.623s
user	0m0.600s
sys	0m0.022s
PRE_52_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) x (im (bvand (_ bv1 64) (bvnot x)) x (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))))

real	0m0.019s
user	0m0.015s
sys	0m0.004s
PRE_52_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) x (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) x))

real	0m0.061s
user	0m0.055s
sys	0m0.006s
PRE_52_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) x (im (bvand (_ bv1 64) (ehad x)) x (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))))

real	0m0.564s
user	0m0.550s
sys	0m0.013s
PRE_53_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (smol x) (bvand x (smol x))))

real	0m0.020s
user	0m0.018s
sys	0m0.002s
PRE_53_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (smol x) (bvand x (smol x))))

real	0m0.059s
user	0m0.049s
sys	0m0.010s
PRE_53_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvand x (smol x)) (smol x)))

real	0m0.509s
user	0m0.486s
sys	0m0.021s
PRE_54_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvnot x) (shesh (arba (ehad x)))))

real	0m0.035s
user	0m0.031s
sys	0m0.004s
PRE_54_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (shesh (arba (ehad x))) (bvnot x)))

real	0m0.122s
user	0m0.117s
sys	0m0.004s
PRE_54_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (shesh (arba (ehad x))) (bvnot x)))

real	0m1.095s
user	0m1.067s
sys	0m0.025s
PRE_55_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (ehad x) (smol x)))

real	0m0.012s
user	0m0.008s
sys	0m0.004s
PRE_55_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (ehad x) (smol x)))

real	0m0.029s
user	0m0.025s
sys	0m0.004s
PRE_55_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (ehad x) (smol x)))

real	0m0.260s
user	0m0.247s
sys	0m0.013s
PRE_56_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvor (_ bv1 64) (arba (ehad x))) (_ bv1 64)) (bvadd x (smol x))))

real	0m0.063s
user	0m0.057s
sys	0m0.005s
PRE_56_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (_ bv1 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (arba (ehad x)) (bvadd x (smol x))) (bvadd x (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (arba (ehad x)) (bvadd x (smol x))) (bvadd x (smol x))))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd x (smol x)) (_ bv1 64))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (bvadd x (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvadd x (smol x)) (_ bv1 64))) (bvor (_ bv1 64) (arba (ehad x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (bvadd x (smol x))) (bvor (_ bv1 64) (arba (ehad x))))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd x (smol x)) (bvor (_ bv1 64) (arba (ehad x)))))))

real	0m0.349s
user	0m0.337s
sys	0m0.010s
PRE_56_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (arba (ehad x))) (bvadd x (smol x))) (im (bvand (_ bv1 64) x) (_ bv1 64) (bvadd x (smol x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (bvadd x (smol x)))) (im (bvand (_ bv1 64) x) (_ bv1 64) (im (bvand (_ bv1 64) (arba (ehad x))) (arba (ehad x)) (bvadd x (smol x)))))))

real	0m3.623s
user	0m3.568s
sys	0m0.045s
PRE_57_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (_ bv1 64) (im (bvand (_ bv1 64) (arba (smol x))) x (_ bv1 64))) (smol x)))

real	0m0.061s
user	0m0.057s
sys	0m0.004s
PRE_57_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) x (im (bvand (_ bv1 64) (arba (arba x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (arba x))) x (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (ehad x))) x (_ bv1 64)) (_ bv1 64))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (arba x))) x (_ bv1 64)) x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (shesh (shesh x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) x (_ bv1 64)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (shesh x))) x (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (arba x))) x (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) x (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv1 64) x)) (im (bvand (_ bv1 64) x) (_ bv1 64) x)))))))

real	0m0.399s
user	0m0.383s
sys	0m0.015s
PRE_57_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) x)) x) (im (bvand (_ bv1 64) x) x (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (_ bv1 64) x) (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) x) x (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (_ bv1 64) x)) x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba x)) x (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (_ bv1 64) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (_ bv1 64) x))) x) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (bvxor x (arba x))) x (_ bv1 64)) (_ bv1 64)))))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) x (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) x) (_ bv1 64)) x)) (im (bvand (_ bv1 64) (shesh (shesh x))) x (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (_ bv1 64) (im (arba (bvxor x (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))) (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba x)) (ehad (smol (im (bvand (_ bv1 64) x) x (_ bv1 64)))) x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) x (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) x (_ bv1 64)) (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv1 64) x)) x)) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (shesh (arba x))) x (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (_ bv1 64) x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) x (im (bvand (_ bv1 64) (arba x)) x (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (_ bv1 64) x) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) x) x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) x (_ bv1 64)) (_ bv1 64)))))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (_ bv1 64) x) x) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) x (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (shesh x))) x (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) x (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (_ bv1 64) x) (_ bv1 64)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv1 64) x)) (im (arba (bvxor x (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))) x (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) x (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (_ bv1 64) x)) x)) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) x (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (arba (bvxor x (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))) x (_ bv1 64)) x))) (im (bvand (_ bv1 64) (shesh (shesh x))) x (im (bvand (_ bv1 64) (arba (smol x))) x (_ bv1 64)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) x) (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (smol x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (ehad (ehad x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) x (_ bv1 64)) x) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (shesh (smol (smol x)))) x (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (_ bv1 64) x) x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvand x (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) x (im (bvand (_ bv1 64) (shesh (shesh x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) x (_ bv1 64)) x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) x (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) x (_ bv1 64)) x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv1 64) x) x) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv1 64) x) (_ bv1 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (_ bv1 64) x) x) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv1 64) x) (_ bv1 64))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) x (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) x (_ bv1 64)) (_ bv1 64)) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) x))))))))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (ehad (ehad x))) x (im (bvand (_ bv1 64) (arba (arba x))) (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (arba (arba x))) x (im (bvand (_ bv1 64) (arba (smol x))) x (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) x (_ bv1 64)) (_ bv1 64)) x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba x)) x (_ bv1 64)) x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (shesh (shesh x))) x (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) x) (_ bv1 64)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (smol x))) x (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64)) (_ bv1 64)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv1 64) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (_ bv1 64) x))))))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (_ bv1 64) x) x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv1 64) x) x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (arba (bvxor x (bvadd x (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) x (_ bv1 64)) x) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (_ bv1 64) x) (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) x (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) x) (_ bv1 64))) x)))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (smol x))) x (_ bv1 64)) (_ bv1 64)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) x (im (bvand (_ bv1 64) (shesh (arba (smol x)))) x (im (bvand (_ bv1 64) (arba (arba x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv1 64) x)))) x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (ehad (ehad x))) x (_ bv1 64))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) x (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (shesh (arba (smol x)))) x (im (arba (bvxor x (bvadd x (bvnot (_ bv1 64))))) x (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) x (_ bv1 64)) x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) x) (_ bv1 64))) (im (bvand (_ bv1 64) (ehad (ehad x))) x (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (_ bv1 64) x) x)))))))))

real	0m48.069s
user	0m47.500s
sys	0m0.436s
PRE_58_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (shesh (bvxor x (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvxor x (ehad x))) (shesh (smol x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (shesh (smol x))) (shesh (smol x))) (shesh x))))

real	0m0.050s
user	0m0.048s
sys	0m0.002s
PRE_58_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh x) (shesh (smol x))) (shesh (smol x))) (shesh (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (shesh x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (bvxor x (ehad x))) (shesh (smol x))) (shesh (smol x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (smol x)) (shesh x)) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvxor x (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (smol x)) (shesh (bvxor x (ehad x)))))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (shesh (smol x)) (shesh (bvxor x (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh x) (shesh (smol x))) (shesh x)) (shesh (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (shesh x) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (smol x)) (shesh x)) (shesh (bvxor x (ehad x))))))))

real	0m0.346s
user	0m0.336s
sys	0m0.009s
PRE_58_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (shesh (bvxor x (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (shesh x))) (im (bvand (_ bv1 64) (ehad x)) (shesh (smol x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (shesh x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (bvxor x (ehad x))) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh x) (shesh (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (shesh (bvxor x (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh x) (shesh (smol x)))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (shesh (bvxor x (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (shesh x))) (im (bvand (_ bv1 64) (ehad x)) (shesh (smol x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (shesh x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (shesh (bvxor x (ehad x))) (shesh x)) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad x)) (shesh (bvxor x (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh x) (shesh (smol x)))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (shesh (bvxor x (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (shesh x))) (im (bvand (_ bv1 64) (ehad x)) (shesh (smol x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (shesh x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (shesh x) (shesh (bvxor x (ehad x)))) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad x)) (shesh (bvxor x (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh x) (shesh (smol x)))))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (bvxor x (ehad x))) (shesh (smol x))) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (shesh (bvxor x (ehad x)))) (shesh x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (shesh (bvxor x (ehad x))) (shesh (smol x))) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (bvxor x (ehad x))) (shesh (smol x))) (shesh (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (shesh (bvxor x (ehad x)))) (shesh x))))))

real	0m3.858s
user	0m3.802s
sys	0m0.045s
PRE_59_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (bvor x (bvnot (_ bv1 64))) (bvor (_ bv1 64) (arba (smol x)))))

real	0m0.060s
user	0m0.057s
sys	0m0.003s
PRE_59_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvor x (bvnot (_ bv1 64))) (bvadd (_ bv1 64) (arba (smol x)))))

real	0m0.261s
user	0m0.252s
sys	0m0.008s
PRE_59_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (arba (smol x))) (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (arba (smol x))) (bvnot (_ bv0 64)))))

real	0m2.514s
user	0m2.461s
sys	0m0.046s
PRE_5_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvnot x)) (shesh (bvnot x)) (bvxor (_ bv1 64) x)) (_ bv0 64)))

real	0m0.019s
user	0m0.017s
sys	0m0.002s
PRE_5_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) x) (_ bv0 64))))

real	0m0.060s
user	0m0.055s
sys	0m0.004s
PRE_5_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) x) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (_ bv0 64))))

real	0m0.595s
user	0m0.586s
sys	0m0.008s
PRE_60_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh x) (bvor x (arba x))) (bvor x (arba x))) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (shesh x) (bvor x (arba x))) (bvor x (arba x)))))

real	0m0.063s
user	0m0.059s
sys	0m0.004s
PRE_60_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh x) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (bvor x (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh x) (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh x) (bvor x (arba x))))))

real	0m0.285s
user	0m0.281s
sys	0m0.003s
PRE_60_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (shesh x) (bvor x (arba x))))

real	0m2.324s
user	0m2.271s
sys	0m0.047s
PRE_61_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) x) (shesh (smol (arba x)))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (shesh (smol (arba x))) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) x) (shesh (smol (arba x)))))))

real	0m0.036s
user	0m0.031s
sys	0m0.004s
PRE_61_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) x) (shesh (smol (arba x)))) (im (bvand (_ bv1 64) (ehad x)) (shesh (smol (arba x))) x)))

real	0m0.136s
user	0m0.131s
sys	0m0.005s
PRE_61_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (shesh (smol (arba x))) x) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) x) (shesh (smol (arba x))))))

real	0m1.283s
user	0m1.251s
sys	0m0.028s
PRE_62_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) (arba (bvadd x (bvnot (_ bv0 64))))))

real	0m0.038s
user	0m0.033s
sys	0m0.004s
PRE_62_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) (arba (bvadd x (bvnot (_ bv0 64)))))) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) (arba (bvadd x (bvnot (_ bv0 64)))))))

real	0m0.202s
user	0m0.193s
sys	0m0.008s
PRE_62_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) (arba (bvadd x (bvnot (_ bv0 64))))))))

real	0m1.809s
user	0m1.775s
sys	0m0.029s
PRE_63_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)) x) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvxor (_ bv1 64) x)) (smol (ehad x)))))

real	0m0.019s
user	0m0.016s
sys	0m0.003s
PRE_63_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvxor (_ bv1 64) x)) (smol (ehad x))))

real	0m0.055s
user	0m0.048s
sys	0m0.006s
PRE_63_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvxor (_ bv1 64) x)) (smol (ehad x))))

real	0m0.538s
user	0m0.530s
sys	0m0.007s
PRE_64_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) (bvnot (ehad (bvadd (_ bv1 64) x)))) (bvadd (_ bv1 64) (shesh x))))

real	0m0.039s
user	0m0.038s
sys	0m0.001s
PRE_64_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) (bvnot (bvxor (_ bv1 64) (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh x)) (bvnot (bvxor (_ bv1 64) (ehad x))))))

real	0m0.160s
user	0m0.154s
sys	0m0.006s
PRE_64_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) (bvnot (bvxor (_ bv1 64) (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh x)) (bvnot (bvxor (_ bv1 64) (ehad x))))))

real	0m1.470s
user	0m1.440s
sys	0m0.026s
PRE_65_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvxor x (shesh (arba x))) (im (bvand (_ bv1 64) x) x (bvxor x (shesh (arba x)))))) (bvnot x)))

real	0m0.098s
user	0m0.094s
sys	0m0.004s
PRE_65_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (bvxor x (shesh (arba x))) x) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) x (bvnot x))) (bvnot x)) (im (bvand (_ bv1 64) (bvor x (ehad x))) (bvxor x (shesh (arba x))) (bvnot x))))

real	0m0.451s
user	0m0.437s
sys	0m0.012s
PRE_65_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad x)) x (bvnot x)) (im (bvand (_ bv1 64) (bvor x (ehad x))) (bvxor x (shesh (arba x))) (bvnot x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (bvxor x (shesh (arba x))) (bvnot x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (bvxor x (shesh (arba x))) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) x (bvnot x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (bvxor x (shesh (arba x))) (bvnot x)))))

real	0m4.210s
user	0m4.129s
sys	0m0.069s
PRE_66_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (bvnot (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (bvnot (_ bv1 64)))))

real	0m0.017s
user	0m0.014s
sys	0m0.004s
PRE_66_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (bvnot (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (arba x))) (smol (smol x)) (bvor x (bvnot (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot (smol (smol (_ bv1 64)))) (smol (smol x))) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (bvnot (bvadd (_ bv1 64) (bvand (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (bvnot (bvadd (_ bv1 64) (bvand (_ bv1 64) x)))) (im (bvand (_ bv1 64) (bvand x (shesh x))) (smol (smol x)) (bvor x (bvnot (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (bvnot (smol (_ bv1 64)))) (bvor x (bvnot (bvadd (_ bv1 64) x)))))) (smol (smol x))) (smol (smol x))) (smol (smol x))) (bvnot (_ bv1 64))))

real	0m0.559s
user	0m0.548s
sys	0m0.009s
PRE_66_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (bvor x (bvnot (bvadd (_ bv1 64) x)))) (smol (smol x))) (smol (smol x))) (bvnot (_ bv1 64))))

real	0m4.322s
user	0m4.236s
sys	0m0.075s
PRE_67_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (bvand x (ehad x))) (bvadd x (smol x)) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (smol (smol (bvor x (ehad x)))) (bvadd x (smol x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (smol (smol (bvor x (ehad x)))) (bvadd x (smol x)))) (smol (bvor (_ bv1 64) (bvor x (smol x))))) (smol (bvor (_ bv1 64) (bvor x (smol x))))))

real	0m0.430s
user	0m0.421s
sys	0m0.007s
PRE_67_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (bvadd x (smol x)) (smol (smol (bvor x (ehad x))))) (bvadd x (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (smol x)) (smol (smol (bvor x (ehad x)))))) (bvadd x (smol x))) (smol (bvor (_ bv1 64) (bvor x (smol x))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvadd x (smol x)) (smol (bvor (_ bv1 64) (bvor x (smol x)))))))

real	0m1.884s
user	0m1.851s
sys	0m0.027s
PRE_67_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (smol (smol (bvor x (ehad x)))) (smol (bvor (_ bv1 64) (bvor x (smol x))))) (smol (smol (bvor x (ehad x))))) (smol (bvor (_ bv1 64) (bvor x (smol x))))) (bvadd x (smol x))))

real	0m16.622s
user	0m16.349s
sys	0m0.227s
PRE_68_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (shesh x) (arba x)) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (arba x) (im (bvand (_ bv1 64) (arba x)) (arba x) (shesh x)))))

real	0m0.019s
user	0m0.014s
sys	0m0.005s
PRE_68_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (shesh x) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (arba x) (shesh x))))

real	0m0.055s
user	0m0.051s
sys	0m0.004s
PRE_68_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (shesh x) (arba x)) (im (bvand (_ bv1 64) (arba x)) (arba x) (shesh x))))

real	0m0.556s
user	0m0.540s
sys	0m0.014s
PRE_69_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (ehad x) (bvnot (ehad x))))

real	0m0.016s
user	0m0.013s
sys	0m0.003s
PRE_69_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (ehad x) (bvnot (ehad x))))

real	0m0.054s
user	0m0.048s
sys	0m0.006s
PRE_69_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (ehad x) (bvnot (ehad x))))

real	0m0.470s
user	0m0.450s
sys	0m0.018s
PRE_6_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (shesh (arba x)) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvand x (arba x))) (shesh (arba x)))))

real	0m0.050s
user	0m0.043s
sys	0m0.006s
PRE_6_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (shesh (arba x)) (bvnot (bvand x (arba x)))))

real	0m0.201s
user	0m0.193s
sys	0m0.008s
PRE_6_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (shesh (arba x)) (bvnot (bvand x (arba x)))))

real	0m1.842s
user	0m1.801s
sys	0m0.036s
PRE_70_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (smol x) (shesh x)) (shesh x)))

real	0m0.016s
user	0m0.012s
sys	0m0.004s
PRE_70_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (smol x) (shesh x)) (shesh x)))

real	0m0.052s
user	0m0.047s
sys	0m0.005s
PRE_70_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (smol x) (shesh x)) (shesh x)))

real	0m0.502s
user	0m0.487s
sys	0m0.013s
PRE_71_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (shesh x)))) (im (bvand (_ bv1 64) (arba (bvor x (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvnot (arba (arba (bvor x (ehad x))))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (bvnot (arba (arba (bvor x (ehad x))))) (bvxor (_ bv1 64) x))) (bvnot (arba (arba (bvor x (ehad x)))))) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)) (bvnot (arba (arba (bvor x (ehad x)))))) (bvxor (_ bv1 64) x)))

real	0m4.261s
user	0m4.214s
sys	0m0.032s
PRE_71_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (bvadd x (shesh x)))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba x)))) (bvnot (arba (arba (bvor x (ehad x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (arba (arba (bvor x (ehad x))))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvxor (_ bv1 64) x) (bvnot (arba (arba (bvor x (ehad x)))))))) (im (bvand (_ bv1 64) (arba (bvor x (smol x)))) (bvnot (arba (arba (bvor x (ehad x))))) (im (bvand (_ bv1 64) (bvor x (shesh (smol x)))) (bvxor (_ bv1 64) x) (bvnot (arba (arba (bvor x (ehad x)))))))) (bvnot (arba (arba (bvor x (ehad x)))))) (bvnot (arba (arba (bvor x (ehad x)))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (arba (arba (bvor x (ehad x))))) (im (bvand (_ bv1 64) (shesh (bvadd x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvor x (smol x)))) (bvxor (_ bv1 64) x) (bvnot (arba (arba (bvor x (ehad x)))))) (bvnot (arba (arba (bvor x (ehad x)))))))) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (bvadd x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvor x (smol x)))) (bvnot (arba (arba (bvor x (ehad x))))) (bvxor (_ bv1 64) x)) (bvnot (arba (arba (bvor x (ehad x)))))) (bvnot (arba (arba (bvor x (ehad x)))))) (bvnot (arba (arba (bvor x (ehad x)))))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot (arba (arba (bvor x (ehad x))))) (im (bvand (_ bv1 64) (ehad x)) (bvnot (arba (arba (bvor x (ehad x))))) (im (bvand x (bvor (_ bv1 64) (smol (smol (_ bv1 64))))) (bvxor (_ bv1 64) x) (bvnot (arba (arba (bvor x (ehad x))))))))) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (shesh x)))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (arba (arba (bvor x (ehad x))))) (im (bvand (_ bv1 64) (arba x)) (bvnot (arba (arba (bvor x (ehad x))))) (bvxor (_ bv1 64) x))) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvxor (_ bv1 64) x) (bvnot (arba (arba (bvor x (ehad x)))))))) (bvxor (_ bv1 64) x)))

real	0m19.299s
user	0m19.095s
sys	0m0.143s
PRE_71_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (ehad (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvor x (smol x)))) (im (bvand (_ bv1 64) (ehad (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (im (bvand (_ bv1 64) (bvxor x (arba (smol x)))) (im (bvand (_ bv1 64) (bvor x (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (bvor x (ehad (ehad x)))) (bvxor (_ bv1 64) x) (bvnot (arba (arba (bvor x (ehad x)))))) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)) (bvnot (arba (arba (bvor x (ehad x)))))) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (ehad (ehad x)))) (bvxor (_ bv1 64) x) (bvnot (arba (arba (bvor x (ehad x)))))) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)) (bvnot (arba (arba (bvor x (ehad x))))))) (bvnot (arba (arba (bvor x (ehad x)))))) (bvxor (_ bv1 64) x)) (bvnot (arba (arba (bvor x (ehad x)))))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (im (bvand (_ bv1 64) (bvxor x (arba (smol x)))) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (shesh (shesh x)))) (bvxor (_ bv1 64) x) (bvnot (arba (arba (bvor x (ehad x)))))) (bvnot (arba (arba (bvor x (ehad x)))))) (bvxor (_ bv1 64) x)) (bvnot (arba (arba (bvor x (ehad x))))))) (im (bvand (_ bv1 64) (bvor x (ehad (bvnot x)))) (bvxor (_ bv1 64) x) (bvnot (arba (arba (bvor x (ehad x))))))) (im (bvand (_ bv1 64) (ehad (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (im (bvand (_ bv1 64) (bvxor x (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (arba (arba x)))) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (shesh (smol x)))) (bvxor (_ bv1 64) x) (bvnot (arba (arba (bvor x (ehad x)))))) (bvnot (arba (arba (bvor x (ehad x))))))) (bvxor (_ bv1 64) x)) (bvnot (arba (arba (bvor x (ehad x)))))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (im (bvand (_ bv1 64) (bvxor x (arba (smol x)))) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (shesh (smol x)))) (bvxor (_ bv1 64) x) (bvnot (arba (arba (bvor x (ehad x)))))) (bvnot (arba (arba (bvor x (ehad x)))))) (bvxor (_ bv1 64) x)) (bvnot (arba (arba (bvor x (ehad x))))))) (im (bvand (_ bv1 64) (bvor x (ehad (bvnot x)))) (bvxor (_ bv1 64) x) (bvnot (arba (arba (bvor x (ehad x)))))))) (bvnot (arba (arba (bvor x (ehad x)))))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (bvxor (_ bv1 64) x) (bvnot (arba (arba (bvor x (ehad x))))))) (bvxor (_ bv1 64) x)))

real	2m48.835s
user	2m46.454s
sys	0m1.936s
PRE_72_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvadd x (shesh (shesh x))) (arba (arba x))))

real	0m0.096s
user	0m0.089s
sys	0m0.006s
PRE_72_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvadd x (shesh (shesh x))) (arba (arba x))))

real	0m0.428s
user	0m0.416s
sys	0m0.010s
PRE_72_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (arba (arba x)) (bvadd x (shesh (shesh x)))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvadd x (shesh (shesh x))) (arba (arba x)))) (arba (arba x))) (bvadd x (shesh (shesh x)))) (arba (arba x))) (bvadd x (shesh (shesh x)))))

real	0m4.196s
user	0m4.110s
sys	0m0.074s
PRE_73_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (bvnot x) (arba (ehad x))) (bvnot x)))

real	0m0.018s
user	0m0.014s
sys	0m0.004s
PRE_73_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (bvnot x) (arba (ehad x))) (bvnot x)))

real	0m0.053s
user	0m0.047s
sys	0m0.005s
PRE_73_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (bvnot x) (im (bvand (_ bv1 64) x) (bvnot x) (arba (ehad x)))))

real	0m0.535s
user	0m0.516s
sys	0m0.017s
PRE_74_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (smol (bvnot (shesh x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) x) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (smol (bvnot (shesh x))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (smol (bvnot (shesh x))) x) (smol (bvnot (shesh x))))))

real	0m0.038s
user	0m0.035s
sys	0m0.003s
PRE_74_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (smol (bvnot (shesh x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) x (smol (bvnot (shesh x))))))

real	0m0.143s
user	0m0.135s
sys	0m0.007s
PRE_74_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) x (smol (bvnot (shesh x)))) (im (bvand (_ bv1 64) (shesh x)) (smol (bvnot (shesh x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)))))

real	0m1.313s
user	0m1.282s
sys	0m0.026s
PRE_75_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (arba (bvnot x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))

real	0m0.018s
user	0m0.013s
sys	0m0.005s
PRE_75_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (arba (bvnot x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))

real	0m0.057s
user	0m0.050s
sys	0m0.006s
PRE_75_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (arba (bvnot x))))

real	0m0.517s
user	0m0.501s
sys	0m0.014s
PRE_76_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (bvnot (bvxor (_ bv1 64) (ehad x))) (bvnot (ehad x))) (bvnot (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (bvnot (bvxor (_ bv1 64) (ehad x))) (bvnot (ehad x)))))

real	0m0.042s
user	0m0.039s
sys	0m0.002s
PRE_76_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (bvnot (bvxor (_ bv1 64) (ehad x))) (bvnot (ehad x))))

real	0m0.147s
user	0m0.142s
sys	0m0.004s
PRE_76_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (bvnot (bvxor (_ bv1 64) (ehad x))) (bvnot (ehad x))))

real	0m1.370s
user	0m1.328s
sys	0m0.038s
PRE_77_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba (arba x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvnot (bvand x (shesh x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (bvnot (shesh (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))))

real	0m4.635s
user	0m4.579s
sys	0m0.041s
PRE_77_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh (bvnot x)))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (bvor (ehad x) (arba x))) (im (bvand (_ bv1 64) (bvxor (ehad x) (arba x))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) (ehad x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (bvor (ehad x) (arba x))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (bvxor x (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (bvxor (ehad x) (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (bvnot (shesh (arba x))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (bvxor x (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvxor x (ehad (bvadd x (bvxor (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (bvor x (ehad (bvnot x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (arba (bvor x (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (arba (bvand x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (bvor (ehad x) (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (shesh x) (bvor (_ bv1 64) (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (smol (bvadd (_ bv1 64) x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (bvnot x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (bvnot (shesh (arba x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (bvor (ehad x) (arba x))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (bvadd x (bvnot (_ bv0 64))))) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (bvor x (ehad (ehad x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))))) (im (bvand (ehad x) (bvxor x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))))))))

real	0m20.900s
user	0m20.683s
sys	0m0.149s
PRE_77_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (im (bvand (_ bv1 64) (shesh (bvor x (arba x)))) (im (shesh (shesh (shesh (smol (shesh x))))) (im (bvand (_ bv1 64) (bvor (ehad x) (shesh x))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvadd x (shesh x)))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvxor x (arba x)))) (im (bvand (_ bv1 64) (bvxor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (bvadd x (smol x)))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (bvand x (arba x))) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) x) (arba (ehad (bvnot (bvxor x (ehad x))))) (bvnot (shesh (arba x)))))) (im (bvand (_ bv1 64) (arba x)) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (bvxor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (bvnot (shesh (arba x)))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba x)) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvand x (smol x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvadd x (shesh x)))) (im (bvand (_ bv1 64) (shesh (bvand x (smol x)))) (im (bvand (_ bv1 64) (arba (bvadd x (bvnot (_ bv1 64))))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (arba x)) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (bvnot (shesh (arba x)))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (bvadd x (ehad x)))) (im (bvand (_ bv1 64) (bvnot (bvor x (arba x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (bvnot (shesh (arba x)))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (bvnot (shesh (arba x)))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))))) (im (bvand (_ bv1 64) (bvor (ehad x) (shesh x))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvadd x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvadd x (arba x)))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (bvnot x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (bvxor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (bvnot (shesh (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x)))))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvadd x (shesh x)))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvand x (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (bvand x (ehad x))) (im (bvand (_ bv1 64) (arba x)) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (shesh (bvxor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvxor x (arba x)))) (im (bvand (_ bv1 64) (bvxor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvadd x (shesh x)))) (im (bvand (_ bv1 64) (bvand x (shesh x))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (bvnot (shesh (arba x))))) (bvnot (shesh (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x)))))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x)))))))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba x)) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (bvnot x)) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba x)) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x)))))))))) (im (shesh (shesh (shesh (smol (shesh x))))) (im (bvand (_ bv1 64) (bvor (ehad x) (shesh x))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (arba (bvxor x (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (bvnot (shesh (arba x)))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba x)) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))))) (im (bvand (_ bv1 64) (bvor (ehad x) (shesh x))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x)))))))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvxor x (smol x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x))))))))) (im (bvand (_ bv1 64) (shesh (bvor x (arba x)))) (im (shesh (shesh (shesh (smol (shesh x))))) (im (bvand (_ bv1 64) (bvor (ehad x) (shesh x))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (bvand x (arba x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (im (bvand (_ bv1 64) (bvand x (arba x))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (bvnot (shesh (arba x))))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (arba x)) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba x)) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (bvnot (shesh (arba x)))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba (ehad (bvnot (bvxor x (ehad x))))) (bvnot (shesh (arba x))))))) (im (bvand (_ bv1 64) (bvor (ehad x) (shesh x))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (arba (bvxor x (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x)))))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh (ehad x)))) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvadd x (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (im (bvand (_ bv1 64) (arba x)) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba (smol x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x)))))))))) (im (shesh (shesh (shesh (smol (shesh x))))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (bvnot (shesh (arba x))) (arba (ehad (bvxor x (ehad (bvnot x)))))))))))

real	4m1.254s
user	3m57.717s
sys	0m2.881s
PRE_78_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad x)) (bvor x (arba x)) (shesh x))))

real	0m0.022s
user	0m0.018s
sys	0m0.004s
PRE_78_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (bvor x (arba x))))

real	0m0.066s
user	0m0.062s
sys	0m0.004s
PRE_78_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (bvor x (arba x))))

real	0m0.579s
user	0m0.555s
sys	0m0.021s
PRE_79_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvor x (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh (arba x)))) (im (bvand (_ bv1 64) (bvnot (bvor x (arba x)))) (bvor x (ehad (bvand x (arba x)))) (im (bvand (_ bv1 64) (shesh (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (arba (ehad x))) (bvor x (ehad (bvand x (arba x))))) (bvnot (arba (ehad x))))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))))

real	0m1.092s
user	0m1.069s
sys	0m0.019s
PRE_79_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (bvor x (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh (smol x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvxor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvor x (ehad (bvand x (arba x)))) (bvnot (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvnot (arba (ehad x))) (bvor x (ehad (bvand x (arba x)))))) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (bvor x (ehad (bvand x (arba x)))) (bvnot (arba (ehad x))))) (bvnot (arba (ehad x)))) (bvnot (arba (ehad x)))) (bvnot (arba (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvnot (arba (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh (arba x)))) (bvor x (ehad (bvand x (arba x)))) (bvnot (arba (ehad x)))))) (bvnot (arba (ehad x)))) (bvnot (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvor x (arba x)))) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (im (bvand (_ bv1 64) (bvnot (bvor x (arba x)))) (bvor x (ehad (bvand x (arba x)))) (bvnot (arba (ehad x)))) (bvnot (arba (ehad x)))) (bvnot (arba (ehad x))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (bvor x (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh (smol x)))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (arba (bvxor x (smol x)))) (bvnot (arba (ehad x))) (im (bvand (_ bv1 64) (bvor x (ehad (bvnot x)))) (bvor x (ehad (bvand x (arba x)))) (bvnot (arba (ehad x))))) (bvnot (arba (ehad x)))) (bvnot (arba (ehad x)))) (bvnot (arba (ehad x)))) (bvor x (ehad (bvand x (arba x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvnot (arba (ehad x))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x)))))) (bvnot (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvor x (arba x)))) (im (bvand (_ bv1 64) (shesh (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))) (bvnot (arba (ehad x))) (bvor x (ehad (bvand x (arba x))))) (bvnot (arba (ehad x)))) (bvnot (arba (ehad x)))))) (bvor x (ehad (bvand x (arba x))))))

real	0m5.504s
user	0m5.416s
sys	0m0.069s
PRE_79_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (shesh (bvor x (arba x)))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvor x (ehad x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (ehad x))) (im (bvand (_ bv1 64) (bvor (bvnot x) (arba x))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (im (bvand (_ bv1 64) (bvor x (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (smol (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (bvxor x (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (bvxor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvadd x (shesh x)))) (bvor x (ehad (bvand x (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (bvnot (arba (ehad x))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x)))))) (bvor x (ehad (bvand x (arba x))))) (im (bvand (_ bv1 64) (bvxor (ehad x) (arba x))) (bvor x (ehad (bvand x (arba x)))) (im (bvand (_ bv1 64) (shesh (arba (ehad x)))) (bvnot (arba (ehad x))) (bvor x (ehad (bvand x (arba x))))))) (bvnot (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvxor x (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (bvxor x (arba x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor x (ehad (bvand x (arba x)))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvor x (ehad (bvand x (arba x)))) (bvnot (arba (ehad x))))) (im (bvand (_ bv1 64) (arba (bvxor x (shesh x)))) (bvor x (ehad (bvand x (arba x)))) (bvnot (arba (ehad x))))) (im (bvand (_ bv1 64) (shesh (bvxor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvadd x (ehad x)))) (bvnot (arba (ehad x))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x)))))) (bvnot (arba (ehad x))))) (bvnot (arba (ehad x)))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (im (bvand (_ bv1 64) (bvor (bvnot x) (arba x))) (bvnot (arba (ehad x))) (bvor x (ehad (bvand x (arba x)))))) (im (bvand (_ bv1 64) (bvor (bvnot x) (ehad x))) (bvor x (ehad (bvand x (arba x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (arba x))) (bvnot (arba (ehad x))) (bvor x (ehad (bvand x (arba x))))))) (im (bvand (_ bv1 64) (ehad (bvor x (ehad x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (ehad x))) (im (bvand (_ bv1 64) (bvor (bvnot x) (arba x))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (im (bvand (_ bv1 64) (bvor x (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (smol (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (bvxor x (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (bvxor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (arba (ehad x))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (bvnot (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvxor x (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (bvxor x (arba x)))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (bvnot (arba (ehad x))) (bvor x (ehad (bvand x (arba x))))) (bvnot (arba (ehad x)))) (bvor x (ehad (bvand x (arba x))))) (bvnot (arba (ehad x))))) (bvnot (arba (ehad x)))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (im (bvand (_ bv1 64) (bvor (bvnot x) (arba x))) (bvnot (arba (ehad x))) (bvor x (ehad (bvand x (arba x)))))) (im (bvand (_ bv1 64) (bvor (bvnot x) (ehad x))) (bvor x (ehad (bvand x (arba x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (arba x))) (bvnot (arba (ehad x))) (bvor x (ehad (bvand x (arba x)))))))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (im (bvand (_ bv1 64) (bvor (bvnot x) (arba x))) (bvnot (arba (ehad x))) (bvor x (ehad (bvand x (arba x)))))) (bvnot (arba (ehad x)))))

real	0m51.536s
user	0m50.723s
sys	0m0.673s
PRE_7_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (smol x) (bvnot x)) (im (bvand (_ bv1 64) (bvnot x)) (bvnot x) x)))

real	0m0.017s
user	0m0.012s
sys	0m0.005s
PRE_7_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol x) x) (im (bvand (_ bv1 64) (ehad (ehad x))) x (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) x (im (bvand (_ bv1 64) (arba (ehad x))) x (smol x)))) (bvnot x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) x (smol x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol x) x)) (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) x (smol x)) (im (bvand (_ bv1 64) (shesh (ehad x))) x (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh x)) x (smol x)) (smol x)))) (bvnot x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (smol x) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) x (smol x)) x)) (im (bvand (_ bv1 64) (arba (smol x))) (smol x) x)) (bvnot x)))))

real	0m0.367s
user	0m0.356s
sys	0m0.011s
PRE_7_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (bvnot x) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) (im (bvand (_ bv1 64) (shesh (ehad x))) x (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) x) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) (im (bvand (_ bv1 64) (shesh (ehad x))) x (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x))))))) (im (bvand (_ bv1 64) (bvnot x)) (bvnot x) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol x) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol x) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) (im (bvand (_ bv1 64) (shesh (ehad x))) x (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) x) x) (im (bvand (_ bv1 64) (shesh (smol x))) x (smol x))))))))))

real	0m4.172s
user	0m4.113s
sys	0m0.047s
PRE_80_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) x (bvnot (bvadd x (arba x)))) (im (bvand (_ bv1 64) (shesh x)) x (bvnot (bvadd x (arba x))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (bvnot (bvadd x (arba x))) (im (bvand (_ bv1 64) (ehad x)) (bvnot (bvadd x (arba x))) (bvxor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba x)) (bvnot (bvadd x (arba x))) (bvxor (_ bv1 64) x)))))

real	0m0.053s
user	0m0.046s
sys	0m0.007s
PRE_80_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (bvadd x (arba x))) (bvand x (bvadd (_ bv1 64) x))))

real	0m0.278s
user	0m0.266s
sys	0m0.011s
PRE_80_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (bvadd x (arba x))) (bvand x (bvadd (_ bv1 64) x))))

real	0m2.484s
user	0m2.436s
sys	0m0.041s
PRE_81_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (shesh x)) (_ bv0 64)) (_ bv1 64)))

real	0m0.019s
user	0m0.011s
sys	0m0.008s
PRE_81_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (shesh x)) (_ bv0 64)) (_ bv0 64)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (shesh x) (_ bv1 64)) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) (shesh x)) (_ bv1 64))) (_ bv1 64))))

real	0m0.068s
user	0m0.060s
sys	0m0.008s
PRE_81_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (shesh x)) (_ bv0 64)) (_ bv0 64)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) (shesh x)) (_ bv1 64)) (_ bv1 64))))

real	0m0.656s
user	0m0.633s
sys	0m0.021s
PRE_82_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (arba x)) (_ bv1 64)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (bvand (_ bv1 64) x) (shesh (arba x))) (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (shesh (arba x)))))

real	0m0.062s
user	0m0.060s
sys	0m0.002s
PRE_82_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand (_ bv1 64) x) (shesh (arba x))))

real	0m0.263s
user	0m0.255s
sys	0m0.007s
PRE_82_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (arba x)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (shesh (arba x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (shesh (arba x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (shesh (arba x))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (arba x)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (shesh (arba x)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (shesh (arba x)))))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (shesh (arba x)))))

real	0m3.623s
user	0m3.565s
sys	0m0.048s
PRE_83_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (shesh (bvor x (ehad x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh (shesh x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (bvor x (ehad (bvand x (arba x)))) (bvadd (ehad x) (arba x))) (bvadd (ehad x) (arba x))) (bvor x (ehad (bvand x (arba x))))) (bvadd (ehad x) (arba x))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (bvadd (ehad x) (arba x))))

real	0m1.102s
user	0m1.078s
sys	0m0.020s
PRE_83_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvor x (smol x)))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (arba x))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (bvxor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvor x (smol x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) x) (bvor x (ehad (bvand x (arba x)))) (bvadd (ehad x) (arba x))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (bvadd (ehad x) (arba x))) (bvadd (ehad x) (arba x))) (bvadd (ehad x) (arba x))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (bvadd (ehad x) (arba x))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (bvor x (ehad (bvand x (arba x)))) (bvadd (ehad x) (arba x)))))

real	0m5.259s
user	0m5.184s
sys	0m0.058s
PRE_83_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (bvor x (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvor x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvor x (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvor x (smol x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba (smol x)))) (im (bvand (_ bv1 64) (bvor x (ehad (bvnot x)))) (bvor x (ehad (bvand x (arba x)))) (bvadd (ehad x) (arba x))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (bvor x (ehad (bvnot x)))) (bvor x (ehad (bvand x (arba x)))) (bvadd (ehad x) (arba x))) (bvor x (ehad (bvand x (arba x)))))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (bvor x (ehad (bvand x (arba x))))) (bvadd (ehad x) (arba x))) (bvadd (ehad x) (arba x))) (bvadd (ehad x) (arba x))) (bvadd (ehad x) (arba x))) (bvadd (ehad x) (arba x))) (bvadd (ehad x) (arba x))))

real	0m48.914s
user	0m48.145s
sys	0m0.634s
PRE_84_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))) (bvadd (_ bv1 64) x)))

real	0m0.064s
user	0m0.060s
sys	0m0.004s
PRE_84_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (ehad x)) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (bvnot (shesh (arba x)))))))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad x)) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (ehad x)) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))))))))

real	0m0.491s
user	0m0.478s
sys	0m0.012s
PRE_84_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x))))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh x)) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x))))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x))))))))))))))

real	0m15.099s
user	0m14.992s
sys	0m0.065s
PRE_85_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (arba (ehad x)) (shesh x)))

real	0m0.014s
user	0m0.010s
sys	0m0.004s
PRE_85_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (arba (ehad x)) (shesh x)))

real	0m0.038s
user	0m0.033s
sys	0m0.005s
PRE_85_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (arba (ehad x)) (shesh x)))

real	0m0.375s
user	0m0.360s
sys	0m0.014s
PRE_86_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (arba (ehad (ehad x))) (im (bvand (_ bv1 64) x) (ehad (smol (bvxor (_ bv1 64) x))) (arba (ehad (ehad x))))) (im (bvand (_ bv1 64) x) (ehad (smol (bvxor (_ bv1 64) x))) (arba (ehad (ehad x))))))

real	0m0.040s
user	0m0.035s
sys	0m0.005s
PRE_86_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (ehad (smol (bvxor (_ bv1 64) x))) (arba (ehad (ehad x)))))

real	0m0.141s
user	0m0.134s
sys	0m0.007s
PRE_86_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (ehad (smol (bvxor (_ bv1 64) x))) (arba (ehad (ehad x)))))

real	0m1.327s
user	0m1.304s
sys	0m0.020s
PRE_87_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (smol (_ bv1 64)) (ehad x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))))

real	0m0.020s
user	0m0.017s
sys	0m0.003s
PRE_87_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (ehad x) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) (smol (_ bv1 64)) (ehad x))))

real	0m0.063s
user	0m0.059s
sys	0m0.003s
PRE_87_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (ehad x) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) (smol (_ bv1 64)) (ehad x))))

real	0m0.615s
user	0m0.593s
sys	0m0.020s
PRE_88_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvxor x (arba x))) (bvor x (smol (bvor (_ bv1 64) x))) (bvxor (_ bv1 64) (ehad x))) (bvor x (smol (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) (ehad x)) (bvor x (smol (bvor (_ bv1 64) x))))))

real	0m0.100s
user	0m0.092s
sys	0m0.007s
PRE_88_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (bvor x (smol x)) (bvxor (_ bv1 64) (ehad x))) (bvxor (_ bv1 64) (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (bvor x (smol x)) (bvxor (_ bv1 64) (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (bvor x (smol x)) (bvxor (_ bv1 64) (ehad x))) (bvxor (_ bv1 64) (ehad x))))) (bvor x (smol (bvor (_ bv1 64) x)))))

real	0m0.469s
user	0m0.458s
sys	0m0.010s
PRE_88_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvxor (_ bv1 64) (ehad x)) (bvor x (smol x))) (bvxor (_ bv1 64) (ehad x))) (bvor x (smol (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvxor (_ bv1 64) (ehad x)) (bvor x (smol x))) (bvxor (_ bv1 64) (ehad x))) (bvor x (smol (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (bvand x (shesh x))) (bvxor (_ bv1 64) (ehad x)) (bvor x (smol (bvor (_ bv1 64) x)))))) (bvxor (_ bv1 64) (ehad x))) (bvor x (smol (bvor (_ bv1 64) x)))))

real	0m4.686s
user	0m4.605s
sys	0m0.067s
PRE_89_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) x) (bvnot x)) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) x) (bvnot x))) (bvnot x)) (bvor (_ bv1 64) x)))

real	0m0.063s
user	0m0.058s
sys	0m0.004s
PRE_89_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) x) (bvnot x) (bvor (_ bv1 64) x)) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (bvnot x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) x) (bvnot x) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) x) (bvnot x))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (bvor (_ bv1 64) x))) (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot x) x)))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) x (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot x) (bvor (_ bv1 64) x)) (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) x) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (bvnot x))) x (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) x) (bvnot x))) (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) x) (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) x (bvnot x)) (bvnot x)) (im (bvand (_ bv1 64) x) x (bvnot x))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (bvnot x) (bvor (_ bv1 64) x)) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvnot x) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) x (bvnot x)) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) x (bvnot x)) (bvnot x)))))))

real	0m0.472s
user	0m0.464s
sys	0m0.007s
PRE_89_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (bvnot x) x)) (im (bvand (_ bv1 64) (arba x)) (bvnot x) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvnot x) (im (bvand (_ bv1 64) (shesh x)) (bvnot x) x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot x) x) (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot x) (bvor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot x) (im (bvand (_ bv1 64) (shesh x)) x (bvnot x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot x) x) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot x) x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) x (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (bvnot x) x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot x) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) x) (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvnot x) (bvor (_ bv1 64) x)) (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) x) (bvnot x)) (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvor (_ bv1 64) x) (bvnot x))) (bvor (_ bv1 64) x))))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvnot x) (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (bvor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot x) (bvor (_ bv1 64) x)) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot x) (bvor (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh x)) x (bvnot x)) (im (arba (bvxor x (bvadd x (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvnot x)) x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (shesh x)) (bvnot x) x)) (im (bvand (_ bv1 64) (arba x)) (bvnot x) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) x (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) x (bvnot x)) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) x (bvnot x)) x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (arba (arba x))) x (bvnot x))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) x) (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot x) (bvor (_ bv1 64) x)) (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) x (bvnot x)) (bvnot x)) x) (im (bvand (_ bv1 64) (arba x)) (bvnot x) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) x (bvnot x)) x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvnot x) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x)) (bvnot x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (bvnot x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot x) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (bvnot x) (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor (_ bv1 64) x) (bvnot x))) (bvnot x))))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (bvor (_ bv1 64) x) (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) x (im (bvand (_ bv1 64) (arba (smol x))) x (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvnot x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (bvnot x) (im (bvand (_ bv1 64) (shesh (smol x))) x (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvnot x)) (im (bvand (_ bv1 64) (arba (smol x))) x (bvnot x)))))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) x) (bvnot x)) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) x (bvnot x)) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) x (bvnot x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvnot x) x) (im (bvand (_ bv1 64) (shesh x)) x (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (bvand x (shesh x))) (bvnot x) x) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot x) x) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvnot x) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) x))) (bvnot x)) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh x)) (bvnot x) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) x (bvnot x))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) x (bvnot x))))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (arba (ehad x)))) (bvnot x) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot x) (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvnot x) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) (bvor (_ bv1 64) x)) (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (bvor (_ bv1 64) x) (bvnot x)) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (bvor (_ bv1 64) x) (bvnot x)))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x)) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvnot x) (bvor (_ bv1 64) x)) (bvnot x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor (_ bv1 64) x) (bvnot x))))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (shesh (arba (ehad x)))) x (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvnot x) x) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) x))))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) x) (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot x) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) x) (bvnot x)) (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh x)) x (bvnot x)) x) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvnot x) x)) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (bvnot x) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba x)) x (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot x) x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (arba (ehad x)))) (bvnot x) (im (bvand (_ bv1 64) (shesh x)) x (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvnot x) x) x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (bvor (_ bv1 64) x) (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) (bvor (_ bv1 64) x))) (bvnot x))))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvnot x) x) (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) (im (bvand (_ bv1 64) (bvxor x (arba x))) x (bvnot x))) (bvnot x))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (bvor (_ bv1 64) x) (bvnot x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvnot x)) x) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) x) (im (bvand (_ bv1 64) (shesh x)) x (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) x (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) x (bvnot x)) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvnot x)) (bvnot x)) (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) x) (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (bvor (_ bv1 64) x) (bvnot x))) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot x) (bvor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) x) (bvnot x))))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvnot x) (im (bvand (_ bv1 64) (arba (arba x))) x (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot x) x))) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvnot x) (im (bvand (_ bv1 64) (arba x)) x (bvnot x))) x)) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) x) (bvnot x)) (bvnot x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot x) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x)))))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot x) x) (im (bvand (_ bv1 64) (shesh (ehad x))) x (bvnot x))) (bvnot x)) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot x) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) x (bvnot x)) (bvnot x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvnot x) x) x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvor (_ bv1 64) x) (bvnot x)) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (bvor (_ bv1 64) x)) (bvor (_ bv1 64) x))))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (bvor (_ bv1 64) x)) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (bvor (_ bv1 64) x)) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvor (_ bv1 64) x) (bvnot x)) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) x) (bvnot x)))))))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot x) (bvor (_ bv1 64) x)) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvor (_ bv1 64) x) (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) x (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot x) x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot x) x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvnot x) (bvor (_ bv1 64) x))) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvor (_ bv1 64) x) (bvnot x))) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot x) (bvor (_ bv1 64) x)) (bvnot x))))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvnot x) x) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) x (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) x (bvnot x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvnot x) x) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (shesh x))) x (im (bvand (_ bv1 64) (arba (arba (ehad x)))) x (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (bvnot x) x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (bvor (_ bv1 64) x) (bvnot x))))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x)) (bvnot x)) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot x) (bvor (_ bv1 64) x)) (bvnot x))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot x) (bvor (_ bv1 64) x)) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot x) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvnot x) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot x) (bvor (_ bv1 64) x))) (bvor (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvnot x) (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (arba (ehad x)))) (bvor (_ bv1 64) x) (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvand x (arba x))) (bvnot x) x) (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) x (bvnot x)) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (arba (ehad x)))) x (bvnot x)) (bvnot x)) x)) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (arba x)) (bvnot x) x))))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvnot x) (bvor (_ bv1 64) x)) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot x) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot x) (bvor (_ bv1 64) x))) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (bvor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) x (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (bvnot x) x) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot x) (bvor (_ bv1 64) x)) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvnot x) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot x) (bvor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (bvnot x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (bvor (_ bv1 64) x) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor (_ bv1 64) x) (bvnot x)))))))))))

real	1m42.057s
user	1m41.122s
sys	0m0.645s
PRE_8_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (ehad (ehad x)) (im (bvand (_ bv1 64) (arba x)) (ehad (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (ehad x)) (bvnot (_ bv1 64))) (bvnot (_ bv1 64))))) (_ bv0 64)))

real	0m0.064s
user	0m0.062s
sys	0m0.002s
PRE_8_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (_ bv0 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (_ bv1 64)) (ehad (ehad x)))))

real	0m0.260s
user	0m0.245s
sys	0m0.014s
PRE_8_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (_ bv1 64)) (ehad (ehad x))) (_ bv0 64)))

real	0m2.489s
user	0m2.433s
sys	0m0.050s
PRE_90_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) (bvnot x)) (bvand (_ bv1 64) x)))

real	0m0.018s
user	0m0.013s
sys	0m0.005s
PRE_90_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) (bvnot x)) (bvand (_ bv1 64) x)))

real	0m0.048s
user	0m0.046s
sys	0m0.002s
PRE_90_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) (bvnot x)) (bvand (_ bv1 64) x)))

real	0m0.473s
user	0m0.458s
sys	0m0.014s
PRE_91_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (bvnot (arba x)) (bvand (_ bv1 64) x)))

real	0m0.017s
user	0m0.012s
sys	0m0.005s
PRE_91_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (bvnot (arba x)) (bvand (_ bv1 64) x)))

real	0m0.049s
user	0m0.044s
sys	0m0.005s
PRE_91_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (bvnot (arba x)) (bvand (_ bv1 64) x)))

real	0m0.467s
user	0m0.454s
sys	0m0.011s
PRE_92_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvor x (arba x)))) (im (bvand (_ bv1 64) (ehad (bvor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (bvor x (smol x)))) (im (bvand (_ bv1 64) (shesh (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvadd x (smol x)))) (shesh (bvxor x (ehad (im (bvand (_ bv1 64) x) x (_ bv0 64))))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (shesh (arba (ehad (bvand x (arba (arba x))))))))

real	1m2.161s
user	1m1.573s
sys	0m0.380s
PRE_92_100.sl
CVC4 interrupted by SIGTERM.
timeout: the monitored command dumped core

real	5m6.369s
user	4m56.257s
sys	0m4.413s
PRE_92_1000.sl
CVC4 interrupted by SIGTERM.
timeout: the monitored command dumped core

real	5m8.991s
user	4m54.027s
sys	0m7.819s
PRE_93_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (arba (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (im (bvand (_ bv1 64) (bvnot x)) (arba (ehad (smol x))) (arba (ehad x))))))

real	0m0.036s
user	0m0.029s
sys	0m0.007s
PRE_93_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (arba (ehad (smol x)))) (arba (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (im (bvand (_ bv1 64) (bvnot x)) (arba (ehad (smol x))) (arba (ehad x))))))

real	0m0.147s
user	0m0.141s
sys	0m0.006s
PRE_93_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (arba (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (arba (ehad x)))))

real	0m1.280s
user	0m1.245s
sys	0m0.031s
PRE_94_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (arba x)) (shesh x) (bvnot (_ bv1 64)))))

real	0m0.020s
user	0m0.016s
sys	0m0.004s
PRE_94_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (bvnot (_ bv0 64)))))

real	0m0.058s
user	0m0.051s
sys	0m0.007s
PRE_94_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (im (bvand (_ bv1 64) x) (bvnot (_ bv0 64)) (bvnot (_ bv1 64)))))

real	0m0.550s
user	0m0.529s
sys	0m0.020s
PRE_95_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvnot x) x))

real	0m0.012s
user	0m0.010s
sys	0m0.002s
PRE_95_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) x) (bvnot x) (im (bvand (_ bv1 64) (shesh (arba x))) x (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) x (_ bv0 64)) (_ bv0 64)))) (im (bvand (_ bv1 64) (shesh (arba x))) x (im (bvand (_ bv1 64) (shesh (smol (smol x)))) x (_ bv0 64)))) (bvnot x)) (im (bvand (_ bv1 64) (bvor x (arba x))) x (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) x (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) x) x)))) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x) (_ bv0 64)) (im (bvand (_ bv1 64) (arba (bvnot x))) x (im (bvand (_ bv1 64) (bvxor x (shesh x))) (_ bv0 64) x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvnot x) x) (bvnot x)) (bvnot x)) x) (bvnot x)) (im (bvand (_ bv1 64) (shesh (arba x))) x (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) x (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) x (_ bv0 64)) (_ bv0 64))))) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) x (_ bv0 64)) x)) x))))

real	0m3.168s
user	0m3.113s
sys	0m0.044s
PRE_95_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) x) x) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) x) (_ bv0 64)) x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) x (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (ehad x))) x (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) x) x) (_ bv0 64))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) x (_ bv0 64)) x) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv0 64)) (_ bv0 64)) (_ bv0 64)) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) x) x)) (im (bvand (_ bv1 64) (arba x)) x (_ bv0 64)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (_ bv0 64) (im (bvand (_ bv1 64) (arba x)) x (_ bv0 64))) x) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (_ bv0 64) x) x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad x))) x (_ bv0 64)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvor x (arba x))) x (_ bv0 64)) x))))) (bvnot x)) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (arba (arba (smol x)))) x (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) x) (_ bv0 64)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (shesh x))) x (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (_ bv0 64)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x) (_ bv0 64)) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (arba (bvand x (bvadd (_ bv1 64) (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) x) x) (_ bv0 64)) x) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) x (im (bvand (_ bv1 64) (arba x)) x (im (shesh (shesh (bvand x (shesh x)))) x (_ bv0 64)))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (_ bv0 64) x) x) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (_ bv0 64) x)) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (arba (bvxor x (bvadd x (bvnot (_ bv1 64))))) x (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh x)) x (_ bv0 64))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (_ bv0 64) x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) x) x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) x (_ bv0 64)) x) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (_ bv0 64) x) x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (_ bv0 64) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) x)) (im (bvand (_ bv1 64) (shesh x)) x (_ bv0 64)))))))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) x (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) x (_ bv0 64)) x))) x) (im (bvand (_ bv1 64) (shesh (arba x))) x (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (smol x))) x (_ bv0 64))))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh x)) x (_ bv0 64)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (_ bv0 64) x) x) (im (bvand (_ bv1 64) (arba (arba (smol x)))) x (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) x (_ bv0 64)) (_ bv0 64)) x)))) (im (bvand (_ bv1 64) (shesh (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x) x) (im (arba (bvxor x (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) x) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) x) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (smol x))) x (_ bv0 64))))))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) x (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x)) (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) x) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) (im (bvand (_ bv1 64) (arba x)) x (_ bv0 64))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) x (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (im (bvand (_ bv1 64) (shesh x)) x (_ bv0 64)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) x (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) x))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) x (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) x (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) x) x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (shesh (shesh x))) x (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x) x)) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) x) x) (im (bvand (_ bv1 64) (arba (arba (smol x)))) x (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) x))))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (_ bv0 64) x) x) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) x) x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) (im (bvand (_ bv1 64) (bvor x (shesh x))) x (_ bv0 64))) x)) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) x (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (shesh x)) x (_ bv0 64))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv0 64))))))))) (bvnot x)) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) x) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) x (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) x (_ bv0 64)) x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) x) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (ehad x))) x (im (bvand (_ bv1 64) (shesh (smol x))) x (_ bv0 64)))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) x) x) (_ bv0 64))))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (shesh x))) x (_ bv0 64)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) x (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) x (im (bvand (_ bv1 64) (arba x)) x (_ bv0 64)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) x) x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (_ bv0 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) x) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (_ bv0 64) x) (_ bv0 64)) x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) x) x) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (_ bv0 64) x))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (shesh x)) x (_ bv0 64))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) x) x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) x) x) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv0 64)) (_ bv0 64)) x) (_ bv0 64))))))))

real	0m46.510s
user	0m45.951s
sys	0m0.419s
PRE_96_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) x (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (arba x)) x)) (im (bvand (_ bv1 64) (arba (smol x))) (arba x) (bvadd x (bvand (_ bv1 64) x)))) (im (bvand (_ bv1 64) x) (arba x) (im (bvand (_ bv1 64) (shesh (bvnot x))) x (arba x)))))

real	0m0.068s
user	0m0.061s
sys	0m0.007s
PRE_96_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor (_ bv1 64) (arba x)) x) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba x) x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) (arba x)) x) (im (bvand (_ bv1 64) (arba (arba x))) x (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor (_ bv1 64) (arba x)) x)) (im (bvand (_ bv1 64) (shesh (arba x))) (arba x) x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba x) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (arba x) (bvadd (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (arba x))) (arba x) x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba x) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (arba x) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad x)) (arba (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) x (arba x)) x)) (im (bvand (_ bv1 64) (arba (arba x))) x (im (bvand (_ bv1 64) (arba x)) (arba x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor (_ bv1 64) (arba x)) x)))) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad x)) x (im (bvand (_ bv1 64) (ehad (ehad x))) (arba x) x)) (im (bvand (_ bv1 64) (shesh (arba x))) (arba x) x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (arba x))))))))

real	0m0.502s
user	0m0.490s
sys	0m0.010s
PRE_96_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (arba x))) (arba (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (bvadd x (bvand (_ bv1 64) x))))

real	0m2.716s
user	0m2.654s
sys	0m0.054s
PRE_97_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (bvnot (bvxor x (smol x))) (smol (_ bv1 64))) (_ bv0 64)))

real	0m0.047s
user	0m0.045s
sys	0m0.002s
PRE_97_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvxor x (smol x))) (smol (bvand (_ bv1 64) x))))

real	0m0.187s
user	0m0.179s
sys	0m0.008s
PRE_97_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvxor x (smol x))) (smol (bvand (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol (bvand (_ bv1 64) x)) (bvnot (bvxor x (smol x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol (bvand (_ bv1 64) x)) (bvnot (bvxor x (smol x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvxor x (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (bvnot (bvxor x (smol x))))) (_ bv0 64))))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvnot (bvxor x (smol x))) (_ bv0 64))))))

real	0m27.157s
user	0m26.732s
sys	0m0.353s
PRE_98_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (ehad x)) (bvand x (shesh x))) (bvand x (shesh x))) (_ bv0 64)))

real	0m0.065s
user	0m0.059s
sys	0m0.006s
PRE_98_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand x (shesh x)) (_ bv0 64)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (bvand x (shesh x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvand x (shesh x)) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (arba x))) (shesh (ehad x)) (bvand x (shesh x))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) (bvand x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvand x (shesh x)) (shesh (ehad x))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (bvand x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (shesh (ehad x)) (bvand x (shesh x))) (bvand x (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvand x (shesh x)) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvand x (shesh x)) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvand x (shesh x)) (_ bv0 64)) (bvand x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand x (shesh x)) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvand x (shesh x)) (_ bv0 64)) (_ bv0 64)) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) (bvand x (shesh x))) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (shesh (ehad x)) (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (bvand x (shesh x)))) (bvand x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvand x (shesh x)) (shesh (ehad x))) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (ehad x)) (bvand x (shesh x))) (bvand x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvand x (shesh x)) (shesh (ehad x)))))))))

real	0m0.468s
user	0m0.458s
sys	0m0.008s
PRE_98_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (bvand x (shesh x)) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (shesh (ehad x)) (bvand x (shesh x))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (im (bvand (_ bv1 64) (arba (smol x))) (bvand x (shesh x)) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (ehad x)) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (bvxor x (arba x))) (shesh (ehad x)) (_ bv0 64))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvand x (shesh x)) (_ bv0 64)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (bvand x (arba x))) (_ bv0 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64)) (im (bvand (_ bv1 64) (arba (bvnot x))) (shesh (ehad x)) (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64)) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (ehad x)) (_ bv0 64)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (bvand x (arba x))) (_ bv0 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (_ bv0 64) (bvand x (shesh x)))))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (ehad x)) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))) (shesh (ehad x))) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvand x (shesh x)) (shesh (ehad x))) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand x (shesh x)) (shesh (ehad x))) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (ehad x)) (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (shesh (ehad x)) (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (shesh (ehad x)) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (shesh (ehad x)) (bvand x (shesh x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (ehad x)) (bvand x (shesh x))) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvand x (shesh x)) (shesh (ehad x)))) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand x (shesh x)) (shesh (ehad x))))))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (_ bv0 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (ehad x)) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh (bvnot x)))) (im (bvand (_ bv1 64) (bvand x (arba x))) (_ bv0 64) (shesh (ehad x))) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (shesh (ehad x)) (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvand x (shesh x)) (shesh (ehad (im (bvand (_ bv1 64) x) x (_ bv0 64))))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (ehad x)) (_ bv0 64)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (shesh (ehad x)) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (shesh (ehad x))) (bvand x (shesh x))))))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64)) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (shesh (ehad x)) (bvand x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x)))) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (ehad x)) (bvand x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (shesh (ehad x)) (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (smol x))) (bvand x (shesh x)) (shesh (ehad x)))))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (ehad x)) (bvand x (shesh x))) (bvand x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (ehad x)) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (shesh (ehad x)) (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand x (shesh x)) (shesh (ehad x))) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (shesh (ehad x)) (bvand x (shesh x))) (shesh (ehad x))) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (shesh (ehad x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (bvand x (shesh x)) (shesh (ehad x))) (shesh (ehad x)))))))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (ehad x)) (bvand x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (shesh (ehad x)) (bvand x (shesh x))) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvand x (shesh x)) (shesh (ehad x))))))))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvand x (shesh x)) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvand x (shesh x)) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64)) (bvand x (shesh x))) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (shesh (ehad (im (bvand (_ bv1 64) x) x (_ bv0 64)))) (bvand x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64))))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (shesh (ehad x))) (bvand x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (arba x)) (bvand x (shesh x)) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (im (bvand (_ bv1 64) (bvand x (arba x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (ehad x)) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (shesh (ehad x)) (_ bv0 64)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (ehad x)) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvand x (shesh x)) (shesh (ehad x))) (shesh (ehad x))))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad (im (bvand (_ bv1 64) x) x (_ bv0 64))))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (_ bv0 64) (bvand x (shesh x))) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (shesh (ehad x)) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (shesh (ehad x)) (_ bv0 64))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba x)) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvand x (shesh x)) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad (im (bvand (_ bv1 64) x) x (_ bv0 64)))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (ehad x)) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (shesh (ehad x)) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (shesh (ehad x))))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (ehad x)) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (shesh (ehad x)) (_ bv0 64)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (bvand x (shesh x))) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (shesh (ehad x)) (_ bv0 64)))))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (shesh (ehad x)) (bvand x (shesh x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (shesh (ehad x)) (_ bv0 64)))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (_ bv0 64) (im (bvand (_ bv1 64) (arba x)) (bvand x (shesh x)) (shesh (ehad x)))) (bvand x (shesh x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (shesh x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (ehad x)) (bvand x (shesh x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (ehad x)) (bvand x (shesh x))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (bvand x (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (shesh (ehad x))))))))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvand x (shesh x)) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (bvand x (shesh x))))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (shesh (ehad x)) (bvand x (shesh x))) (bvand x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvand x (shesh x)) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (ehad x)) (bvand x (shesh x))) (bvand x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (bvand x (shesh x)) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvand x (shesh x)) (shesh (ehad x))) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvand x (shesh x)) (shesh (ehad x))) (shesh (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (bvand x (shesh x)) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvand x (shesh x)) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvand x (shesh x)) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (smol x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (shesh (ehad x)) (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvand x (shesh x)) (shesh (ehad x)))) (bvand x (shesh x))))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (shesh (ehad x)) (im (bvand (_ bv1 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (bvand x (shesh x)) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (bvand x (shesh x)) (shesh (ehad x))))))))))

real	1m12.099s
user	1m11.346s
sys	0m0.553s
PRE_99_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) x (bvadd x (shesh (arba x)))) (_ bv0 64)))

real	0m0.098s
user	0m0.090s
sys	0m0.008s
PRE_99_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvadd x (shesh (arba x))) (_ bv0 64)) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd x (shesh (arba x))) x) (_ bv0 64)) (im (bvand (_ bv1 64) (arba (bvnot x))) x (_ bv0 64)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvadd x (shesh (arba x))) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd x (shesh (arba x))) x) (_ bv0 64)) (im (bvand (_ bv1 64) (arba (bvnot x))) x (_ bv0 64))) (bvadd x (shesh (arba x)))) (_ bv0 64))))

real	0m0.463s
user	0m0.449s
sys	0m0.013s
PRE_99_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvadd x (shesh (arba x))) (_ bv0 64)) (im (bvand (_ bv1 64) (arba (bvnot x))) x (_ bv0 64))))

real	0m3.870s
user	0m3.790s
sys	0m0.069s
PRE_9_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvor x (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvadd x (ehad x)))) (im (bvand (_ bv1 64) (bvnot (bvxor x (shesh x)))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))) (arba (smol x))) (im (bvand (_ bv1 64) (arba (bvadd x (arba x)))) (arba (smol x)) (im (bvand (_ bv1 64) (ehad (bvnot (bvadd (_ bv1 64) x)))) (bvadd x (arba (bvnot x))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x))))))) (arba (smol x))))

real	0m0.838s
user	0m0.816s
sys	0m0.019s
PRE_9_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (im (bvand (_ bv1 64) (ehad (bvor x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvor x (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (arba (bvnot x))) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (arba (bvnot x))) (arba (smol x)))) (arba (smol x))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (arba (smol x)) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (arba (smol x)) (im (bvand (_ bv1 64) (arba x)) (bvadd x (arba (bvnot x))) (arba (smol x)))) (arba (smol x))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))))) (im (bvand (_ bv1 64) (ehad (bvor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (bvand x (arba x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (arba (bvnot x))) (arba (smol x))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x))))) (im (bvand (_ bv1 64) (arba (bvor x (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba (arba x)))) (bvadd x (arba (bvnot x))) (im (bvand (_ bv1 64) x) (arba (smol x)) (bvadd x (arba (bvnot x))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (arba (smol x)) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))))))))

real	0m3.921s
user	0m3.861s
sys	0m0.048s
PRE_9_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvor x (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh x)))) (im (bvand (_ bv1 64) (shesh (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (bvnot x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))) (bvadd x (arba (bvnot x)))) (arba (smol x))) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))) (bvadd x (arba (bvnot x))))) (arba (smol x))) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))) (bvadd x (arba (bvnot x))))) (arba (smol x))) (arba (smol x))) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (shesh x)))) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))) (bvadd x (arba (bvnot x)))) (arba (smol x))) (arba (smol x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (bvnot x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))) (bvadd x (arba (bvnot x)))) (arba (smol x))) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))) (bvadd x (arba (bvnot x))))) (arba (smol x))) (arba (smol x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvor x (shesh x)))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (bvnot x)))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))) (bvadd x (arba (bvnot x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (bvnot x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))) (bvadd x (arba (bvnot x)))) (arba (smol x))) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))) (bvadd x (arba (bvnot x))))) (arba (smol x)))) (arba (smol x)))))

real	0m35.542s
user	0m34.991s
sys	0m0.456s
PRE_icfp_gen_1.1.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvnot x) (smol x) (smol (bvxor x (arba x)))) (smol (bvxor x (arba x)))) (smol (bvxor x (arba x)))) (smol (bvxor x (arba x)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand x (ehad x)) x (smol x)) (smol x)) (im (bvand (_ bv1 64) (ehad x)) x (smol x)))))

real	0m0.086s
user	0m0.078s
sys	0m0.007s
PRE_icfp_gen_1.10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvor (_ bv1 64) (shesh (bvnot x))) (_ bv1 64) (bvadd (_ bv1 64) (shesh x))) (bvadd (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (bvnot x)) (_ bv1 64) (im (bvxor (_ bv1 64) (arba x)) (bvand (_ bv1 64) (ehad x)) (_ bv0 64)))) (_ bv1 64)))

real	0m0.359s
user	0m0.346s
sys	0m0.011s
PRE_icfp_gen_1.11.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (shesh x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (bvnot x) (im (bvor (_ bv1 64) (shesh x)) (bvnot (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvnot x))) (bvnot x))))

real	0m0.087s
user	0m0.084s
sys	0m0.003s
PRE_icfp_gen_1.12.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (bvxor (_ bv1 64) x) (_ bv1 64) (_ bv0 64))) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (im x (_ bv1 64) (ehad x))) (im (bvand (_ bv1 64) x) (bvnot (_ bv1 64)) (im (bvadd x (shesh x)) (bvnot (_ bv1 64)) (smol (bvnot (_ bv1 64))))) (bvadd x (shesh (bvnot (_ bv0 64))))) (bvadd x (shesh (bvnot (_ bv0 64))))) (bvadd x (shesh (bvnot (_ bv0 64))))) (smol (bvnot (_ bv1 64)))))

real	0m0.241s
user	0m0.232s
sys	0m0.008s
PRE_icfp_gen_1.13.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (arba x) (im (shesh (shesh (arba x))) (arba x) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (im (bvand (_ bv1 64) x) (_ bv0 64) x)) (im (shesh (shesh (arba x))) (arba x) (_ bv0 64)))) (arba x)) (im (shesh (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (arba x) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (arba x)) (_ bv0 64))) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (arba (im (bvand (_ bv1 64) x) (_ bv0 64) x))) (arba (im (bvand (_ bv1 64) x) (_ bv0 64) x)))))

real	0m0.127s
user	0m0.122s
sys	0m0.004s
PRE_icfp_gen_1.14.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (bvor x (shesh x))) (im (bvor (_ bv1 64) (shesh x)) (shesh (bvor x (shesh x))) (bvnot (bvand x (arba x))))) (im (bvor (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (bvand x (arba x))) (_ bv0 64)) (im (shesh (arba x)) (bvnot (_ bv0 64)) (bvnot (bvand x (arba x)))))) (im (bvand (_ bv1 64) (arba x)) (im (bvor (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (bvand x (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (bvand x (arba x))) (_ bv0 64))) (im (shesh (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh x) (bvnot (_ bv0 64))) (bvnot (bvand x (arba x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) (bvnot (bvand x (arba x)))) (im (bvor (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (bvand x (arba x))) (_ bv0 64)) (im (shesh (smol (smol x))) (shesh x) (shesh (bvor x (shesh x)))))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (shesh (arba x)) (bvnot (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (bvor x (shesh x))) (bvnot (bvand x (arba x))))) (im (bvand (_ bv1 64) (arba x)) (bvnot (bvand x (arba x))) (shesh (bvor x (shesh x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (ehad (bvand x (ehad x))) (shesh x) (im (shesh (arba x)) (bvnot (_ bv0 64)) (bvnot (bvand x (arba x))))) (shesh (bvor x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (bvor x (shesh x))) (im (bvor (_ bv1 64) (shesh (smol x))) (bvnot (bvand x (arba x))) (shesh x)))) (im (bvand x (arba x)) (bvnot (_ bv0 64)) (im (bvor (_ bv1 64) (shesh x)) (_ bv0 64) (bvnot (bvand x (arba x)))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (bvor x (shesh x))) (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot (bvand x (arba x))) (im (bvor (_ bv1 64) (shesh (smol x))) (bvnot (bvand x (arba x))) (im (shesh (smol (smol x))) (bvnot (bvand x (arba x))) (bvnot (_ bv0 64)))))) (shesh x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh x) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (bvand x (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot (bvand x (arba x))) (shesh (bvor x (shesh x)))))) (im (bvor (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (_ bv0 64)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh x) (shesh (bvor x (shesh x)))))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad x)) (shesh x) (im (bvand (_ bv1 64) (arba x)) (shesh x) (bvnot (bvand x (arba x))))) (im (shesh (arba x)) (bvnot (_ bv0 64)) (shesh (bvor x (shesh x))))))))

real	0m0.570s
user	0m0.556s
sys	0m0.012s
PRE_icfp_gen_1.15.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (arba (smol x))) (smol (_ bv1 64)) x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvxor (_ bv1 64) x) (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (smol (im x (_ bv0 64) (_ bv1 64))) (smol (ehad x))) (smol (im x (_ bv0 64) (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol (ehad x)) (smol (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (im x (_ bv0 64) x)) (im (bvand x (ehad x)) (smol (_ bv1 64)) (bvxor (_ bv1 64) x)) (smol (_ bv1 64))) (im (bvand (_ bv1 64) (bvnot x)) x (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (im x (_ bv0 64) x)) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) x (smol (_ bv1 64))) (smol (_ bv1 64))))))) (_ bv0 64)))

real	0m0.166s
user	0m0.159s
sys	0m0.007s
PRE_icfp_gen_1.16.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (ehad (bvadd (_ bv1 64) x)) (smol (bvnot (bvxor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad x)) (ehad (bvadd (_ bv1 64) x)) (im (shesh (bvnot x)) (ehad (bvadd (_ bv1 64) x)) (smol (bvnot (bvxor (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (ehad x) (smol (bvnot (bvxor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (bvnot x)) (smol (bvnot (bvxor (_ bv1 64) x))) (ehad x)) (smol (bvnot (bvxor (_ bv1 64) x)))))))

real	0m0.104s
user	0m0.101s
sys	0m0.003s
PRE_icfp_gen_1.17.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvnot (smol (_ bv1 64))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (bvnot (smol (_ bv1 64)))) (bvnot (smol (_ bv1 64)))) (bvnot (smol (_ bv1 64)))) (bvnot (smol (_ bv1 64))))) (bvnot (smol (_ bv1 64)))) (bvnot (smol (_ bv1 64)))) (im (arba (bvadd x (bvnot (_ bv1 64)))) (smol (bvnot x)) (smol (_ bv1 64)))))

real	0m0.211s
user	0m0.204s
sys	0m0.006s
PRE_icfp_gen_1.18.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (im (shesh x) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (shesh x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (smol x) (im (bvxor (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (smol x)) (smol x)) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (smol x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (_ bv0 64) (im (bvand (_ bv1 64) (arba (arba x))) (smol x) (_ bv0 64))))) (_ bv0 64)) (im (bvnot (bvor x (smol x))) (smol x) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) (im (arba (bvand x (ehad x))) (_ bv0 64) (smol x))) (_ bv0 64)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (smol x))) (im (arba (bvand x (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) (im (bvand (_ bv1 64) (arba (smol x))) (smol x) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (_ bv0 64)) (_ bv0 64)) (_ bv0 64)))))))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (bvand x (smol (shesh x))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (smol x) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (smol x) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (smol x) (_ bv0 64)) (_ bv0 64))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (smol x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (smol x) (im (bvand (_ bv1 64) (bvand x (shesh x))) (im (bvand (_ bv1 64) (arba (arba x))) (smol x) (im (bvand (_ bv1 64) (shesh (shesh x))) (smol x) (_ bv0 64))) (smol x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (smol x) (im (bvand (_ bv1 64) (arba (arba x))) (_ bv0 64) (smol x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) (smol x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol x) (_ bv0 64)))) (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (smol x) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (im (bvand (_ bv1 64) (bvand x (shesh x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (_ bv0 64) (smol x))) (smol x)))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) (smol x))))))) (_ bv0 64)) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (smol x))))

real	0m1.128s
user	0m1.110s
sys	0m0.014s
PRE_icfp_gen_1.19.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (bvor (_ bv1 64) (arba x))))

real	0m0.025s
user	0m0.022s
sys	0m0.002s
PRE_icfp_gen_1.2.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvand x (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot (smol (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (smol (smol (smol x)))) (ehad (bvnot x)))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (smol (smol x))) (bvnot (smol (smol (smol x))))) (ehad (bvnot x)))) (bvnot (smol (smol x)))) (im (shesh (bvnot x)) (bvnot (smol (smol x))) (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba x)) (ehad (bvnot x)) (ehad (bvnot (_ bv0 64))))) (ehad (bvnot x))) (bvnot (smol (smol (smol x))))))

real	0m0.497s
user	0m0.488s
sys	0m0.008s
PRE_icfp_gen_1.20.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) x) (im (bvand (_ bv1 64) (shesh (smol x))) x (_ bv0 64))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand x (ehad x)) (im (bvadd x (smol x)) (_ bv0 64) x) (im (arba (smol x)) (_ bv0 64) x)) x)) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) (bvor x (smol (_ bv1 64)))))) (im (arba (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad x)) x (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) x (_ bv1 64)))) (_ bv1 64)))))

real	0m0.175s
user	0m0.172s
sys	0m0.003s
PRE_icfp_gen_1.3.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) x (im (bvand (_ bv1 64) (ehad x)) (bvadd x (bvnot (_ bv1 64))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)))))

real	0m0.036s
user	0m0.033s
sys	0m0.003s
PRE_icfp_gen_1.4.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) x (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (arba x)) x (_ bv1 64))) x)) (bvnot (_ bv1 64))))

real	0m0.117s
user	0m0.110s
sys	0m0.007s
PRE_icfp_gen_1.5.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (_ bv0 64)) (im (shesh x) (shesh (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (_ bv0 64)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (im (shesh x) (shesh (bvnot (_ bv0 64))) (shesh (bvnot x))) (_ bv0 64)) (im (shesh x) (shesh (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (_ bv0 64))))) (im (bvand (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) x) (_ bv0 64))))

real	0m0.954s
user	0m0.940s
sys	0m0.012s
PRE_icfp_gen_1.6.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (bvand x (arba x))) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (arba x)) (shesh (arba x)) (bvnot (bvand x (arba x))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (shesh (arba x)) (bvnot (bvand x (arba x)))) (im (shesh (arba x)) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (arba x)) (shesh (arba x)) (bvnot (bvand x (arba x))))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (arba x)) (im (shesh (bvand x (smol x))) (bvnot (_ bv0 64)) (_ bv1 64)) (shesh (arba x))) (im (bvand (_ bv1 64) (arba x)) (shesh (arba x)) (im (shesh (arba x)) (bvnot (_ bv0 64)) (bvnot (bvand x (arba x)))))) (im (bvand (_ bv1 64) (arba x)) (shesh (arba x)) (im (bvadd x (smol x)) (shesh (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (ehad x) (bvnot (_ bv0 64)) (im (ehad (bvand x (shesh x))) (bvnot (_ bv0 64)) (_ bv1 64))) (bvnot (_ bv0 64))))))))

real	0m0.154s
user	0m0.146s
sys	0m0.007s
PRE_icfp_gen_1.7.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (bvnot x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (smol x) x) (im (bvand (_ bv1 64) (arba (ehad x))) x (im (bvand (_ bv1 64) (shesh (smol x))) x (smol x))))) (im (bvand (_ bv1 64) (shesh x)) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (smol x) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) x (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (bvnot x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (im (arba (bvxor x (bvadd (_ bv1 64) x))) x (smol x))) x)) (im (bvand (_ bv1 64) (bvnot x)) (bvnot x) (im (bvand (_ bv1 64) (shesh x)) (smol x) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) x))))))

real	0m0.228s
user	0m0.222s
sys	0m0.006s
PRE_icfp_gen_1.8.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot (_ bv1 64)) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (ehad x)) (bvnot (_ bv1 64)))) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (ehad (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (_ bv1 64)) (ehad (ehad x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (_ bv1 64)) (im (bvand (_ bv1 64) (arba x)) (ehad (ehad x)) (bvnot (_ bv1 64)))) (ehad (ehad x))))))

real	0m0.117s
user	0m0.112s
sys	0m0.004s
PRE_icfp_gen_1.9.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot (bvand x (shesh x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (bvnot (bvxor x (arba x)))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (smol (bvxor (_ bv1 64) (arba x))) (bvadd x (arba (bvnot x))))) (im (bvand (_ bv1 64) (shesh (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (bvnot x)))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))) (bvadd x (arba (bvnot x)))) (bvxor (_ bv1 64) (bvadd x (arba (bvnot x)))))) (arba (smol x))) (arba (smol x))) (arba (smol x))))

real	0m0.998s
user	0m0.980s
sys	0m0.014s
PRE_icfp_gen_10.1.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (im (arba x) (_ bv0 64) x)) (_ bv0 64) (im (bvand (_ bv1 64) (im (arba x) x (_ bv1 64))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvadd x (arba (ehad x))) (im (arba (bvadd x (bvnot (_ bv0 64)))) (_ bv1 64) (bvadd x (arba (ehad x))))) x)))

real	0m0.205s
user	0m0.202s
sys	0m0.002s
PRE_icfp_gen_10.10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand x (bvnot (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (bvand x (bvnot (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (bvand x (bvnot (ehad x))) (bvadd x (smol x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvand x (bvnot (ehad x))) (bvadd x (smol x)))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvand x (bvnot (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvadd x (smol x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (smol x)) (bvand x (bvnot (ehad x))))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvand x (bvnot (ehad x))) (bvadd x (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvand x (bvnot (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvand x (bvnot (ehad x))) (bvadd x (smol x))) (bvand x (bvnot (ehad x))))))) (bvadd x (smol x))) (bvadd x (smol x))) (bvadd x (smol x))))

real	0m0.260s
user	0m0.250s
sys	0m0.009s
PRE_icfp_gen_10.11.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh x) (im (bvand (_ bv1 64) (shesh x)) (shesh (im (bvand (_ bv1 64) x) (_ bv0 64) x)) (shesh x))) (im (bvand (_ bv1 64) (bvnot x)) (_ bv0 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (arba x))) (shesh x) (im (bvand (_ bv1 64) (arba (smol x))) (shesh x) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (smol x)) (shesh x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (arba (smol x)) (shesh x)) (shesh x)) (shesh x)) (shesh x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (im (bvand (_ bv1 64) (arba (smol x))) (shesh x) (shesh (smol x)))) (shesh x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh x)) (arba (smol x)) (shesh x)) (shesh x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (arba (smol x))) (im (bvand (_ bv1 64) x) (shesh x) (arba (smol x)))))) (_ bv0 64)))

real	0m0.216s
user	0m0.210s
sys	0m0.005s
PRE_icfp_gen_10.12.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvnot x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (ehad x) (im (bvadd x (shesh x)) (bvnot x) (ehad x))) (ehad x)) (ehad x))))

real	0m0.041s
user	0m0.038s
sys	0m0.003s
PRE_icfp_gen_10.13.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (smol x))))

real	0m0.144s
user	0m0.139s
sys	0m0.004s
PRE_icfp_gen_10.14.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (bvnot (bvxor (_ bv1 64) (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (arba (bvxor x (bvadd (_ bv1 64) x))) (bvnot (bvxor (_ bv1 64) (ehad x))) (bvnot (_ bv0 64))) (im (ehad x) (bvadd (_ bv1 64) x) (bvnot (bvxor (_ bv1 64) (ehad x)))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (ehad x)) (bvnot (_ bv0 64)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot (_ bv0 64)) (bvnot (ehad x))) (bvnot (_ bv0 64))) (bvor (_ bv1 64) (bvnot (ehad x))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) x) (im (ehad x) (bvnot (_ bv0 64)) (_ bv1 64)))) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))))

real	0m0.164s
user	0m0.158s
sys	0m0.006s
PRE_icfp_gen_10.15.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) x) (im (shesh (bvxor x (bvadd (_ bv1 64) x))) (smol (bvxor (_ bv1 64) x)) (shesh (ehad x))) (shesh (ehad x))) (shesh (ehad x))) (im (arba (ehad (smol x))) (_ bv0 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvnot x) (smol (bvnot (shesh x))) (smol x)) (smol x)) (smol (bvxor (_ bv1 64) x))) (shesh (ehad x)))))

real	0m0.119s
user	0m0.113s
sys	0m0.005s
PRE_icfp_gen_10.16.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh (bvadd (_ bv1 64) x))) (bvor x (arba (arba x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (bvor (_ bv1 64) (smol (bvadd (_ bv1 64) x))) (im (arba (arba x)) (bvor (_ bv1 64) (smol x)) (bvor (_ bv1 64) (smol (bvadd (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvor (_ bv1 64) (smol (bvadd (_ bv1 64) x))) (im (arba (arba x)) (bvor (_ bv1 64) (smol x)) (bvor (_ bv1 64) (smol (bvadd (_ bv1 64) x)))))))

real	0m0.179s
user	0m0.174s
sys	0m0.005s
PRE_icfp_gen_10.17.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvxor x (ehad x))) x) (im (bvnot (bvadd (_ bv1 64) x)) x (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvxor x (ehad x))) x))) (im (bvand (_ bv1 64) (ehad x)) (im (ehad (bvadd (_ bv1 64) (shesh x))) x (bvor (_ bv1 64) x)) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvxor x (ehad x))) x) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) x) x)))))

real	0m0.104s
user	0m0.098s
sys	0m0.006s
PRE_icfp_gen_10.18.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvor (_ bv1 64) (shesh x)) (im (shesh (smol (bvadd (_ bv1 64) x))) (_ bv1 64) (_ bv0 64)) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (shesh (smol x)) (_ bv0 64)) (shesh (smol x)))) (bvxor (_ bv1 64) x)) (_ bv0 64)))

real	0m0.173s
user	0m0.166s
sys	0m0.006s
PRE_icfp_gen_10.19.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (bvxor (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (bvxor (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvxor (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) x))) (bvxor (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvnot (bvxor (_ bv1 64) x)) (_ bv0 64) (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvxor (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))))))

real	0m0.143s
user	0m0.135s
sys	0m0.007s
PRE_icfp_gen_10.2.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (shesh (arba x)) x (_ bv1 64)) (bvnot (smol x))))

real	0m0.024s
user	0m0.023s
sys	0m0.001s
PRE_icfp_gen_10.20.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (ehad (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (shesh (smol x)))) (im (bvand (_ bv1 64) (ehad (bvor x (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (im (bvxor (_ bv1 64) (arba (bvxor x (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (bvadd x (smol x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvand x (arba (bvnot x)))) (arba (arba (ehad (bvand x (shesh x))))) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (shesh x)))) (arba (arba (ehad (bvand x (shesh x))))) (arba (arba (ehad x))))) (im (bvand (_ bv1 64) (bvor (ehad x) (arba x))) (arba (arba (ehad (bvand x (shesh x))))) (arba (arba (ehad x))))) (im (bvand (_ bv1 64) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (shesh (bvadd x (smol x)))) (arba (arba (ehad (bvand x (shesh x))))) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (bvand x (shesh (shesh x)))) (arba (arba (ehad (bvand x (shesh x))))) (arba (arba (ehad x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (arba (bvor x (arba x)))) (arba (arba (ehad (bvand x (shesh x))))) (im (bvand (_ bv1 64) (bvxor x (arba (bvadd (_ bv1 64) x)))) (im (bvand x (bvor (_ bv1 64) (smol (smol (_ bv1 64))))) (arba (arba (ehad (bvand x (shesh x))))) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (arba (arba (ehad (bvand x (shesh x))))) (arba (arba (ehad x)))) (arba (arba (ehad x))))))) (arba (arba (ehad x)))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (arba (arba x)))) (im (bvand (_ bv1 64) (shesh (shesh (arba x)))) (arba (arba (ehad x))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x))))))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad x)))))

real	0m10.446s
user	0m10.336s
sys	0m0.076s
PRE_icfp_gen_10.3.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvand x (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvxor (_ bv1 64) x) (bvand x (arba x)))) (im (bvand (_ bv1 64) x) (bvand x (arba x)) (bvand x (arba (smol x))))) (im (bvand (_ bv1 64) (shesh x)) (bvnot (_ bv1 64)) (bvand x (arba x)))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (shesh (bvnot x)) (bvand x (arba (smol x))) (bvand x (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (_ bv1 64)) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)))) (im (bvor (_ bv1 64) (shesh (arba x))) (bvand x (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvand x (arba (smol x))) (bvxor (_ bv1 64) x)))))

real	0m0.184s
user	0m0.176s
sys	0m0.007s
PRE_icfp_gen_10.4.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (shesh x) (_ bv1 64) (_ bv0 64))) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot (im x (_ bv0 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba (bvxor x (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvxor (_ bv1 64) (im x (_ bv1 64) (shesh x))) (arba (bvxor x (bvadd x (smol x)))) (arba (bvxor x (smol x)))) (im (bvor (_ bv1 64) (shesh x)) (arba (bvxor x (bvadd x (smol x)))) (arba (bvxor x (smol x)))))) (bvnot (shesh x))) (bvnot (_ bv0 64))) (arba (bvxor x (smol x)))))

real	0m1.436s
user	0m1.406s
sys	0m0.025s
PRE_icfp_gen_10.5.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (smol x) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) (smol x)) (_ bv1 64)) (bvor (_ bv1 64) (smol x))) (im (bvand x (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) (bvor (_ bv1 64) (smol x))) (_ bv1 64)) (_ bv1 64)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (arba (bvxor x (bvadd (_ bv1 64) x))) (_ bv1 64) (bvor (_ bv1 64) (smol x))) (_ bv1 64)) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))))) (bvor (_ bv1 64) (smol x)))))

real	0m0.181s
user	0m0.171s
sys	0m0.009s
PRE_icfp_gen_10.6.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (bvand x (shesh x)) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor (bvnot x) (ehad x))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (im (bvxor (_ bv1 64) (arba (bvxor x (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (im (shesh (shesh x)) x (_ bv1 64))) (im (bvand (_ bv1 64) (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (bvxor x (arba (smol x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad x))))) (bvor (_ bv1 64) (shesh (shesh x)))) (bvor (_ bv1 64) (shesh (shesh x)))) (bvor (_ bv1 64) (shesh (shesh x)))) (bvor (_ bv1 64) (shesh (shesh x)))) (_ bv1 64)))

real	0m8.278s
user	0m8.205s
sys	0m0.046s
PRE_icfp_gen_10.7.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (smol x)) (im (bvand (_ bv1 64) (arba (smol x))) (smol x) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (smol x) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (_ bv0 64))) (smol x)))) (smol x)) (_ bv1 64)) (smol x)))

real	0m0.185s
user	0m0.179s
sys	0m0.005s
PRE_icfp_gen_10.8.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (bvnot (bvor (_ bv1 64) x))) (bvnot x)) (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (bvnot (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) (smol (bvnot (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvnot x) (smol (bvnot (bvor (_ bv1 64) x))))))) (im (bvand (_ bv1 64) (ehad x)) (im (arba (ehad x)) (smol (bvnot (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol (bvnot (bvor (_ bv1 64) x))) (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot x) (smol (bvnot (bvor (_ bv1 64) x)))) (smol (bvnot (bvor (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (smol (bvnot (bvor (_ bv1 64) x))) (bvnot x)) (smol (bvnot (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (smol x))) (smol (bvnot (bvor (_ bv1 64) x))) (bvnot x)))) (bvnot x)))

real	0m0.170s
user	0m0.162s
sys	0m0.008s
PRE_icfp_gen_10.9.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (im x (_ bv0 64) x)) (smol (_ bv1 64)) (im (bvand (_ bv1 64) (bvor x (shesh x))) (bvnot (smol (smol (smol x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot (smol (smol (smol x)))) (bvnot (smol (smol x)))) (im (bvnot (bvor x (shesh x))) (bvnot (smol (smol x))) (bvnot (smol (smol (smol x)))))) (im (bvnot (bvor x (shesh x))) (bvnot (smol (smol x))) (bvnot (smol (smol (smol x)))))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (shesh (bvnot x)) (bvnot (smol (smol x))) (bvnot (smol (smol (smol x))))) (bvnot (smol (smol x)))) (bvnot (smol (smol (smol x))))) (bvnot (smol (smol (smol x))))) (bvnot (smol (smol (smol x)))))) (smol (_ bv1 64))) (smol (_ bv1 64))))

real	0m0.973s
user	0m0.955s
sys	0m0.015s
PRE_icfp_gen_11.1.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (arba x) (bvxor (_ bv1 64) x) (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (ehad (im (bvand (_ bv1 64) x) (_ bv0 64) x)) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (ehad x) (im (bvand (_ bv1 64) (arba (smol x))) (ehad x) (ehad (bvxor x (arba x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (ehad (bvxor x (arba x))) (im (bvand (_ bv1 64) (arba x)) (ehad x) (ehad (bvxor x (arba x)))))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad x) (im (bvand (_ bv1 64) (ehad (ehad x))) (ehad x) (ehad (bvxor x (arba x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (ehad x) (ehad (bvxor x (arba x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (ehad (bvxor x (arba x))) (ehad x)))) (im (arba (bvadd (_ bv1 64) (bvxor (_ bv1 64) x))) (bvxor (_ bv1 64) x) (_ bv0 64)))))

real	0m0.226s
user	0m0.219s
sys	0m0.007s
PRE_icfp_gen_11.10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) (smol (smol x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvor (_ bv1 64) (smol x)) (smol (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (smol x)) (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol (smol x)) (im (bvand (_ bv1 64) (arba x)) (smol (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (smol x)) (bvor (_ bv1 64) (smol x))))))) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) (smol (smol x)) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (smol x)) (smol (smol x))))))) (bvor (_ bv1 64) (smol x))))

real	0m0.166s
user	0m0.158s
sys	0m0.007s
PRE_icfp_gen_11.11.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (im (shesh x) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (shesh x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvxor x (arba (arba x))) (smol (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (smol (bvnot x)) (bvxor x (arba (arba x))))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (smol (bvnot x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvxor x (arba (arba x))) (smol (bvnot x))))) (smol (bvnot x))) x) x))

real	0m0.138s
user	0m0.131s
sys	0m0.006s
PRE_icfp_gen_11.12.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvnot (smol x)) (_ bv1 64) (bvxor (_ bv1 64) (shesh (ehad x)))) (bvxor (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (arba (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (bvxor (_ bv1 64) (shesh (ehad x))))))

real	0m0.082s
user	0m0.074s
sys	0m0.007s
PRE_icfp_gen_11.13.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvnot (bvadd (_ bv1 64) x)) (im (bvor (_ bv1 64) (shesh x)) (bvnot (smol x)) (bvnot (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (smol (arba x)) (bvnot (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad x)) (smol (arba x)) (_ bv0 64)))) (im (arba (ehad x)) (bvnot (smol x)) (im (bvand (_ bv1 64) (arba x)) (smol (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (smol (arba x)) (bvnot x))))) (bvnot (bvadd (_ bv1 64) x))))

real	0m0.104s
user	0m0.100s
sys	0m0.003s
PRE_icfp_gen_11.14.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (bvnot x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (im (ehad x) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (ehad x) (_ bv1 64) (_ bv0 64))) (im (bvadd (_ bv1 64) (im (bvor (_ bv1 64) x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) (bvxor (_ bv1 64) x)) (im (bvor (_ bv1 64) (bvnot x)) (bvxor x (shesh (arba x))) x)) (bvxor x (shesh (arba x)))) (bvxor x (shesh (arba x)))) x) x) x) (_ bv0 64)))

real	0m0.208s
user	0m0.200s
sys	0m0.007s
PRE_icfp_gen_11.15.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (bvor x (smol (_ bv1 64))) (im (bvand (_ bv1 64) (arba (smol x))) x (bvor x (ehad x)))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand x (ehad x)) x (bvor x (ehad x)))) (im (bvor (_ bv1 64) x) (_ bv1 64) (bvor x (ehad x))))))

real	0m0.090s
user	0m0.084s
sys	0m0.006s
PRE_icfp_gen_11.16.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (im (ehad x) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (ehad x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh x)) (im (ehad (bvand x (arba x))) (_ bv1 64) (bvor (_ bv1 64) (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (ehad (bvand x (arba x))) (_ bv1 64) (ehad x)) (ehad x)) (bvor (_ bv1 64) (ehad x)))) (im (ehad (bvand x (arba x))) (_ bv1 64) (bvor (_ bv1 64) (ehad x)))) (bvxor x (shesh (ehad x)))) x) x))

real	0m0.421s
user	0m0.407s
sys	0m0.013s
PRE_icfp_gen_11.17.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (im x (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (bvnot (im x (_ bv0 64) x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol (bvnot x)))) (shesh x) (shesh (im (bvand (_ bv1 64) (arba x)) x (_ bv0 64)))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (shesh x) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (shesh x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) (shesh x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvnot (bvor (smol x) (shesh x))) (im (ehad (bvnot (bvor x (shesh x)))) (shesh x) (_ bv0 64)) (shesh x)) (im (bvand (_ bv1 64) (shesh (smol (smol x)))) (im (bvnot (bvor (smol x) (shesh x))) (_ bv0 64) (shesh x)) (shesh x))) (im (bvand (_ bv1 64) (arba (smol (bvnot x)))) (shesh x) (im (bvnot (bvor (smol x) (shesh x))) (_ bv0 64) (shesh x))))) (im (bvand (_ bv1 64) (arba (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (shesh x) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (shesh x) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv0 64) (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (arba (smol x)))) (_ bv0 64) (shesh x)) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (shesh x) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvnot (bvor x (shesh x))) (shesh x) (_ bv0 64)) (shesh x)))))) (_ bv0 64)))

real	0m3.377s
user	0m3.313s
sys	0m0.053s
PRE_icfp_gen_11.18.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (shesh (smol (bvnot x))) (im (bvand (_ bv1 64) (arba (arba x))) (shesh (smol (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (arba x))) (shesh (bvnot (_ bv0 64))) (shesh (smol (bvnot x))))))) (shesh (smol (bvnot x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (shesh (smol (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (shesh (bvnot (_ bv0 64))) (shesh (smol (bvnot x))))) (shesh (bvnot (_ bv0 64))))) (smol (bvadd (_ bv1 64) (shesh x)))))

real	0m0.152s
user	0m0.142s
sys	0m0.010s
PRE_icfp_gen_11.19.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (shesh (smol x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (shesh (smol x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (shesh (smol x)) (ehad (ehad (bvadd (_ bv1 64) x)))))) (shesh (smol x))) (ehad (ehad x))))

real	0m0.107s
user	0m0.101s
sys	0m0.006s
PRE_icfp_gen_11.2.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (bvor (_ bv1 64) x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd x (ehad x)) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) x))) (shesh (ehad (smol x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd x (ehad x)) (shesh (ehad (smol x)))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad x)) (shesh x)) (bvadd x (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (ehad (smol x))) (bvadd x (ehad x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (ehad (smol x))) (im (bvand (_ bv1 64) (arba x)) (shesh x) (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))) (shesh (ehad (smol x)))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (shesh x)) (shesh x))))) (_ bv0 64)))

real	0m0.206s
user	0m0.200s
sys	0m0.006s
PRE_icfp_gen_11.20.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (smol (bvand x (bvadd (_ bv1 64) x))) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad x)) (ehad (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (smol x))) (smol (bvxor (_ bv1 64) x)) (_ bv0 64)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (shesh (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (smol (smol (_ bv1 64))) (ehad x)) (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (im (shesh (bvand x (ehad x))) (smol x) (ehad x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad x) (smol x)) (smol (bvand x (bvadd (_ bv1 64) x)))) (im (ehad (bvand x (shesh x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (ehad x) (bvadd (_ bv1 64) (shesh x))) (ehad (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (bvand x (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (shesh x)) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad x) (smol x))) (im (shesh (ehad x)) (_ bv0 64) (smol (bvxor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh x)) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (ehad (bvadd (_ bv1 64) x)) (smol (bvand x (smol (_ bv1 64))))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (smol (bvxor (_ bv1 64) x)) (ehad x))))) (_ bv1 64)))

real	0m0.228s
user	0m0.220s
sys	0m0.008s
PRE_icfp_gen_11.3.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (im (ehad x) (_ bv1 64) x)) (bvnot (smol x)) (im (ehad (bvand x (bvadd x (smol x)))) (bvnot (smol x)) (smol (_ bv1 64)))))

real	0m1.839s
user	0m1.806s
sys	0m0.027s
PRE_icfp_gen_11.4.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (im (shesh x) (smol x) (im (shesh (ehad x)) (bvnot (arba (bvnot x))) (ehad (smol (smol x))))) (im (shesh (smol x)) (ehad (smol (bvor (_ bv1 64) x))) (im (shesh (ehad x)) (bvnot (arba (bvnot x))) (ehad (smol (smol x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (ehad x)) (smol x) (im (shesh x) (bvnot (arba (bvnot (_ bv0 64)))) (bvnot (arba (bvnot x))))) (im (shesh (smol x)) (bvnot (arba (bvnot x))) (im (shesh (ehad x)) (smol x) (bvnot (arba (bvnot x))))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (im (shesh x) (bvnot (arba (bvnot (_ bv0 64)))) (bvnot (arba (bvnot x)))) (bvnot (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (ehad (smol (smol x))) (im (bvor (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) x) (smol x))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvor (_ bv1 64) (shesh x)) (smol x) (im (shesh (ehad x)) (bvnot (arba (bvnot x))) (ehad (smol (smol x))))) (im (shesh (smol x)) (ehad (smol (bvadd (_ bv1 64) x))) (im (shesh (ehad x)) (bvnot (arba (bvnot x))) (ehad (smol (smol x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvor (_ bv1 64) (shesh x)) (bvnot (arba (bvnot (_ bv0 64)))) (im (shesh (ehad x)) (smol x) (bvnot (arba (bvnot x))))) (bvnot (arba (bvnot x))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (im (shesh x) (bvnot (arba (bvnot (_ bv0 64)))) (bvnot (arba (bvnot x)))) (bvnot (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (ehad (smol (smol x))) (im (shesh (smol x)) (ehad (smol (bvadd (_ bv1 64) x))) (ehad (smol (smol x)))))))))

real	0m0.326s
user	0m0.317s
sys	0m0.008s
PRE_icfp_gen_11.5.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (im (ehad x) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (ehad x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (bvxor x (shesh (ehad x))) (bvxor x (smol (_ bv1 64)))) (smol (_ bv1 64))) x))

real	0m0.174s
user	0m0.165s
sys	0m0.009s
PRE_icfp_gen_11.6.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvnot x))

real	0m0.015s
user	0m0.013s
sys	0m0.003s
PRE_icfp_gen_11.7.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (shesh x) (im (bvand (_ bv1 64) (shesh x)) (im (shesh x) (im (bvand (_ bv1 64) (ehad x)) (bvor x (bvadd (_ bv1 64) x)) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) x (shesh x))) (im (bvand (_ bv1 64) (ehad x)) x (shesh x)))))

real	0m0.055s
user	0m0.052s
sys	0m0.003s
PRE_icfp_gen_11.8.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (arba x) (shesh (arba (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (arba (bvadd (_ bv1 64) x)) (shesh (arba (smol x))))) (im (bvor (_ bv1 64) (arba x)) (shesh (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (arba x) (shesh (arba (smol x)))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (arba (smol (bvnot x))) (arba x) (im (bvand (_ bv1 64) (shesh x)) (arba x) (shesh (arba (smol x))))) (im (bvand (_ bv1 64) (shesh x)) (arba x) (shesh (arba (smol x))))) (im (bvand (_ bv1 64) (shesh x)) (arba x) (shesh (arba (smol x)))))) (_ bv0 64)))

real	0m0.091s
user	0m0.085s
sys	0m0.006s
PRE_icfp_gen_11.9.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (arba (smol (smol x))) (smol (bvadd (_ bv1 64) (shesh x)))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (im (bvand x (arba x)) (arba (smol (bvadd (_ bv1 64) x))) (arba (smol (smol x)))) (smol (bvadd (_ bv1 64) (shesh x)))) (im (bvand (_ bv1 64) (arba x)) (arba (smol (smol x))) (smol (bvadd (_ bv1 64) (shesh x)))))) (im (bvand (_ bv1 64) x) (im (bvand x (arba x)) (arba (smol (bvadd (_ bv1 64) x))) (arba (smol (smol x)))) (im (bvand (_ bv1 64) (arba x)) (arba (smol (smol x))) (smol (bvadd (_ bv1 64) (shesh x)))))))

real	0m0.075s
user	0m0.072s
sys	0m0.003s
PRE_icfp_gen_12.1.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (shesh (shesh x)) x (bvxor x (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (bvxor x (ehad x)) (im (bvnot (bvxor (_ bv1 64) x)) (bvnot (smol (_ bv1 64))) (ehad (bvnot x))))) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (shesh x)) x (bvxor x (ehad x))) x)) (bvadd x (bvxor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba x)) (im (shesh (shesh x)) x (bvxor x (ehad x))) (bvadd (_ bv1 64) x))))

real	0m0.257s
user	0m0.252s
sys	0m0.005s
PRE_icfp_gen_12.10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (ehad (bvadd (_ bv1 64) (bvxor (_ bv1 64) x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvnot x) (bvnot (_ bv1 64))) (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot (_ bv1 64)) (bvnot x))))) (im (bvand (_ bv1 64) (ehad x)) (smol x) (im (bvand (_ bv1 64) (shesh x)) (smol (im x (bvnot (_ bv0 64)) x)) (_ bv1 64)))))

real	0m0.136s
user	0m0.129s
sys	0m0.007s
PRE_icfp_gen_12.11.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (smol (_ bv1 64)) (im (bvand (_ bv1 64) (arba x)) (bvxor (_ bv1 64) (shesh x)) (smol (_ bv1 64)))))

real	0m0.029s
user	0m0.026s
sys	0m0.002s
PRE_icfp_gen_12.12.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvadd x (shesh x)) (ehad (ehad x)) (_ bv0 64)) (ehad (ehad x))) (_ bv0 64)))

real	0m0.035s
user	0m0.034s
sys	0m0.001s
PRE_icfp_gen_12.13.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (_ bv0 64) x) (_ bv0 64)) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) x (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (arba x)) x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (arba x)) (_ bv0 64)))) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (arba (bvxor x (bvadd (_ bv1 64) x))) (shesh (arba x)) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) (shesh (arba x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) x (shesh (arba x)))))))

real	0m0.171s
user	0m0.165s
sys	0m0.005s
PRE_icfp_gen_12.14.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh x)) (im (shesh x) (_ bv0 64) (ehad (smol (smol x)))) (ehad (smol (smol x))))))

real	0m0.165s
user	0m0.161s
sys	0m0.003s
PRE_icfp_gen_12.15.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (arba x)) (im (shesh (ehad x)) (_ bv0 64) (im (bvand (_ bv1 64) (bvand x (arba x))) (shesh (arba (arba (ehad x)))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (_ bv0 64)) (bvnot (smol (smol (arba x))))))) (shesh (arba (arba (ehad x))))) (im (shesh (ehad x)) (_ bv0 64) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvnot (smol (smol (arba x)))) (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) x) (_ bv0 64) (im (ehad (bvand x (shesh x))) (_ bv0 64) (bvnot (smol (smol (arba x)))))) (im (shesh (ehad x)) (_ bv0 64) (bvnot (_ bv0 64))))))

real	0m1.429s
user	0m1.411s
sys	0m0.013s
PRE_icfp_gen_12.16.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (arba x)) (bvxor x (smol x)) (bvadd (_ bv1 64) (bvxor (_ bv1 64) x))) (im (arba x) (bvadd (_ bv1 64) (bvxor (_ bv1 64) x)) (im (shesh (arba x)) (bvxor x (smol x)) (bvadd (_ bv1 64) (bvxor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvxor x (smol x)) (im (arba x) (bvxor x (smol (_ bv1 64))) (bvxor x (smol x)))) (im (arba x) (bvadd (_ bv1 64) (bvxor (_ bv1 64) x)) (bvxor x (smol x))))) (bvxor x (smol x))))

real	0m0.058s
user	0m0.054s
sys	0m0.004s
PRE_icfp_gen_12.17.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (arba (smol x)) (arba (bvxor x (shesh x))) (_ bv0 64)) (arba (bvxor x (shesh x)))))

real	0m0.092s
user	0m0.085s
sys	0m0.006s
PRE_icfp_gen_12.18.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (shesh (ehad x)) (ehad x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand x (ehad x)) (ehad x) (shesh (ehad (bvadd (_ bv1 64) x)))) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand x (arba x)) (ehad x) (im (bvand (_ bv1 64) (shesh x)) (shesh (ehad x)) (ehad x))) (shesh (ehad x))))))

real	0m0.085s
user	0m0.082s
sys	0m0.004s
PRE_icfp_gen_12.19.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvxor (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba x) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvxor (_ bv1 64) (shesh x)) (_ bv1 64)))) (bvxor (_ bv1 64) (shesh x))) (im (arba (arba x)) (_ bv1 64) (arba x))) (im (bvor (_ bv1 64) (shesh (smol x))) (_ bv1 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) (shesh x)) (arba x)) (arba x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvxor (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (bvxor (_ bv1 64) (shesh x)) (arba x)) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvxor (_ bv1 64) (shesh x)) (arba x))))))

real	0m0.146s
user	0m0.139s
sys	0m0.006s
PRE_icfp_gen_12.2.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (im (bvand x (arba x)) (smol (smol (_ bv1 64))) (smol (smol x))) (smol (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) (im (arba (ehad x)) (smol (smol x)) (bvor (_ bv1 64) (smol x))))))

real	0m0.043s
user	0m0.040s
sys	0m0.003s
PRE_icfp_gen_12.20.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (arba (arba x)) (smol x)) (im (bvand (_ bv1 64) (ehad x)) (smol x) (arba (arba x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvor (_ bv1 64) (shesh x)) (_ bv0 64) (arba (arba x))) (smol x)) (im (bvand (_ bv1 64) (ehad x)) (smol x) (im (bvor (_ bv1 64) (shesh x)) (im x (_ bv1 64) (_ bv0 64)) (arba (arba x)))))))

real	0m0.056s
user	0m0.054s
sys	0m0.002s
PRE_icfp_gen_12.3.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (shesh (arba x)) (bvnot (bvxor x (bvadd (_ bv1 64) x)))) (smol (bvnot (_ bv1 64)))))

real	0m0.102s
user	0m0.099s
sys	0m0.003s
PRE_icfp_gen_12.4.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (shesh (bvnot x))) (im (shesh (arba (bvnot x))) (bvadd (_ bv1 64) (shesh (bvnot (_ bv0 64)))) (_ bv0 64))) (bvadd (_ bv1 64) (shesh (bvnot x)))) (im (shesh (arba (bvnot x))) (bvadd (_ bv1 64) (shesh (bvnot (_ bv0 64)))) (arba (arba (ehad (ehad x)))))) (bvadd (_ bv1 64) (shesh (bvnot x)))))

real	0m0.826s
user	0m0.810s
sys	0m0.013s
PRE_icfp_gen_12.5.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (im (shesh (smol x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (shesh (bvxor x (bvadd (_ bv1 64) x))) x (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (bvor (_ bv1 64) x)) (im (shesh (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) x (bvor (_ bv1 64) x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (arba (smol x))) x (im (ehad (ehad (smol x))) (bvor (_ bv1 64) (smol x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) x) (bvor x (smol (_ bv1 64)))) (bvor (_ bv1 64) x)))))

real	0m0.108s
user	0m0.100s
sys	0m0.008s
PRE_icfp_gen_12.6.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (shesh (arba x))) (im (shesh (bvand x (shesh x))) (bvnot (bvor x (smol x))) (bvadd (_ bv1 64) x)) (bvnot (bvor x (smol x)))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot (bvor x (smol x))) (im (bvand (_ bv1 64) (arba x)) (smol x) (bvnot (bvor x (smol x))))) (im (bvand (_ bv1 64) (arba x)) (im (shesh (bvand x (shesh x))) (bvxor (_ bv1 64) x) (bvnot (bvor x (smol x)))) (bvxor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (bvxor (_ bv1 64) x) (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot (bvor x (smol x))) (im (shesh (shesh (arba x))) (bvxor (_ bv1 64) x) (smol x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad x)) (bvnot (bvor x (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) x) (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot (bvor x (smol x))) (im (bvand (_ bv1 64) x) (bvnot (bvor x (smol x))) (smol x))))) (_ bv0 64)))

real	0m0.164s
user	0m0.160s
sys	0m0.004s
PRE_icfp_gen_12.7.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (bvor (_ bv1 64) x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (shesh (shesh (arba (ehad x)))) (shesh (shesh (smol x)))) (shesh (shesh (smol x)))) (_ bv0 64)))

real	0m0.456s
user	0m0.447s
sys	0m0.007s
PRE_icfp_gen_12.8.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvnot x) (im (arba (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (bvnot (_ bv0 64)) (im (bvxor (_ bv1 64) (arba x)) (smol x) (_ bv0 64)))))

real	0m0.089s
user	0m0.084s
sys	0m0.004s
PRE_icfp_gen_12.9.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (arba (ehad x))) (im (bvor (_ bv1 64) (shesh x)) (_ bv0 64) (im (shesh (smol x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh x) (bvnot (arba (ehad x)))) (bvnot (arba (ehad x)))))) (im (bvand (_ bv1 64) (shesh x)) (bvnot (arba (ehad x))) (im (bvxor (_ bv1 64) (shesh x)) (_ bv0 64) (im (shesh (smol x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh x) (bvnot (arba (ehad x)))) (bvnot (arba (ehad x))))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (im (shesh (bvadd x (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (bvnot (arba (ehad x)))) (bvnot (arba (ehad x))))) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvadd x (bvnot (_ bv1 64)))) (im (shesh (smol x)) (bvnot (arba (ehad x))) (shesh (bvadd x (bvnot (_ bv1 64)))))))) (shesh x)) (shesh (bvnot (_ bv0 64)))))

real	0m0.257s
user	0m0.253s
sys	0m0.003s
PRE_icfp_gen_13.1.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) x) (im (bvand x (arba x)) (arba (smol (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) x)) x) (im (bvand x (arba x)) (im (shesh (arba (smol x))) (arba (smol (bvadd (_ bv1 64) x))) x) (im (bvand (_ bv1 64) x) (ehad (ehad x)) (bvor (_ bv1 64) x))))) (im (shesh (smol (arba x))) x (im (shesh (arba (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) x (arba (smol x))) (im (bvand x (arba x)) (arba (smol x)) x)))) (im (bvand x (arba x)) (im (shesh (smol (arba x))) x (arba (smol x))) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (shesh (ehad (bvnot x))) (arba (smol (smol x))) x) (arba (smol (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) x) (arba (smol (smol x)))) (arba (smol (smol x)))) (im (bvand (_ bv1 64) x) x (im (shesh (arba (smol x))) (im (shesh (smol (arba x))) x (arba (smol (smol x)))) (bvor (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) x (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (smol x)) (im (shesh (arba (smol x))) x (arba (smol x)))) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (shesh (arba (smol x))) (im (bvand x (arba x)) (arba (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (ehad x)) x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (shesh (ehad (bvnot x))) (arba (smol (smol x))) (bvor (_ bv1 64) x)) (arba (smol (smol x))))) (im (shesh (ehad (bvnot x))) (arba (smol (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand x (arba x)) (arba (smol x)) (arba (smol (smol x)))) x)))) (im (bvand (_ bv1 64) x) (im (shesh (ehad (bvnot x))) (arba (smol (smol x))) (im (bvand (_ bv1 64) (shesh x)) x (arba (smol (smol x))))) (im (shesh (ehad (bvnot x))) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvor (_ bv1 64) x) x))))))

real	0m0.313s
user	0m0.307s
sys	0m0.005s
PRE_icfp_gen_13.10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot x) (bvnot (shesh (arba x)))) (im (arba (ehad x)) (bvnot (_ bv0 64)) (im (bvand (_ bv1 64) (arba x)) (bvnot x) (im (bvand (_ bv1 64) (shesh x)) (bvnot x) (bvnot (shesh (arba x))))))) (bvnot (shesh (arba x)))))

real	0m0.061s
user	0m0.057s
sys	0m0.004s
PRE_icfp_gen_13.11.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (arba (arba (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba (arba (ehad x))) (bvand x (smol (arba x)))) (bvand x (smol (arba x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba (arba (ehad x))) (bvand x (smol (arba x))))) (arba (arba (ehad x))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba (arba (ehad x))) (im (bvand x (shesh x)) (_ bv0 64) (arba (arba (ehad x)))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvand x (smol (arba x))) (_ bv0 64))))

real	0m0.333s
user	0m0.323s
sys	0m0.009s
PRE_icfp_gen_13.12.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (ehad x)) (smol (smol (_ bv1 64))) (smol x)) (im (shesh (ehad x)) (_ bv0 64) (smol x))) x))

real	0m0.028s
user	0m0.026s
sys	0m0.002s
PRE_icfp_gen_13.13.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (ehad x)) (im (bvand (_ bv1 64) (im x (_ bv1 64) (ehad x))) (arba (ehad x)) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand x (arba (bvnot x))) (im (bvand x (arba (bvnot (_ bv0 64)))) (arba (ehad x)) (im (bvor (_ bv1 64) (bvand x (shesh x))) (im (bvadd x (bvand x (arba x))) (_ bv0 64) (arba (ehad x))) (arba (ehad x)))) (arba (ehad x))) (arba (ehad x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (im x (_ bv1 64) (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (arba (ehad x)) (bvadd x (shesh (arba x)))) (bvadd x (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd x (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd x (shesh (arba x))) x))) (im (bvor (_ bv1 64) (bvand x (shesh x))) x (bvadd x (shesh (arba x)))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba (ehad x)) (bvadd x (shesh (arba x))))) (_ bv0 64)) (arba (ehad x))))

real	0m0.472s
user	0m0.462s
sys	0m0.008s
PRE_icfp_gen_13.14.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) x) (bvxor (_ bv1 64) x) (im (shesh (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) (shesh (shesh x))) (shesh (shesh x)))) (_ bv0 64)))

real	0m0.063s
user	0m0.059s
sys	0m0.004s
PRE_icfp_gen_13.15.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvor (_ bv1 64) (shesh (smol x))) (im (bvor (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (bvor (_ bv1 64) x))) (_ bv1 64)) (bvor (_ bv1 64) x)) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) x) (im (arba (arba (arba x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) x) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (bvor (_ bv1 64) x)))) (im (bvor (_ bv1 64) (shesh (smol x))) (_ bv1 64) (bvor (_ bv1 64) x)))) x)) x) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (arba (arba (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (im (bvand (_ bv1 64) x) x (smol x))) (smol x)) (smol x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (smol x) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) x) (smol x))) (smol x))) (smol x)))))

real	0m0.294s
user	0m0.282s
sys	0m0.011s
PRE_icfp_gen_13.16.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvxor x (arba (bvnot x))) (bvand x (bvnot (ehad x)))) (im (bvand (_ bv1 64) (arba (smol x))) (bvand x (bvnot (ehad x))) (bvxor x (arba (bvnot x))))) (bvxor x (arba (bvnot (_ bv0 64))))) (bvxor x (arba (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvand x (bvnot (ehad x))) (bvxor x (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvand x (bvnot (ehad x))) (bvxor x (arba (bvnot x))))) (bvand x (bvnot (ehad x)))) (bvand x (bvnot (ehad x))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvxor x (arba (bvnot (_ bv0 64)))) (bvand x (bvnot (ehad x))))))

real	0m0.229s
user	0m0.222s
sys	0m0.006s
PRE_icfp_gen_13.17.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvor (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) (smol x)) (bvadd (_ bv1 64) x)) (bvnot x)) (im (shesh (ehad (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (bvor (_ bv1 64) x)) (bvnot x)))) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (ehad (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (bvor (_ bv1 64) x)) (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (ehad (ehad x))) (bvadd (_ bv1 64) x) (bvadd x (bvor (_ bv1 64) x))) (bvnot x)))) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (ehad (ehad x))) (bvadd (_ bv1 64) x) (smol x)) (bvnot x))))

real	0m0.123s
user	0m0.118s
sys	0m0.005s
PRE_icfp_gen_13.18.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvor (_ bv1 64) (shesh (shesh x))) (im (arba (bvxor x (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (smol x)) (_ bv0 64)) (im (bvand (_ bv1 64) x) (im (bvadd x (smol x)) (bvadd (_ bv1 64) x) (im (arba (bvxor x (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (smol x)) (_ bv1 64))) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand x (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (smol x)) (bvadd (_ bv1 64) x)) (bvor (_ bv1 64) (smol x))))))

real	0m0.295s
user	0m0.288s
sys	0m0.006s
PRE_icfp_gen_13.19.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvadd (_ bv1 64) (im (bvor (_ bv1 64) x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (im (shesh x) x (_ bv1 64))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (_ bv0 64) (bvand x (shesh (bvnot (_ bv0 64))))) (_ bv0 64)) (_ bv0 64)) (bvand x (shesh (bvnot (_ bv0 64))))))

real	0m0.241s
user	0m0.233s
sys	0m0.007s
PRE_icfp_gen_13.2.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (bvnot x)) (shesh x)))

real	0m0.034s
user	0m0.030s
sys	0m0.004s
PRE_icfp_gen_13.20.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvxor (_ bv1 64) x) (smol (smol x))) (smol (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (bvxor (_ bv1 64) x) (smol (smol x)))) (bvxor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) x) (smol (smol x))) (im (bvand (_ bv1 64) (ehad x)) (smol (smol x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol (smol x)) (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvxor (_ bv1 64) x) (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand x (shesh x)) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvxor (_ bv1 64) x) (smol (smol x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand x (shesh (ehad x))) (_ bv1 64) (bvxor (_ bv1 64) x)) (_ bv1 64)) (bvxor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvxor (_ bv1 64) x) (_ bv1 64)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvxor (_ bv1 64) (bvand x (shesh x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvxor (_ bv1 64) x) (_ bv1 64)) (im (bvand (_ bv1 64) (bvand x (ehad x))) (bvxor (_ bv1 64) x) (smol (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (smol (smol x)) (im (bvand (_ bv1 64) (arba (arba x))) (smol (smol x)) (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (_ bv1 64) (smol (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvxor (_ bv1 64) x) (smol (smol x)))))))))

real	0m0.351s
user	0m0.345s
sys	0m0.005s
PRE_icfp_gen_13.3.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (_ bv1 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvxor (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvxor (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba x)) (bvxor (_ bv1 64) (arba (ehad x))) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (_ bv1 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv1 64) (bvxor (_ bv1 64) (arba (ehad x)))) (bvxor (_ bv1 64) (arba (ehad x)))))))

real	0m0.154s
user	0m0.150s
sys	0m0.003s
PRE_icfp_gen_13.4.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (bvnot x))) (shesh x) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvnot (_ bv1 64)) (bvnot x)) (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot x) (im (arba (bvadd x (smol x))) (bvnot x) (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot (_ bv1 64)) (bvnot x)) (bvnot x)) (im (arba (bvand x (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (_ bv1 64)) (bvnot x)) (bvnot (_ bv1 64)))))))) (bvnot x)))

real	0m0.194s
user	0m0.190s
sys	0m0.003s
PRE_icfp_gen_13.5.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvadd (_ bv1 64) (im (arba x) (_ bv1 64) (_ bv0 64))) (im (bvadd (_ bv1 64) (im (shesh x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot (im x (_ bv0 64) x))) (bvadd x (smol x)) (bvnot x)) (im (bvand (_ bv1 64) (bvnot (im x (_ bv0 64) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (ehad x) (shesh x)) (im (ehad (bvand x (bvadd x (smol x)))) (bvnot (_ bv1 64)) (bvnot x)) (bvnot x)) (im (bvor (_ bv1 64) (shesh x)) (im (ehad (bvadd (_ bv1 64) (bvand x (ehad x)))) (bvnot (_ bv1 64)) (bvnot x)) (bvnot x)))) (bvnot x)) (bvnot x)) (bvnot x))) (bvnot (_ bv1 64))) (im (arba (bvand x (smol x))) (bvnot x) (bvnot (_ bv1 64)))) (bvnot x)))

real	0m2.076s
user	0m2.048s
sys	0m0.021s
PRE_icfp_gen_13.6.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (smol x) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (smol x) (bvadd (_ bv1 64) x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvnot x)) (smol x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))))

real	0m0.034s
user	0m0.030s
sys	0m0.003s
PRE_icfp_gen_13.7.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) (smol x)) (im (bvand x (arba x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (smol x)))) (im (bvand x (ehad x)) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand x (arba x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand x (arba x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x)))))) (im (bvand (_ bv1 64) (shesh x)) (smol (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (arba (ehad x)) (bvor (_ bv1 64) (smol x)) (smol (bvor (_ bv1 64) (smol x)))) (im (arba (ehad (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (smol x)) (smol (bvor (_ bv1 64) (smol x))))) (im (arba (ehad x)) (bvor (_ bv1 64) (smol x)) (smol (bvor (_ bv1 64) (smol x))))))))

real	0m0.090s
user	0m0.085s
sys	0m0.005s
PRE_icfp_gen_13.8.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (im x (_ bv1 64) (arba x))) (im (bvand (_ bv1 64) (im x (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (shesh (bvadd (_ bv1 64) x))) (bvor x (smol (bvxor (_ bv1 64) x))) (im (bvnot (bvxor (_ bv1 64) x)) (_ bv0 64) (bvnot (_ bv0 64)))) (bvor x (smol (bvxor (_ bv1 64) x)))) (bvor x (smol (bvxor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (arba (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (arba (ehad x))) (_ bv0 64)))) (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) (shesh (arba (ehad x))))) (im (shesh (arba (bvnot x))) (_ bv0 64) (shesh (arba (ehad x))))) (bvor x (smol x))))

real	0m0.285s
user	0m0.277s
sys	0m0.007s
PRE_icfp_gen_13.9.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvnot (arba x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (im (ehad (bvand x (ehad x))) (bvnot (arba x)) (_ bv0 64)) (im (bvor (_ bv1 64) (shesh x)) (bvnot (arba x)) (shesh (arba x)))) (_ bv0 64)) (im (bvor (_ bv1 64) (shesh x)) (im (arba (smol (bvadd (_ bv1 64) x))) (_ bv0 64) (im (bvand (_ bv1 64) (ehad x)) (bvnot (_ bv0 64)) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) (shesh (arba x)))))))

real	0m0.109s
user	0m0.104s
sys	0m0.004s
PRE_icfp_gen_14.1.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (bvnot x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (im (bvnot x) (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (ehad (bvand x (arba x))) (_ bv1 64) (bvor (_ bv1 64) (ehad x))) (bvor (_ bv1 64) (ehad x))) (_ bv0 64)) (shesh (arba (arba (ehad x))))) (shesh (arba (arba (ehad x))))) (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) (shesh (arba (arba (ehad x)))))) (_ bv0 64)))

real	0m0.928s
user	0m0.916s
sys	0m0.010s
PRE_icfp_gen_14.10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot (im x (_ bv0 64) x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvxor (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (shesh (shesh x)))) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (shesh (shesh x))) (bvxor (_ bv1 64) (shesh x)))) (bvor (_ bv1 64) (shesh (shesh x)))) (im (bvand (_ bv1 64) (im x (_ bv1 64) (ehad x))) (im (bvand (_ bv1 64) (im x (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (arba (smol (bvxor x (bvadd (_ bv1 64) x)))) (bvxor (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (shesh (shesh x)))) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) x))) (shesh (shesh x)) (bvxor (_ bv1 64) (shesh x))) (bvxor (_ bv1 64) (shesh x)))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (shesh x)) (bvxor (_ bv1 64) (shesh x)))) (bvxor (_ bv1 64) (shesh x)))) (bvxor (_ bv1 64) (shesh (ehad (bvnot (_ bv0 64)))))))

real	0m1.788s
user	0m1.758s
sys	0m0.024s
PRE_icfp_gen_14.11.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) (im (arba (bvxor x (bvadd (_ bv1 64) x))) (_ bv1 64) (im (shesh (bvand x (smol x))) (_ bv0 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (arba x)) (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (_ bv1 64)) (_ bv1 64))) (bvand (_ bv1 64) (arba (arba x)))))) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64)) (_ bv0 64)) (im (bvand (_ bv1 64) (arba (smol x))) (bvand (_ bv1 64) (ehad x)) (_ bv1 64))))) (_ bv0 64)))

real	0m0.331s
user	0m0.320s
sys	0m0.009s
PRE_icfp_gen_14.12.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (bvnot (ehad x)) (_ bv0 64)))

real	0m0.020s
user	0m0.017s
sys	0m0.003s
PRE_icfp_gen_14.13.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (shesh (bvadd x (ehad x))) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (shesh (bvadd x (ehad x))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (shesh (bvadd x (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (bvadd x (ehad x))) (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (arba (smol x))) (smol (_ bv1 64)) (im (bvand (_ bv1 64) (arba x)) (shesh (bvadd x (ehad x))) (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (shesh x) (_ bv0 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (shesh (bvadd x (ehad x))) (smol (_ bv1 64))) (smol (_ bv1 64)))) (shesh (bvadd x (ehad x)))) (_ bv0 64))))

real	0m0.110s
user	0m0.101s
sys	0m0.008s
PRE_icfp_gen_14.14.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot (bvand x (arba (arba x))))) (im (bvand (_ bv1 64) (bvnot (bvand x (shesh (ehad x))))) (im (bvadd (_ bv1 64) (im (bvand x (arba x)) (_ bv1 64) (_ bv0 64))) (im (bvadd (_ bv1 64) (im (bvand x (ehad x)) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (bvor x (arba (arba x))))) (im (bvand (_ bv1 64) (shesh (shesh (bvor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (bvnot (bvand x (ehad x))))) (im (bvand (_ bv1 64) (shesh (arba (bvor x (arba x))))) (im (bvand (_ bv1 64) (arba (smol (bvor x (arba x))))) (im (bvor (_ bv1 64) (arba (bvxor x (bvadd (_ bv1 64) (bvor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (bvor (bvnot x) (ehad x))) (im (bvxor (_ bv1 64) (arba (bvxor x (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (smol (bvor x (smol x))))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (arba (ehad (bvor x (shesh x))))) (bvadd x (im (bvand x (ehad x)) (_ bv0 64) x)) (bvor (_ bv1 64) (arba (bvand (smol x) (arba x))))) (bvor (_ bv1 64) (arba (bvand (smol x) (arba x))))) (bvor (_ bv1 64) (arba (bvand (smol x) (arba x))))) (bvor (_ bv1 64) (arba (bvand (smol x) (arba x))))) (bvor (_ bv1 64) (arba (bvand (smol x) (arba x))))) (smol x)) (smol x)) (smol x)) (smol x)) (smol x)) (smol x)) (im (bvand (_ bv1 64) (shesh (shesh (bvor x (shesh x))))) (bvadd x (im (bvand x (ehad x)) (_ bv0 64) x)) (bvor (_ bv1 64) (arba (bvand (smol x) (arba x)))))) (bvor (_ bv1 64) (arba (bvand (smol x) (arba x))))) (im (bvand (_ bv1 64) (arba (arba (bvadd x (smol x))))) (bvadd x (im (bvand x (ehad x)) (_ bv0 64) x)) (im (bvand (_ bv1 64) (arba (bvnot (bvor x (ehad x))))) (bvor (_ bv1 64) (arba (bvand (smol x) (arba x)))) (smol x)))) (bvadd x (im (bvand x (ehad x)) (_ bv0 64) x))))

real	0m19.393s
user	0m19.169s
sys	0m0.159s
PRE_icfp_gen_14.15.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvadd (_ bv1 64) (im (bvnot x) (_ bv1 64) (_ bv0 64))) (im (bvadd (_ bv1 64) (im (bvxor (_ bv1 64) x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvor (_ bv1 64) (im (bvand (_ bv1 64) x) (_ bv0 64) x)) (bvnot (bvand x (smol x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (bvand x (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvor (_ bv1 64) (arba (bvnot x))) (bvnot (bvand x (smol x))) (im (arba (smol (bvxor x (smol x)))) (bvnot (bvand x (smol x))) (bvor (_ bv1 64) (smol x)))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (bvand x (smol x))) (bvor (_ bv1 64) (smol x))) (im (bvor (_ bv1 64) (arba (bvnot x))) (bvnot (bvand x (smol x))) (bvor (_ bv1 64) (smol x)))) (bvor (_ bv1 64) (smol x))))) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))) (_ bv0 64)) (bvnot (smol x))) (bvnot (_ bv0 64))))

real	0m0.978s
user	0m0.966s
sys	0m0.008s
PRE_icfp_gen_14.16.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) x) (bvnot (bvor x (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvor x (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvnot (bvor x (smol x))) (shesh (ehad (smol x))))) (im (bvand (_ bv1 64) (arba x)) (bvnot (bvor x (smol x))) (shesh (ehad (smol x)))))) (_ bv0 64)))

real	0m0.118s
user	0m0.114s
sys	0m0.004s
PRE_icfp_gen_14.17.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (im x (_ bv0 64) x)) x (bvxor x (arba x))) x))

real	0m0.029s
user	0m0.027s
sys	0m0.002s
PRE_icfp_gen_14.18.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (smol (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (ehad (smol (smol x))) (shesh (bvnot x))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (smol (smol x))) (shesh (bvnot x))) (ehad (smol (smol x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (ehad (smol (smol x))) (im (bvand (_ bv1 64) (shesh x)) (ehad (smol (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (ehad (smol (smol x))) (smol (_ bv1 64))) (ehad (smol (smol x))))))))

real	0m0.105s
user	0m0.100s
sys	0m0.004s
PRE_icfp_gen_14.19.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (im (ehad x) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (ehad x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (im (ehad x) (_ bv1 64) x)) (im (bvand (_ bv1 64) (im x (_ bv1 64) (arba x))) (shesh x) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) (im (bvor (_ bv1 64) (bvand x (arba x))) (bvor (_ bv1 64) (smol x)) (im (bvand x (ehad (bvnot x))) (im (bvadd x (bvand x (arba x))) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))))))) (bvor (_ bv1 64) (smol x)))) (shesh x)) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (shesh (bvnot (_ bv0 64))) (bvor (_ bv1 64) (smol x))) (shesh x))) (bvor (_ bv1 64) (smol x))) (_ bv0 64)) (bvadd (_ bv1 64) x)))

real	0m0.356s
user	0m0.350s
sys	0m0.005s
PRE_icfp_gen_14.2.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (smol (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba x)) (smol (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) (smol (bvxor (_ bv1 64) x)) (im (bvadd x (smol x)) (_ bv0 64) (smol (bvxor (_ bv1 64) x)))))))

real	0m0.028s
user	0m0.025s
sys	0m0.003s
PRE_icfp_gen_14.20.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (ehad (smol x)) (im (bvand (_ bv1 64) (arba x)) (im (shesh (bvnot x)) (bvnot (_ bv0 64)) (bvnot (arba (ehad x)))) (im (bvand (_ bv1 64) (ehad x)) (ehad (smol x)) (bvnot (arba (ehad x)))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (shesh (bvnot x)) (bvnot (_ bv0 64)) (im (bvand (_ bv1 64) (ehad x)) (ehad (smol (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba x)) (bvnot (arba (ehad x))) (ehad (smol (bvor (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (arba x)) (bvnot (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad (smol (bvor (_ bv1 64) x))) (bvnot (arba (ehad x))))))))

real	0m0.106s
user	0m0.098s
sys	0m0.007s
PRE_icfp_gen_14.3.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (im (arba x) x (_ bv1 64))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (shesh (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (arba (ehad (smol x))) (_ bv0 64) (shesh (ehad x))) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (arba (ehad (smol x))) (_ bv0 64) (shesh (ehad x))) (shesh (ehad x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (shesh (smol (bvnot (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (shesh (smol (bvnot x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (shesh (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (shesh (bvnot (_ bv0 64))) (shesh (smol (bvnot x)))))))) (shesh (bvnot (_ bv0 64)))))

real	0m0.784s
user	0m0.773s
sys	0m0.008s
PRE_icfp_gen_14.4.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) (ehad x)) (im (shesh (bvnot x)) (ehad (smol (bvxor (_ bv1 64) x))) (bvxor (_ bv1 64) (ehad x)))) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (im (shesh x) (bvxor (_ bv1 64) (ehad x)) x) (im (shesh (bvnot x)) x (im (bvor (_ bv1 64) (arba x)) (_ bv0 64) x))) (im (bvand (_ bv1 64) (shesh x)) (im (shesh x) (bvxor (_ bv1 64) (ehad x)) x) (im (bvand (_ bv1 64) (arba x)) x (im (bvxor (_ bv1 64) (shesh x)) (_ bv0 64) x))))))

real	0m0.135s
user	0m0.131s
sys	0m0.003s
PRE_icfp_gen_14.5.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (bvor (_ bv1 64) x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (smol x))) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvxor (_ bv1 64) x) (bvxor x (shesh (arba x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvxor x (shesh (arba x))) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) (im (bvand (_ bv1 64) x) (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (bvnot x)) (_ bv1 64) (bvxor x (shesh (arba x)))) (bvxor x (shesh (arba x)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvxor x (shesh (arba x))) (_ bv1 64))))) (_ bv1 64)))

real	0m0.230s
user	0m0.226s
sys	0m0.003s
PRE_icfp_gen_14.6.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (im (ehad x) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (ehad x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvxor x (shesh (bvnot (_ bv0 64)))) (bvnot (smol x)) (bvnot (shesh (smol x)))) (bvnot (shesh (smol x)))) (bvnot (shesh (smol x)))) (bvnot (shesh (smol x)))) (bvnot (shesh (smol x)))) (bvnot (shesh (smol x)))) (bvnot (shesh (smol x)))) (bvnot (shesh (smol x)))) (bvnot (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (smol x))) (bvnot (smol x)))) (bvnot (smol x))) (bvnot (smol x))))

real	0m0.278s
user	0m0.271s
sys	0m0.006s
PRE_icfp_gen_14.7.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (smol (bvxor x (ehad x))) (im (bvand (_ bv1 64) (arba x)) (smol (bvxor x (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvxor x (ehad x))) (bvnot (arba x))))) (im (bvand x (shesh x)) (bvnot (_ bv0 64)) (bvnot (arba x)))) (bvnot (_ bv0 64))))

real	0m0.111s
user	0m0.104s
sys	0m0.007s
PRE_icfp_gen_14.8.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (im (shesh x) (_ bv0 64) (smol x))) (_ bv1 64)))

real	0m0.037s
user	0m0.034s
sys	0m0.003s
PRE_icfp_gen_14.9.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (bvor (_ bv1 64) x) (_ bv1 64) (_ bv0 64))) (im (bvxor (_ bv1 64) (arba (bvxor x (bvadd (_ bv1 64) (bvxor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad (bvnot x))))) (im (bvor (_ bv1 64) (arba (bvand x (bvadd (_ bv1 64) (bvnot x))))) (im (bvand (_ bv1 64) (bvor x (arba (bvor x (smol x))))) (im (bvand (_ bv1 64) (shesh (arba (bvor x (shesh x))))) (im (bvadd (_ bv1 64) (im (bvand x (arba x)) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (bvor x (arba x)))) (im (bvand (_ bv1 64) (shesh (bvnot (bvand x (smol x))))) (im (bvand (_ bv1 64) (bvor x (shesh (shesh (bvnot x))))) (im (bvand (_ bv1 64) (bvor x (shesh (arba (ehad x))))) (im (bvxor (_ bv1 64) (arba (bvand x (bvadd (_ bv1 64) (bvnot x))))) (im (bvand (_ bv1 64) (arba (bvnot (bvand x (arba x))))) (im (bvand (_ bv1 64) (bvor (shesh x) (ehad (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvnot (bvand x (shesh x))))) (im (bvor (_ bv1 64) (arba (bvxor x (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (smol (bvor x (arba x))))) (shesh (arba (ehad (bvand x (arba (arba x)))))) (bvnot (bvxor (_ bv1 64) (im (bvand x (arba x)) (_ bv1 64) x)))) (bvnot (bvxor (_ bv1 64) (im (bvand x (arba x)) (_ bv1 64) x)))) (bvnot (bvxor (_ bv1 64) (im (bvand x (arba x)) (_ bv1 64) x)))) (bvnot (bvxor (_ bv1 64) x))) (bvnot (bvxor (_ bv1 64) x))) (bvnot (bvxor (_ bv1 64) x))) (bvnot (bvxor (_ bv1 64) x))) (bvnot (bvxor (_ bv1 64) x))) (bvnot (bvxor (_ bv1 64) x))) (bvnot (bvxor (_ bv1 64) x))) (bvnot (_ bv0 64))) (bvnot (bvxor (_ bv1 64) x))) (bvnot (bvxor (_ bv1 64) x))) (bvnot (bvxor (_ bv1 64) x))) (bvnot (bvxor (_ bv1 64) x))) (bvnot (bvxor (_ bv1 64) x))) (bvnot (_ bv1 64))))

real	1m44.146s
user	1m43.099s
sys	0m0.703s
PRE_icfp_gen_15.1.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvadd (_ bv1 64) (im (bvnot x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (im x (_ bv1 64) (arba x))) (bvxor (_ bv1 64) (arba x)) (bvadd x (shesh (arba x)))) (bvadd x (shesh (arba x)))) (bvxor (_ bv1 64) (arba x))) (_ bv1 64)))

real	0m0.195s
user	0m0.186s
sys	0m0.008s
PRE_icfp_gen_15.10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) x (smol x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (smol x) x)) (smol x)) (im (bvand (_ bv1 64) (arba (bvnot x))) x (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (im (shesh x) x (smol x)) x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (smol x) (im (bvand (_ bv1 64) x) (smol x) x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (smol x))) x (smol x)) (im (arba (bvand x (arba x))) x (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) x (smol x)) x))))))

real	0m0.140s
user	0m0.135s
sys	0m0.005s
PRE_icfp_gen_15.11.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvnot (smol x)) (im (bvor (_ bv1 64) (bvnot x)) (smol (_ bv1 64)) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) x)) (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) x) (im (arba (ehad (smol x))) (_ bv1 64) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (im (arba (ehad (smol x))) (_ bv1 64) x))) (bvor (_ bv1 64) x))))

real	0m0.078s
user	0m0.073s
sys	0m0.004s
PRE_icfp_gen_15.12.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot (im x (_ bv0 64) x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (shesh x) (arba (arba (arba (ehad x))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (_ bv0 64) (im (bvand x (arba (ehad x))) (_ bv0 64) (shesh x)))) (_ bv0 64)))

real	0m0.890s
user	0m0.874s
sys	0m0.013s
PRE_icfp_gen_15.13.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvnot x) (smol x) (smol (bvxor x (arba x)))) (im (bvand (_ bv1 64) (ehad x)) (smol (bvxor x (arba x))) (im (bvxor (_ bv1 64) x) (_ bv1 64) (smol (bvxor x (arba x)))))) (bvxor (_ bv1 64) x)) (_ bv0 64)))

real	0m0.085s
user	0m0.081s
sys	0m0.004s
PRE_icfp_gen_15.14.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (bvnot (smol x))) (bvxor (_ bv1 64) x))) (im (arba (ehad (bvnot x))) (bvxor (_ bv1 64) x) (im (shesh (ehad x)) (bvnot (_ bv1 64)) (im (shesh (arba (smol x))) (bvnot (_ bv1 64)) (bvxor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh x)) (im (arba (ehad (bvnot x))) (bvxor (_ bv1 64) x) (smol (bvnot (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (bvnot (smol x))) (bvnot (_ bv1 64))))) (im (bvand (_ bv1 64) (arba (smol x))) (smol (bvnot (smol x))) (im (bvand x (shesh x)) (smol (bvnot (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (shesh (ehad x)) (bvnot (_ bv1 64)) (im (bvand (_ bv1 64) x) (bvnot (_ bv1 64)) (bvxor (_ bv1 64) x))) (smol (bvnot (smol (_ bv1 64)))))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (arba (ehad (bvnot x))) (smol (bvnot (smol x))) (im (shesh (ehad x)) (im (bvand (_ bv1 64) x) (smol (bvnot (smol (_ bv1 64)))) (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvnot (_ bv1 64)) (smol (bvnot (smol x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (arba (ehad (bvnot x))) (smol (bvnot (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvxor (_ bv1 64) x) (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) x) (bvxor (_ bv1 64) x) (smol (bvnot (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) x) (smol (bvnot (smol x))) (bvxor (_ bv1 64) x)) (im (shesh (ehad x)) (smol (bvnot (smol (_ bv1 64)))) (smol (bvnot (smol x)))))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (shesh x) (bvnot (_ bv1 64)) (smol (bvnot (smol x)))) (im (bvand (_ bv1 64) x) (smol (bvnot (smol (_ bv1 64)))) (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (_ bv1 64)) (smol (bvnot (smol (_ bv1 64))))) (smol (bvnot (smol x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (bvnot (smol x))) (im (shesh (arba (smol x))) (bvnot (_ bv1 64)) (im (bvand (_ bv1 64) x) (smol (bvnot (smol x))) (bvxor (_ bv1 64) x)))))))))

real	0m0.371s
user	0m0.361s
sys	0m0.009s
PRE_icfp_gen_15.15.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (arba x))) (arba x) (im (bvadd x (smol x)) (arba x) (im (bvand (_ bv1 64) x) (_ bv1 64) (im (bvor (_ bv1 64) (shesh (shesh x))) (_ bv1 64) (im (bvand (_ bv1 64) (arba (arba x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (shesh x))) (_ bv0 64) (_ bv1 64))))))))

real	0m0.208s
user	0m0.201s
sys	0m0.007s
PRE_icfp_gen_15.16.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (bvnot (bvxor (_ bv1 64) (ehad x))) (im (bvadd x (shesh x)) x (im (bvand (_ bv1 64) (ehad x)) (im (shesh (arba x)) (bvnot (bvxor (_ bv1 64) (ehad x))) (smol x)) (bvnot (bvxor (_ bv1 64) (ehad x)))))) (im (bvand (_ bv1 64) (ehad x)) (smol x) (bvnot (bvxor (_ bv1 64) (ehad x))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (smol x) (bvnot (bvxor (_ bv1 64) (ehad x)))) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (arba x)) (bvnot (bvxor (_ bv1 64) (ehad x))) (smol x)) (bvnot (bvxor (_ bv1 64) (ehad x))))) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (arba x)) (bvnot (bvxor (_ bv1 64) (ehad x))) (smol x)) (bvnot (bvxor (_ bv1 64) (ehad x)))))) (bvnot (_ bv0 64))))

real	0m0.082s
user	0m0.081s
sys	0m0.001s
PRE_icfp_gen_15.17.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) (im (bvand (_ bv1 64) (arba x)) (arba (smol x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (arba (smol x)) (_ bv0 64)) (arba (smol x))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (smol x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand x (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (arba (smol x)) (arba (smol (bvnot x)))) (arba (smol (bvnot x)))) (arba (smol (bvnot x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (smol x)) (im (bvand (_ bv1 64) (arba (smol x))) (arba (smol (bvnot x))) (arba (smol x))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand x (arba x)) (arba (smol x)) (arba (smol (bvnot x)))) (im (bvand x (arba x)) (arba (smol (bvnot x))) (arba (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand x (arba x)) (arba (smol (bvnot x))) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (smol x)) (im (bvand x (arba x)) (arba (smol x)) (arba (smol (bvnot x)))))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (smol (bvnot x))) (arba (smol x))))))

real	0m0.248s
user	0m0.243s
sys	0m0.004s
PRE_icfp_gen_15.18.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (arba x)) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) (arba x)) (im (bvnot (bvadd (_ bv1 64) x)) (ehad (bvadd (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (ehad x)) (ehad (bvadd (_ bv1 64) (shesh x))) (bvnot (bvxor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad x)) (ehad (bvadd (_ bv1 64) (shesh x))) (bvnot (bvxor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (arba x)) (_ bv0 64) (ehad (bvadd (_ bv1 64) (shesh x)))) (im (shesh (arba x)) (bvnot (_ bv1 64)) (bvnot (bvxor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (arba x)) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) (arba x)) (im (ehad (bvnot (bvadd (_ bv1 64) x))) (smol (_ bv1 64)) (im (bvand (_ bv1 64) (ehad x)) (ehad (bvadd (_ bv1 64) (shesh x))) (bvnot (bvxor (_ bv1 64) x)))) (bvnot (bvxor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (arba x)) (_ bv0 64) (shesh (ehad x))) (im (shesh (arba x)) (bvnot (_ bv1 64)) (bvnot (bvxor (_ bv1 64) x)))) (im (shesh (arba x)) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (bvnot (_ bv1 64))) (bvnot (bvxor (_ bv1 64) x)))))))

real	0m0.151s
user	0m0.148s
sys	0m0.003s
PRE_icfp_gen_15.19.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (bvnot x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvxor x (shesh (arba x))) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvnot (bvxor (_ bv1 64) x)) x (_ bv1 64)) x)) (bvxor x (shesh (arba x)))))

real	0m0.222s
user	0m0.218s
sys	0m0.003s
PRE_icfp_gen_15.2.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (im (shesh x) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (shesh x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (im (ehad x) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (ehad x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd x (arba (ehad x))) x) (im (bvand (_ bv1 64) (bvnot x)) (bvxor (_ bv1 64) (bvxor x (shesh x))) (bvxor x (shesh x)))) x) x) x) (bvadd x (arba (ehad x)))))

real	0m0.326s
user	0m0.318s
sys	0m0.007s
PRE_icfp_gen_15.20.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (arba (bvxor x (bvadd (_ bv1 64) x))) (bvnot x) (im (bvand (_ bv1 64) x) (bvnot (_ bv1 64)) (bvand (_ bv1 64) (ehad x)))))

real	0m0.171s
user	0m0.164s
sys	0m0.007s
PRE_icfp_gen_15.3.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (bvor x (smol (bvxor (_ bv1 64) x))) (shesh (bvnot x))) (bvor x (smol (bvxor (_ bv1 64) x)))) (im (shesh (shesh x)) (bvor x (smol (bvxor (_ bv1 64) x))) (shesh (bvnot x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (shesh (shesh x)) (bvor x (smol (bvxor (_ bv1 64) x))) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvor x (smol x)) (shesh (bvnot x))))) (bvor x (smol x))))

real	0m0.252s
user	0m0.248s
sys	0m0.003s
PRE_icfp_gen_15.4.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (smol x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvxor x (smol (_ bv1 64))) (bvnot (smol x)))) (im (bvand (_ bv1 64) (arba x)) (bvxor x (smol (_ bv1 64))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (smol x)) (bvxor x (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (ehad x) x (bvnot (smol x))) (bvxor x (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (smol x)) (bvxor x (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (arba (bvxor x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) (bvnot (smol x)) (bvxor x (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (shesh x)) (bvxor x (smol (_ bv1 64))) (im (bvand (_ bv1 64) (arba (smol x))) (bvxor x (smol (_ bv1 64))) (bvnot (smol x))))) (bvnot (smol x))))))

real	0m0.118s
user	0m0.113s
sys	0m0.005s
PRE_icfp_gen_15.5.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvnot (bvxor (_ bv1 64) x)) (_ bv0 64) (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64))) (_ bv0 64)))

real	0m0.125s
user	0m0.118s
sys	0m0.007s
PRE_icfp_gen_15.6.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (smol x) (im (bvand (_ bv1 64) (arba x)) (shesh (smol (arba x))) (im (ehad (bvadd (_ bv1 64) x)) (smol x) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (shesh (smol (arba x))) (im (bvand (_ bv1 64) x) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (shesh (smol (arba x)))))) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (shesh (smol (arba x))))))))))

real	0m0.183s
user	0m0.178s
sys	0m0.005s
PRE_icfp_gen_15.7.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvadd x (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvadd x (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd x (shesh (bvnot x))) (bvadd x (shesh (bvnot (_ bv0 64))))) (bvadd x (shesh (bvnot x)))))) (im (shesh (arba x)) (_ bv0 64) (smol (arba (arba x))))))

real	0m0.249s
user	0m0.239s
sys	0m0.009s
PRE_icfp_gen_15.8.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (bvor (_ bv1 64) x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor x (arba (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor x (arba (arba x))) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvadd (_ bv1 64) x) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor x (arba (arba x))) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor x (arba (arba x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor x (arba (arba x))) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvadd (_ bv1 64) x) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor x (arba (arba x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor x (arba (arba x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvor x (arba (arba x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvor x (arba (arba x)))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor x (arba (arba x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor x (arba (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd (_ bv1 64) x) (bvor x (arba (arba x))))))))) (_ bv1 64)))

real	0m0.378s
user	0m0.368s
sys	0m0.009s
PRE_icfp_gen_15.9.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (arba (ehad (bvnot x))) x (bvadd (_ bv1 64) (bvadd (_ bv1 64) x))) x) x) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (bvadd (_ bv1 64) x)) x)) (im (bvand (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (arba (ehad (bvnot x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) (bvadd (_ bv1 64) x)) x)) (bvadd (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvnot (bvor x (smol x))) (im (arba (ehad (bvnot x))) (bvxor x (smol (_ bv1 64))) x) (im (bvnot (bvor x (arba x))) (bvxor x (smol (_ bv1 64))) x)) (im (arba (bvxor x (bvadd (_ bv1 64) x))) (im (arba (ehad (bvnot x))) (bvxor x (smol (_ bv1 64))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvxor x (smol (_ bv1 64))))) (im (bvand (_ bv1 64) x) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvnot (bvor x (smol x))) (bvxor x (smol (_ bv1 64))) x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvnot (bvor x (arba x))) x (bvxor x (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvxor x (smol (_ bv1 64)))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (arba (ehad (bvnot x))) (bvxor x (smol (_ bv1 64))) (im (bvand (_ bv1 64) x) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba x)) (bvxor x (smol (_ bv1 64))) x))) (bvxor x (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (ehad x) (ehad (bvadd (_ bv1 64) (bvxor (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (bvxor x (smol (_ bv1 64))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvxor x (smol (_ bv1 64))))))))))

real	0m0.337s
user	0m0.330s
sys	0m0.006s
PRE_icfp_gen_2.1.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvor (_ bv1 64) (shesh x)) (smol (smol x)) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (im (bvor (_ bv1 64) (shesh x)) (smol (smol x)) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvor (_ bv1 64) (shesh x)) (smol (smol x)) (im (shesh (bvxor x (bvadd (_ bv1 64) x))) (smol (smol x)) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (smol (_ bv1 64))))) (im (bvor (_ bv1 64) (shesh x)) (smol (smol x)) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (smol (_ bv1 64))))) (im (bvor (_ bv1 64) (shesh x)) (smol (smol x)) (im (bvand (_ bv1 64) (shesh x)) (smol (smol x)) (smol (_ bv1 64)))))) (smol (_ bv1 64))))

real	0m3.091s
user	0m3.036s
sys	0m0.046s
PRE_icfp_gen_2.10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvor (_ bv1 64) (shesh (smol x))) (im (bvand x (shesh (smol x))) (_ bv1 64) (shesh (smol (shesh (bvnot x))))) (im (bvand (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (shesh (smol (shesh (bvnot x)))) (bvxor (_ bv1 64) (shesh x))))) (shesh (smol (shesh (bvnot x))))) (shesh (smol (shesh (bvnot x))))))

real	0m0.521s
user	0m0.515s
sys	0m0.005s
PRE_icfp_gen_2.11.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) x) (bvand x (shesh x)) (smol (bvnot x))) (smol (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvnot x)) (im (bvand (_ bv1 64) (bvnot x)) (smol (bvnot x)) (bvand x (shesh x))))) (im (ehad (bvnot x)) (smol (bvnot x)) (im (bvand (_ bv1 64) x) (bvand x (shesh x)) (smol (bvnot x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvnot x)) (im (bvand (_ bv1 64) (bvnot x)) (smol (bvnot x)) (bvand x (shesh x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvand x (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (smol (bvnot x)) (bvand x (shesh x)))) (smol (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (smol (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (smol (bvnot x)) (bvand x (shesh x)))) (smol (bvnot x))))) (bvand x (shesh x))))

real	0m0.211s
user	0m0.203s
sys	0m0.007s
PRE_icfp_gen_2.12.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) (smol x)) (smol (bvnot (bvxor (_ bv1 64) x)))) (bvnot (_ bv1 64))))

real	0m0.056s
user	0m0.052s
sys	0m0.003s
PRE_icfp_gen_2.13.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (arba (im (bvand (_ bv1 64) x) x (_ bv0 64))) (smol (bvnot x)) (_ bv0 64)) (im (shesh (im (bvand (_ bv1 64) x) x (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (smol x) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (shesh (bvadd x (arba x))) (smol x) (_ bv0 64)) (_ bv0 64)) (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (smol x) (im (bvand (_ bv1 64) (arba x)) (im (bvand x (arba x)) (_ bv0 64) (smol x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (shesh (bvadd x (ehad x))) (smol x) (_ bv0 64)) (_ bv0 64))))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol (_ bv1 64)) (_ bv0 64)) (im (bvand (_ bv1 64) (arba (bvnot x))) (smol (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (smol (_ bv1 64))))) (smol (_ bv1 64))) (smol (_ bv1 64))))))

real	0m0.457s
user	0m0.449s
sys	0m0.006s
PRE_icfp_gen_2.14.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvor (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (bvnot x)) (bvnot (arba (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (bvnot x)) (bvnot (arba (bvnot x))))) (im (bvor (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (bvnot x) (bvnot (arba (bvnot x)))) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (bvnot x)) (bvnot (arba (bvnot x))))))) (bvnot x)))

real	0m0.105s
user	0m0.103s
sys	0m0.002s
PRE_icfp_gen_2.15.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) x) (smol x)) (im (bvand (_ bv1 64) (ehad x)) (smol x) x)) x) (smol x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand x (ehad x)) x (smol x))) (im (bvand (_ bv1 64) (arba x)) (smol x) (im (shesh (arba x)) (smol x) x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) x) (im (shesh (arba x)) (smol x) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (_ bv1 64))) (im (shesh (arba x)) (smol x) (im (bvand (_ bv1 64) (arba x)) (_ bv0 64) (smol x)))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (im (bvand (_ bv1 64) (arba x)) (im (shesh (arba x)) (smol x) (_ bv1 64)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (shesh (arba x)) x (_ bv1 64)) (im (shesh (arba x)) (im (ehad (bvand x (shesh x))) (smol x) x) (im (bvand x (ehad x)) x (smol x)))))) (im (arba (bvadd (_ bv1 64) (shesh x))) x (im (bvand (_ bv1 64) (arba x)) x (_ bv1 64)))) (im (shesh (arba x)) (smol x) (_ bv0 64))))))

real	0m0.350s
user	0m0.341s
sys	0m0.008s
PRE_icfp_gen_2.16.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (shesh (ehad (bvnot (_ bv0 64)))) (shesh (ehad (smol (bvnot x))))) (shesh (ehad (smol (bvnot x))))))

real	0m0.548s
user	0m0.537s
sys	0m0.009s
PRE_icfp_gen_2.17.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (shesh x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (shesh (arba x)) (_ bv0 64) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (arba (bvxor x (smol x))) (im (shesh (arba (bvadd x (ehad x)))) (arba (bvxor x (smol x))) (arba (bvxor x (bvadd x (smol x)))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (bvxor x (bvadd x (smol x)))) (im (bvor (_ bv1 64) (shesh x)) (arba (bvxor x (bvadd x (smol x)))) (arba (bvxor x (smol x)))))) (im (shesh (arba x)) (arba (bvxor x (smol x))) (im (bvor (_ bv1 64) (shesh (arba x))) (arba (bvxor x (bvadd x (smol x)))) (arba (bvxor x (smol x)))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand x (bvor (_ bv1 64) (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (bvxor x (smol x))) (arba (bvxor x (bvadd x (smol x))))) (arba (bvxor x (smol x)))) (im (bvand (_ bv1 64) (shesh x)) (arba (bvxor x (smol x))) (im (bvor (_ bv1 64) (shesh (arba x))) (im (bvxor (_ bv1 64) (shesh x)) (arba (bvxor x (bvadd x (smol x)))) (arba (bvxor x (smol x)))) (arba (bvxor x (smol x)))))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (arba x)) (_ bv0 64) (arba (ehad (ehad x)))) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (arba (bvxor x (smol x))) (im (bvor (_ bv1 64) (shesh x)) (arba (bvxor x (bvadd x (smol x)))) (arba (bvxor x (smol x))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (arba (bvxor x (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (bvxor x (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba (bvxor x (smol x))) (arba (bvxor x (bvadd x (smol x)))))))))) (arba (bvxor x (smol x)))))

real	0m2.838s
user	0m2.799s
sys	0m0.031s
PRE_icfp_gen_2.18.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (shesh x) (im (bvand (_ bv1 64) (ehad x)) (shesh x) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh x) (_ bv0 64)))) (smol (_ bv1 64)))) (_ bv0 64)))

real	0m0.193s
user	0m0.186s
sys	0m0.006s
PRE_icfp_gen_2.19.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (bvadd x (bvnot (_ bv1 64))) (bvadd (_ bv1 64) (bvadd (_ bv1 64) x))) (smol (_ bv1 64))))

real	0m0.085s
user	0m0.077s
sys	0m0.008s
PRE_icfp_gen_2.2.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (im (shesh x) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (shesh x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (ehad x)) x (bvadd x (smol (smol x)))) x) x) (bvadd x (smol (smol x)))) x) (bvadd x (smol (smol x)))) x))

real	0m0.279s
user	0m0.271s
sys	0m0.007s
PRE_icfp_gen_2.20.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvadd (_ bv1 64) (im (bvxor (_ bv1 64) x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (im (shesh x) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (shesh x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (im (shesh x) (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (arba x)) (bvadd x (ehad (smol x))) (bvadd (_ bv1 64) (shesh (ehad x)))) (bvadd (_ bv1 64) (shesh (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv1 64) (bvadd (_ bv1 64) (shesh (ehad x)))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvadd (_ bv1 64) (shesh (ehad x))) (bvadd x (ehad (smol x))))) (smol x)) (bvadd x (ehad x))) (bvadd x (ehad x))) (_ bv0 64)) (smol x)))

real	0m0.184s
user	0m0.177s
sys	0m0.007s
PRE_icfp_gen_2.3.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (bvnot x) (bvnot (bvadd x (ehad x)))) (bvnot (bvor x (arba x)))) (bvnot x)))

real	0m0.098s
user	0m0.091s
sys	0m0.006s
PRE_icfp_gen_2.4.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) x (_ bv1 64)) (ehad (ehad x))) (ehad (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (ehad (ehad x)) (im (bvand (_ bv1 64) (arba x)) (ehad (ehad x)) (_ bv1 64))) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (shesh (ehad x))) (ehad (ehad x)) (bvand (_ bv1 64) (arba (smol x))))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) x (_ bv1 64)) (_ bv1 64)) x) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) x (im (bvand (_ bv1 64) (shesh x)) (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) x) (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) x) x)))) x))

real	0m0.237s
user	0m0.226s
sys	0m0.010s
PRE_icfp_gen_2.5.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (arba x)) (im (ehad x) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (shesh (arba x)) (bvxor (_ bv1 64) x))))))

real	0m0.075s
user	0m0.067s
sys	0m0.008s
PRE_icfp_gen_2.6.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (smol (bvand x (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (arba (bvxor x (bvadd (_ bv1 64) x))) (bvor x (shesh x)) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (_ bv0 64) (smol (bvand x (smol x))))) (im (arba (smol (bvadd (_ bv1 64) x))) (smol (bvand x (smol x))) (im (arba (bvadd (_ bv1 64) x)) (smol (bvxor (_ bv1 64) x)) (bvor x (shesh x)))))) (_ bv0 64)) (im (bvand (_ bv1 64) (bvnot x)) (bvor x (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (smol (bvand x (smol x))) (im (bvand (_ bv1 64) (ehad x)) (smol (bvand x (smol x))) (bvor x (shesh x)))) (bvor x (shesh x))))))

real	0m0.172s
user	0m0.163s
sys	0m0.008s
PRE_icfp_gen_2.7.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvand x (smol x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd (_ bv1 64) x) (bvand x (smol x))) (bvadd (_ bv1 64) x)) (bvand x (smol x))) (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) x) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) x)))))

real	0m0.196s
user	0m0.188s
sys	0m0.007s
PRE_icfp_gen_2.8.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvnot (smol x)) (im (bvnot (bvxor (_ bv1 64) x)) (shesh (ehad x)) (shesh x)) (shesh x)) (shesh x)))

real	0m0.019s
user	0m0.015s
sys	0m0.004s
PRE_icfp_gen_2.9.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (bvnot (_ bv0 64)) (smol (bvadd (_ bv1 64) x))) (smol (bvadd (_ bv1 64) x))))

real	0m0.026s
user	0m0.025s
sys	0m0.001s
PRE_icfp_gen_3.1.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im x (bvor (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot (im x (_ bv0 64) x))) (bvor (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor x (arba x)) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) x))) (bvor x (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvor x (arba x)) (bvor x (arba (smol x))))) (bvor x (arba (smol x))))) (bvor x (arba x))))))

real	0m0.227s
user	0m0.219s
sys	0m0.007s
PRE_icfp_gen_3.10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (arba (bvxor x (bvadd x (smol x)))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvadd x (im (bvand (_ bv1 64) x) (_ bv1 64) x)) (arba (bvxor x (smol x)))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand x (shesh (smol x))) (arba (bvxor x (bvadd x (smol x)))) (bvadd (_ bv1 64) x)) (smol x)) (im (bvand (_ bv1 64) (shesh (arba x))) (arba (bvxor x (smol x))) (arba (bvxor x (bvadd x (smol x))))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba (bvxor x (smol x))) (arba (bvxor x (bvadd x (smol x))))) (im (bvxor (_ bv1 64) (bvand x (shesh x))) (smol x) (arba (bvxor x (smol x))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba (bvxor x (smol x))) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (bvxor x (smol x))) (im (shesh (bvand x (smol (bvnot x)))) (smol x) (bvadd (_ bv1 64) x))) (im (shesh (ehad x)) (arba (bvxor x (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (bvxor x (smol x))) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd (_ bv1 64) x) (arba (bvxor x (smol x)))) (im (ehad (bvand x (shesh x))) (smol x) (im (bvand x (shesh (ehad x))) (arba (bvxor x (smol x))) (bvadd (_ bv1 64) x)))))))

real	0m1.530s
user	0m1.503s
sys	0m0.022s
PRE_icfp_gen_3.11.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) x) (bvnot x) (im (bvand (_ bv1 64) (ehad x)) (bvadd x (bvnot (_ bv1 64))) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))) (bvnot x)))

real	0m0.031s
user	0m0.028s
sys	0m0.003s
PRE_icfp_gen_3.12.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (im (shesh x) (bvor x (smol x)) x) (im (shesh x) (bvor x (smol x)) (bvor x (smol (_ bv1 64))))) (bvor x (smol (_ bv1 64)))) (im (bvand (_ bv1 64) (shesh x)) (im (shesh x) (bvor x (smol x)) x) x)))

real	0m0.030s
user	0m0.025s
sys	0m0.005s
PRE_icfp_gen_3.13.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (smol x) (im (ehad (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) x (bvand x (smol x))) (bvand x (smol x)))) (bvand x (smol x))))

real	0m0.052s
user	0m0.047s
sys	0m0.005s
PRE_icfp_gen_3.14.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (im (ehad (smol (bvnot x))) (im (bvnot x) (_ bv1 64) (bvadd x (bvnot (_ bv0 64)))) (bvnot x)) (bvnot x)) (bvnot x)) (bvnot x)) (shesh (arba (ehad x)))))

real	0m1.515s
user	0m1.485s
sys	0m0.026s
PRE_icfp_gen_3.15.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im x (_ bv0 64) (im (shesh x) (_ bv0 64) (im (shesh (bvnot x)) (_ bv0 64) (ehad x)))) (smol x)))

real	0m0.026s
user	0m0.020s
sys	0m0.006s
PRE_icfp_gen_3.16.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvadd x (smol x)) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) (bvadd x (smol x)))) (im (shesh (arba (ehad x))) (bvadd x (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv1 64) (bvadd x (smol x))))) (im (shesh (arba (ehad x))) (bvadd x (smol x)) (im (bvand (_ bv1 64) (ehad x)) (_ bv1 64) (bvadd x (smol x))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (arba (ehad x)) (bvadd x (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvadd x (smol x)) (im (shesh (bvand x (smol x))) (bvadd x (smol x)) (arba (ehad x)))) (bvadd x (smol x))) (im (bvand (_ bv1 64) (ehad x)) (arba (ehad x)) (bvadd x (smol x)))) (bvadd x (smol x))))) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) (bvor (_ bv1 64) (arba (ehad x))))))

real	0m0.265s
user	0m0.258s
sys	0m0.006s
PRE_icfp_gen_3.17.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) x) (smol x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvadd x (arba x)) (bvadd x (im x (_ bv1 64) (_ bv0 64))) (smol x)) (smol x)) (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (_ bv1 64) x) x) (_ bv1 64)) x)) (smol x)))

real	0m0.162s
user	0m0.155s
sys	0m0.006s
PRE_icfp_gen_3.18.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (shesh x) (_ bv1 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh x) (im (shesh (arba x)) (shesh x) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (smol x)) (shesh x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (smol x)) (shesh x)) (im (shesh (arba x)) (shesh x) (im (bvand (_ bv1 64) x) (shesh (smol x)) (shesh x))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (shesh x) (_ bv1 64) (im (shesh (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (shesh (bvxor x (ehad x))) (shesh x)) (im (bvand (_ bv1 64) (bvnot x)) (shesh (smol x)) (shesh (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (shesh x) (_ bv1 64) (im (shesh (arba x)) (shesh (bvxor x (ehad x))) (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (shesh (arba x)) (shesh x) (shesh (smol x))) (shesh (bvxor x (ehad x))))) (shesh (bvxor x (ehad x))))) (im (shesh (arba x)) (shesh x) (shesh (smol x))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (shesh x) (shesh (smol x)) (shesh x)) (im (shesh x) (smol (_ bv1 64)) (im (arba (bvand x (smol x))) (shesh x) (shesh (smol x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) x) (shesh (smol x)) (shesh x)) (im (shesh (arba x)) (shesh x) (im (bvand (_ bv1 64) (arba (smol x))) (shesh x) (shesh (smol x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (shesh x) (shesh (smol x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (smol x)) (shesh x)) (shesh (bvxor x (ehad x)))) (im (arba (bvand x (shesh x))) (shesh (bvxor x (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (smol x)) (shesh (bvxor x (ehad x))))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh x) (shesh (smol x))) (shesh (bvxor x (ehad x)))) (im (bvand (_ bv1 64) x) (shesh x) (im (shesh (arba x)) (shesh x) (shesh (smol x)))))))))

real	0m0.654s
user	0m0.645s
sys	0m0.008s
PRE_icfp_gen_3.19.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvor x (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (arba (smol x))) (im (bvand x (shesh x)) (_ bv1 64) (bvadd (_ bv1 64) (arba (smol x)))))) (bvnot (_ bv0 64))))

real	0m0.310s
user	0m0.303s
sys	0m0.006s
PRE_icfp_gen_3.2.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (smol (bvadd (_ bv1 64) x)) (shesh x)))

real	0m0.020s
user	0m0.016s
sys	0m0.004s
PRE_icfp_gen_3.20.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (shesh (arba x)) (_ bv0 64) (shesh (bvadd (_ bv1 64) x))) (im (shesh (arba x)) (_ bv0 64) (shesh x))) (im (bvand (_ bv1 64) (arba x)) (bvor x (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (shesh (arba x)) (bvor x (arba x)) (im (ehad x) (arba (bvnot (_ bv0 64))) (bvor x (arba x)))) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (arba x)) (bvor x (arba x)) (im (ehad x) (arba (bvnot (_ bv0 64))) (bvor x (arba x)))) (bvor x (arba x)))))))

real	0m0.260s
user	0m0.252s
sys	0m0.007s
PRE_icfp_gen_3.3.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvadd x (arba x))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) (smol x)) x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvnot (bvadd x (arba x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (bvor x (ehad x))) (bvnot (bvadd x (shesh (arba x)))) (bvnot (bvadd x (arba x)))) (bvor (_ bv1 64) (smol x)))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvnot (bvadd x (arba x))) (im (bvand (_ bv1 64) (bvnot x)) (bvnot (bvadd x (shesh (arba x)))) (im (bvor (_ bv1 64) (bvand x (smol x))) x (bvor (_ bv1 64) (smol x))))) (bvnot (bvadd x (arba x)))))))

real	0m0.999s
user	0m0.969s
sys	0m0.026s
PRE_icfp_gen_3.4.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (ehad x))

real	0m0.010s
user	0m0.007s
sys	0m0.004s
PRE_icfp_gen_3.5.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (shesh x) (im (shesh (bvadd (_ bv1 64) x)) (shesh (bvnot (_ bv0 64))) (shesh (bvnot x))) (shesh (bvnot x))) (_ bv0 64)))

real	0m0.029s
user	0m0.026s
sys	0m0.003s
PRE_icfp_gen_3.6.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot (im x (_ bv0 64) x))) (im (ehad (bvand x (shesh x))) x (_ bv0 64)) (im (bvadd (_ bv1 64) (im (ehad x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (arba (arba (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (shesh (arba (arba (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (bvnot x))) (_ bv0 64) (shesh (arba (arba (bvadd (_ bv1 64) x))))))) (_ bv0 64))) (_ bv0 64)))

real	0m0.766s
user	0m0.758s
sys	0m0.005s
PRE_icfp_gen_3.7.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvor x (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (bvxor x (arba x))) (bvadd x (smol (bvnot (_ bv1 64)))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (bvnot (im x (_ bv0 64) x))) (bvor x (smol (smol (_ bv1 64)))) (bvadd x (smol (bvnot (_ bv1 64)))))) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64))))) (bvadd x (smol (bvnot (_ bv1 64))))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvand x (arba x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvor x (smol (smol (_ bv1 64)))) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (smol x)) (bvadd x (smol (bvnot (_ bv1 64)))))))) (_ bv1 64)))

real	0m0.217s
user	0m0.211s
sys	0m0.006s
PRE_icfp_gen_3.8.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvadd (_ bv1 64) (im (bvxor (_ bv1 64) x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot (im x (_ bv0 64) x))) (bvadd (_ bv1 64) (ehad x)) (bvand x (smol (arba x)))) x) (im (bvand (_ bv1 64) (bvand x (ehad x))) (_ bv0 64) (bvadd (_ bv1 64) (ehad x)))) x))

real	0m0.232s
user	0m0.226s
sys	0m0.004s
PRE_icfp_gen_3.9.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (shesh x) (smol (bvor (_ bv1 64) x))))

real	0m0.019s
user	0m0.014s
sys	0m0.005s
PRE_icfp_gen_4.1.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) (shesh (smol (arba x)))) (shesh (smol (arba x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (shesh (smol (arba x))) (_ bv0 64)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) (shesh (smol (arba x)))) (_ bv0 64)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand x (arba x)) (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh x)) x (shesh (smol (arba x)))) x))) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (shesh (smol (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) x (shesh (smol (arba x)))) (_ bv0 64))))))

real	0m0.248s
user	0m0.243s
sys	0m0.005s
PRE_icfp_gen_4.10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (shesh x) (im (bvand (_ bv1 64) (ehad x)) (smol x) (shesh x))))

real	0m0.025s
user	0m0.023s
sys	0m0.002s
PRE_icfp_gen_4.11.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvor (_ bv1 64) (arba (bvxor x (bvadd (_ bv1 64) x)))) (im (bvadd (_ bv1 64) (im (bvor (_ bv1 64) x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (bvor x (shesh x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (shesh x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (arba x))) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (ehad x))) (im (bvand (_ bv1 64) (bvor (arba x) (shesh x))) (im (bvand (_ bv1 64) (bvxor (arba x) (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (shesh (arba (ehad x)))) (bvnot (arba (arba x))) (bvnot (arba (arba (bvor x (ehad x)))))) (bvnot (arba (arba (bvor x (ehad x)))))) (im (bvand (_ bv1 64) (bvor x (arba (ehad x)))) (bvnot (arba (arba (bvor x (ehad x))))) (bvnot (arba (arba x))))) (im (bvand (_ bv1 64) (arba (bvor x (ehad x)))) (bvnot (arba (arba x))) (bvnot (arba (arba (bvor x (ehad x))))))) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (bvnot (bvxor x (arba x)))) (bvnot (arba (arba (bvor x (ehad x))))) (bvxor (_ bv1 64) x))) (bvnot (_ bv0 64))) (bvxor (_ bv1 64) x)))

real	0m9.589s
user	0m9.491s
sys	0m0.066s
PRE_icfp_gen_4.12.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) x) (arba (arba x)) (bvadd x (shesh (shesh x)))) (bvadd x (shesh (shesh x)))) (bvadd x (shesh (shesh x)))) (bvadd x (shesh (shesh x)))))

real	0m0.181s
user	0m0.176s
sys	0m0.005s
PRE_icfp_gen_4.13.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (arba (ehad x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot x) (bvnot (_ bv0 64))) (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (arba (ehad x)) (bvnot x)) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) (bvnot (_ bv0 64))) (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot x) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvnot (_ bv0 64)) (bvnot x)) (bvnot x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv0 64)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (_ bv0 64)) (bvnot x))) (bvnot x)) (bvnot x)))) (bvnot x)))

real	0m0.274s
user	0m0.268s
sys	0m0.005s
PRE_icfp_gen_4.14.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (ehad x)) (smol (bvnot (shesh x))) x) (smol (bvnot (shesh x)))) (im (shesh (ehad x)) (smol (bvnot (shesh x))) (im (bvand (_ bv1 64) (shesh x)) x (smol (bvnot (shesh x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (ehad x)) (smol (bvnot (shesh x))) x) (smol (bvnot (shesh x))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (ehad x)) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (smol (bvnot (shesh x)))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) (smol (bvnot (shesh x))) (im (shesh (ehad x)) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (ehad x) (_ bv0 64) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)))))) (im (bvand x (shesh x)) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (shesh (ehad x)) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) (smol (bvnot (shesh x))) (bvxor (_ bv1 64) (bvadd (_ bv1 64) x))))))))

real	0m0.130s
user	0m0.123s
sys	0m0.007s
PRE_icfp_gen_4.15.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (arba (bvnot x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))

real	0m0.024s
user	0m0.021s
sys	0m0.003s
PRE_icfp_gen_4.16.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (bvnot (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (arba (bvxor x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (bvnot (ehad x))) (bvnot (_ bv0 64))) (bvnot (ehad x))) (bvnot (_ bv0 64)))) (bvor (_ bv1 64) (bvnot (ehad x)))) (bvor (_ bv1 64) (bvnot (ehad x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (bvnot (ehad x))) (im (bvand (_ bv1 64) (arba x)) (bvnot (ehad x)) (bvnot (_ bv0 64)))) (bvor (_ bv1 64) (bvnot (ehad x))))))

real	0m0.115s
user	0m0.106s
sys	0m0.008s
PRE_icfp_gen_4.17.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (im (shesh (shesh x)) x (_ bv1 64))) (im (bvand (_ bv1 64) (arba (bvor x (smol x)))) (im (bvadd (_ bv1 64) (im (shesh (shesh x)) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (shesh (shesh x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (im (bvxor x (ehad (smol (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (im x (_ bv1 64) (arba (ehad x)))) (im (bvxor x (shesh (bvnot (_ bv0 64)))) (bvnot (_ bv0 64)) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (arba (ehad (bvxor x (ehad (bvnot x))))) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (arba (arba (arba x)))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x))))))) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))) (im (bvadd (_ bv1 64) (im (shesh (shesh x)) (_ bv1 64) (_ bv0 64))) (arba (ehad (bvnot (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (arba (bvor x (smol x)))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (arba (ehad (bvxor x (ehad x)))) (bvnot (shesh (arba x)))) (arba (ehad (bvxor x (ehad x)))))) (arba (ehad (ehad (bvnot (_ bv0 64)))))))

real	0m9.396s
user	0m9.308s
sys	0m0.055s
PRE_icfp_gen_4.18.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (bvor x (arba x))) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (bvor x (arba x)))) (arba (bvnot (_ bv0 64)))))

real	0m0.028s
user	0m0.023s
sys	0m0.005s
PRE_icfp_gen_4.19.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (im (shesh (arba x)) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (shesh (arba x)) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (ehad (bvnot x)))) (im (bvand (_ bv1 64) (bvor x (ehad (ehad x)))) (im (bvadd (_ bv1 64) (im (bvand x (shesh x)) (_ bv1 64) (_ bv0 64))) (im (bvor (_ bv1 64) (arba (bvxor x (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (ehad x))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvnot (arba (ehad x))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvnot (arba (ehad x))) (bvor x (ehad (bvand x (arba x)))))) (bvor x (ehad (bvand x (arba x))))) (im (bvand (_ bv1 64) (im x (_ bv1 64) (arba x))) (bvnot (arba (ehad x))) x)) (bvnot (arba (ehad x)))) (bvnot (arba (ehad (bvadd (_ bv1 64) x))))) x) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))) (bvnot (arba (ehad x))) x)) (im (bvand (_ bv1 64) (arba (bvnot x))) x (bvnot (arba (ehad x))))) (im (bvand (_ bv1 64) (im x (_ bv1 64) (ehad x))) (bvor x (bvadd (_ bv1 64) x)) (bvnot (_ bv0 64)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) (ehad x)))) (bvor x (ehad (bvand x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvnot (_ bv0 64)) (bvor x (arba (ehad x)))))) (bvnot (_ bv0 64))))

real	0m2.896s
user	0m2.857s
sys	0m0.029s
PRE_icfp_gen_4.2.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) (im (shesh (bvxor x (bvadd (_ bv1 64) x))) (im (shesh (smol x)) (arba x) (bvor (_ bv1 64) (smol x))) (arba x))) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) (arba x))) (arba x)))

real	0m0.072s
user	0m0.068s
sys	0m0.004s
PRE_icfp_gen_4.20.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (bvnot x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (im (bvnot x) (_ bv1 64) x)) (bvnot (bvadd x (arba x))) (bvnot (bvadd x (shesh (arba x))))) (bvnot (bvadd x (arba x)))) (bvnot (bvadd x (arba x)))) (bvnot (bvadd x (arba x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot (bvadd x (shesh (arba x)))) (bvnot (bvadd x (arba x))))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) x))) (bvnot (bvadd x (arba x))) (im (bvor (_ bv1 64) (bvnot x)) (bvand x (bvadd (_ bv1 64) x)) (bvnot (bvadd x (arba x)))))) (bvand x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (bvadd x (arba x))) (bvand x (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (bvadd x (arba x))) (bvand x (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (bvadd x (arba x))) (bvand x (bvadd (_ bv1 64) x)))) (bvnot (bvadd x (shesh (arba x))))))

real	0m1.394s
user	0m1.371s
sys	0m0.019s
PRE_icfp_gen_4.3.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (ehad x)) (bvnot (_ bv0 64)) (bvnot (bvxor (_ bv1 64) x))) (smol (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (ehad x)) (bvnot (_ bv0 64)) (bvnot (bvxor (_ bv1 64) x))) x)) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (_ bv0 64)) x) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvxor (_ bv1 64) x)) x)) (im (shesh (ehad x)) (bvnot (_ bv0 64)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvxor (_ bv1 64) x)) x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (ehad x)) (bvnot (_ bv0 64)) (bvnot (bvxor (_ bv1 64) x))) (bvxor (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (_ bv0 64)) (bvxor (_ bv1 64) x)) (bvnot (bvxor (_ bv1 64) x))) (im (shesh (ehad x)) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)))))))

real	0m0.069s
user	0m0.064s
sys	0m0.005s
PRE_icfp_gen_4.4.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh x)) (bvnot (bvxor (_ bv1 64) (ehad x)))) (bvnot (bvxor (_ bv1 64) (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (shesh x)) (im (shesh (ehad x)) (bvnot (_ bv1 64)) (bvnot (bvxor (_ bv1 64) (ehad x)))))) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvxor (_ bv1 64) (ehad x))) (im (shesh (ehad x)) (bvnot (_ bv1 64)) (bvnot (bvxor (_ bv1 64) (ehad x))))))) (bvnot (_ bv1 64))))

real	0m0.149s
user	0m0.143s
sys	0m0.006s
PRE_icfp_gen_4.5.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (bvnot x) (im (shesh (shesh x)) (bvnot (bvor (_ bv1 64) x)) (bvnot x))) (im (shesh (shesh x)) (bvnot (bvor (_ bv1 64) x)) (bvnot x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvxor x (shesh (arba x))) x) (bvxor x (shesh (arba x)))) (bvxor x (shesh (arba x))))) (bvnot x)))

real	0m0.346s
user	0m0.337s
sys	0m0.008s
PRE_icfp_gen_4.6.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (im x (_ bv1 64) (shesh x))) (smol (smol x)) (bvor x (bvnot (bvadd (_ bv1 64) x)))) (bvnot (_ bv1 64))) (bvnot (_ bv0 64))))

real	0m0.218s
user	0m0.209s
sys	0m0.009s
PRE_icfp_gen_4.7.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (im (ehad x) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (ehad x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot (im x (_ bv0 64) x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (smol (bvor (_ bv1 64) (bvor x (smol x)))) (bvadd x (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (smol (smol (bvor x (ehad x)))) (bvadd x (smol x)))) (smol (smol x))) (bvadd x (smol x))) (smol (bvadd (_ bv1 64) x))))

real	0m0.817s
user	0m0.806s
sys	0m0.007s
PRE_icfp_gen_4.8.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (shesh x) (bvor (_ bv1 64) (smol (_ bv1 64))) (shesh x)) (im (bvand (_ bv1 64) x) (arba x) (im (bvand (_ bv1 64) (shesh x)) (arba x) (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) x) (arba x) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (arba x) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba x) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (bvor x (smol x))) (im (shesh (im (bvand (_ bv1 64) x) (_ bv0 64) x)) (im (shesh (bvadd x (ehad x))) (arba x) (arba (bvor x (smol x)))) (arba (bvor x (smol x))))))) (arba x))) (im (shesh x) (bvor (_ bv1 64) (smol (_ bv1 64))) (shesh x)))))

real	0m0.243s
user	0m0.238s
sys	0m0.004s
PRE_icfp_gen_4.9.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba x)) (bvnot (ehad x)) (im (bvand (_ bv1 64) (ehad x)) (bvnot (ehad x)) (bvnot (_ bv0 64)))) (bvnot (ehad x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot (ehad x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (shesh (arba x)) (bvnot (_ bv0 64)) (bvnot (ehad x))) (bvnot (_ bv0 64)))) (bvnot (_ bv0 64))) (bvnot (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot (_ bv0 64)) (ehad x)) (im (shesh (arba x)) (bvnot (ehad x)) (ehad x))) (im (shesh (bvand x (arba x))) (im (bvand x (shesh x)) (bvnot (_ bv0 64)) (bvnot (ehad x))) (ehad x)))))

real	0m0.168s
user	0m0.161s
sys	0m0.007s
PRE_icfp_gen_5.1.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (bvand x (ehad x)))) (im (bvand (_ bv1 64) (shesh (bvor x (ehad x)))) (shesh x) (im (bvand (_ bv1 64) (shesh (shesh (smol x)))) (shesh (bvadd x (shesh x))) (_ bv1 64))) (_ bv1 64)) (im (bvand (_ bv1 64) (arba (bvadd x (smol x)))) (im (bvand (_ bv1 64) (ehad (bvand x (arba x)))) (im (ehad (ehad (bvxor x (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (shesh (bvadd x (shesh x))))) (im (shesh (shesh (ehad x))) (shesh (bvadd x (shesh x))) (bvor (_ bv1 64) (shesh x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) (arba x)))) (im (bvand (_ bv1 64) (shesh (shesh (shesh x)))) (shesh x) (bvor (_ bv1 64) (shesh (bvadd x (shesh x))))) (_ bv0 64))) (_ bv0 64))))

real	0m1.773s
user	0m1.746s
sys	0m0.021s
PRE_icfp_gen_5.10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) (bvnot x)) (_ bv1 64)) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (bvnot x)) (bvnot (bvxor (_ bv1 64) x)) (bvnot x)) (_ bv0 64))))

real	0m0.049s
user	0m0.047s
sys	0m0.002s
PRE_icfp_gen_5.11.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (bvnot x)) (im (shesh (arba x)) x (_ bv0 64)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (shesh (bvand x (arba x))) x (_ bv1 64)) (im (bvand (_ bv1 64) (shesh x)) (im (arba (bvxor x (bvadd (_ bv1 64) x))) (bvnot (arba x)) x) (im (bvor (_ bv1 64) (arba x)) (bvand (_ bv1 64) x) (bvnot (arba x)))))) (im (bvand (_ bv1 64) (bvnot x)) (bvnot (arba x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvnot (arba x)) (im (shesh (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) x (im (bvand (_ bv1 64) (ehad (ehad x))) x (bvnot (arba x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) (bvnot (arba x))) (bvnot (arba x))))))))

real	0m0.226s
user	0m0.214s
sys	0m0.011s
PRE_icfp_gen_5.12.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (bvor (_ bv1 64) x) (_ bv1 64) (_ bv0 64))) (im (bvadd (_ bv1 64) (im (arba (bvxor x (bvadd (_ bv1 64) x))) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (bvor (bvnot x) (arba (smol x)))) (im (bvor (_ bv1 64) (arba (bvxor x (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh (smol x)))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh (bvnot x))))) (im (bvand (_ bv1 64) (shesh (bvor (smol x) (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh (bvor x (smol x))))) (im (bvand (_ bv1 64) (bvnot (bvand x (shesh (ehad x))))) (im (bvand (_ bv1 64) (bvnot (bvand x (shesh (shesh x))))) (im (bvand (_ bv1 64) (bvor (bvnot x) (arba (arba x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh (arba x)))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh (bvor x (arba (arba x))))) (im (bvand (_ bv1 64) (shesh (bvor x (bvadd x (shesh x))))) (im (bvand (_ bv1 64) (shesh (arba (bvor x (shesh x))))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh (shesh x))))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh (ehad x))))) (shesh x) (shesh (arba (ehad (bvand x (arba (arba x))))))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (shesh (bvxor x (ehad x)))) (shesh (bvxor x (ehad x)))) (shesh (bvxor x (ehad x)))) (shesh (bvxor x (ehad x)))) (shesh (bvxor x (ehad x)))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (shesh (bvxor x (ehad x)))) (shesh (bvxor x (ehad x)))) (shesh (bvxor x (ehad x)))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (_ bv0 64)))

real	2m36.065s
user	2m34.375s
sys	0m1.176s
PRE_icfp_gen_5.13.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (arba (ehad (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (im (shesh (bvxor x (bvadd (_ bv1 64) x))) (shesh (bvnot x)) (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvnot x)) (arba (ehad x))))))

real	0m0.132s
user	0m0.121s
sys	0m0.011s
PRE_icfp_gen_5.14.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (shesh (bvadd x (bvnot (_ bv1 64)))) (bvor (_ bv1 64) (smol (_ bv1 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (shesh x) (im (shesh x) (bvnot (_ bv1 64)) (shesh x))) (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (ehad x)) (shesh x) (bvnot (_ bv0 64)))))))

real	0m0.061s
user	0m0.054s
sys	0m0.006s
PRE_icfp_gen_5.15.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (bvnot x) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvnot (_ bv0 64)) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot x) (bvnot (_ bv0 64))))) (bvnot x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot x) (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (_ bv0 64)) (bvnot x))) (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) x) (_ bv0 64)) x) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand (_ bv1 64) (arba x)) x (_ bv0 64))))))

real	0m0.124s
user	0m0.118s
sys	0m0.006s
PRE_icfp_gen_5.16.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) x (im (bvxor (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (shesh (smol x))) (arba x) x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (arba x) x) x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) x (arba x))))

real	0m0.083s
user	0m0.079s
sys	0m0.004s
PRE_icfp_gen_5.17.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (_ bv0 64) (im (arba (smol x)) (smol x) (smol (_ bv1 64)))) (im (bvand x (ehad x)) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (bvxor x (bvadd (_ bv1 64) x))) (bvnot (bvxor x (smol x)))) (im (bvor (_ bv1 64) (bvand x (ehad x))) (smol x) (smol (_ bv1 64))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (bvxor x (smol x))) (smol (bvnot (_ bv1 64)))) (im (bvand x (shesh (arba x))) (bvnot (bvxor x (bvadd (_ bv1 64) x))) (bvnot (bvxor x (smol x)))))))

real	0m0.260s
user	0m0.251s
sys	0m0.008s
PRE_icfp_gen_5.18.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (bvand x (shesh x)) (shesh (ehad x))) (bvand x (shesh x))) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (_ bv0 64) (shesh (ehad x))) (bvand x (shesh x)))) (_ bv0 64)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvnot x)) (_ bv0 64) (bvand x (shesh x))) (_ bv0 64)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvand x (shesh x)) (_ bv0 64)) (bvand x (shesh x))))))

real	0m0.131s
user	0m0.126s
sys	0m0.004s
PRE_icfp_gen_5.19.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvadd x (shesh (arba x))) (_ bv0 64)) (im (bvand (_ bv1 64) (arba (bvnot x))) x (_ bv0 64))))

real	0m0.495s
user	0m0.478s
sys	0m0.015s
PRE_icfp_gen_5.2.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (ehad x))) (im (shesh (bvnot x)) (shesh (arba x)) (bvand (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (shesh (arba (bvnot (_ bv0 64)))) (shesh (arba x))) (shesh (arba x))))))

real	0m0.140s
user	0m0.133s
sys	0m0.006s
PRE_icfp_gen_5.20.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (bvadd (_ bv1 64) (shesh x))))

real	0m0.027s
user	0m0.024s
sys	0m0.004s
PRE_icfp_gen_5.3.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (bvand x (arba x)) (_ bv1 64) (_ bv0 64))) (im (bvadd (_ bv1 64) (im (bvand x (shesh x)) (_ bv1 64) (_ bv0 64))) (im (ehad (bvadd (_ bv1 64) (im (ehad x) x (_ bv1 64)))) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (bvnot (bvand x (ehad x)))) (im (bvand (_ bv1 64) (bvor (bvnot x) (ehad x))) (im (bvand (_ bv1 64) (im (ehad x) x (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvnot (bvor x (smol x))) (bvand x (bvor (_ bv1 64) (arba x))) (bvadd (ehad x) (arba x))) (bvadd (ehad x) (arba x))) (bvadd (ehad x) (arba x))) (bvor x (ehad (bvand x (arba x))))) x) (bvor x (ehad (bvand x (arba x))))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) x (bvor x (ehad (bvand x (arba x)))))) (_ bv1 64)) x) x))

real	0m1.841s
user	0m1.819s
sys	0m0.016s
PRE_icfp_gen_5.4.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) (im x (bvnot (_ bv1 64)) x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (shesh (arba (bvnot x)))) (bvnot (shesh (arba x)))))) (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvadd (_ bv1 64) x) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (shesh (arba x))) (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (im x (_ bv1 64) (arba x))) (bvadd (_ bv1 64) x) (bvadd (_ bv1 64) (im (bvand (_ bv1 64) x) x (_ bv1 64))))))

real	0m0.562s
user	0m0.554s
sys	0m0.006s
PRE_icfp_gen_5.5.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh x) (im (bvand (_ bv1 64) (arba (arba x))) (shesh x) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) (shesh x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (shesh x) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (_ bv0 64) (shesh x)) (shesh x)))) (arba (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh x) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (shesh x) (_ bv0 64)) (_ bv0 64)) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv0 64) (shesh x))))) (arba (ehad x)))) (_ bv0 64)))

real	0m0.228s
user	0m0.223s
sys	0m0.003s
PRE_icfp_gen_5.6.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (ehad (smol (bvxor (_ bv1 64) x))) (im (shesh x) (_ bv0 64) (arba (ehad (ehad x))))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvor (_ bv1 64) (shesh x)) x (ehad (smol (bvxor (_ bv1 64) x)))) (im (bvand x (arba x)) x (bvxor (_ bv1 64) x))) (arba (ehad (ehad x))))) (_ bv0 64)))

real	0m0.093s
user	0m0.089s
sys	0m0.004s
PRE_icfp_gen_5.7.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (ehad x) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) (smol (_ bv1 64)) (ehad x))))

real	0m0.030s
user	0m0.027s
sys	0m0.002s
PRE_icfp_gen_5.8.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (arba x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) x) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (ehad (smol (bvxor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) (ehad x)) (im (shesh (bvnot x)) (ehad (smol (bvxor (_ bv1 64) x))) (bvxor (_ bv1 64) (ehad x))))) (im (bvand (_ bv1 64) (arba x)) (bvxor (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) (ehad x)) (ehad (smol (bvxor (_ bv1 64) x)))))) (bvxor (_ bv1 64) (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvnot (bvor x (smol x))) (bvxor (_ bv1 64) (ehad x)) (bvor x (smol x))) (im (bvor (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) (ehad x)) (bvor x (smol x)))) (bvor x (smol x)))) (bvor x (smol (bvor (_ bv1 64) x)))) (bvor x (smol (bvor (_ bv1 64) x)))) (bvxor (_ bv1 64) (ehad x))))

real	0m0.215s
user	0m0.203s
sys	0m0.011s
PRE_icfp_gen_5.9.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (ehad (smol (bvnot x))) (bvnot x) (bvor (_ bv1 64) x)) (bvor (_ bv1 64) x)) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand x (arba x)) (bvnot (bvadd x (smol x))) (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot (bvadd x (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvnot (bvadd x (smol x))) x) (im (bvand (_ bv1 64) (arba x)) x (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand x (arba x)) (im (bvand (_ bv1 64) (ehad x)) (bvnot (bvadd x (smol x))) x) (bvnot x)) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvnot (bvadd x (smol x))) x)))))) (bvnot x)))

real	0m0.147s
user	0m0.144s
sys	0m0.003s
PRE_icfp_gen_6.1.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) x) x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) x) x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) x (bvor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba (smol x))) x (im (arba (ehad (smol x))) (_ bv1 64) (bvor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) x (im (arba (ehad (smol x))) (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) x (_ bv0 64)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand x (arba x)) (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (arba (smol x))) x (im (bvand x (arba x)) (_ bv1 64) x)))))))

real	0m0.331s
user	0m0.325s
sys	0m0.005s
PRE_icfp_gen_6.10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol (shesh x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (shesh (im (bvand (_ bv1 64) x) (_ bv0 64) x)) (im (bvand (_ bv1 64) (ehad x)) x (_ bv0 64)) (_ bv0 64)) (im (shesh (bvadd x (ehad x))) (im (bvand (_ bv1 64) (arba x)) x (_ bv0 64)) (im (shesh x) x (smol (bvxor (_ bv1 64) (shesh x))))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) (bvxor x (shesh x))) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvxor (_ bv1 64) (bvand x (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) x) x) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))) (bvxor x (shesh x)))) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvxor (_ bv1 64) (bvxor x (shesh x))) (bvxor x (shesh x)))))))

real	0m0.289s
user	0m0.284s
sys	0m0.004s
PRE_icfp_gen_6.11.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) x) (smol (smol (shesh x))) (_ bv1 64)) (_ bv0 64)))

real	0m0.061s
user	0m0.055s
sys	0m0.005s
PRE_icfp_gen_6.12.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (bvor (_ bv1 64) (smol x)))

real	0m0.023s
user	0m0.019s
sys	0m0.004s
PRE_icfp_gen_6.13.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (ehad (bvadd (_ bv1 64) x)) (im (shesh (shesh x)) (ehad x) (smol x))))

real	0m0.558s
user	0m0.544s
sys	0m0.013s
PRE_icfp_gen_6.14.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (bvnot x)) x (bvadd x (arba (ehad x)))) (im (bvand (_ bv1 64) (bvand x (shesh x))) (bvadd x (arba (ehad x))) x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvand x (shesh x))) (im (bvand (_ bv1 64) (arba (smol x))) x (bvadd x (arba (ehad x)))) (bvadd x (arba (ehad x)))) (bvor (_ bv1 64) x)) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (bvnot x))) x (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) x) (bvadd x (arba (ehad x)))) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvadd x (arba (ehad x))) x) x))))))

real	0m0.238s
user	0m0.230s
sys	0m0.007s
PRE_icfp_gen_6.15.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (ehad x) (im (shesh x) (ehad x) (bvor x (ehad x)))))

real	0m0.036s
user	0m0.032s
sys	0m0.004s
PRE_icfp_gen_6.16.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (smol (shesh x)) (ehad (smol (smol x)))) (smol (shesh x))))

real	0m0.049s
user	0m0.046s
sys	0m0.003s
PRE_icfp_gen_6.17.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (arba (smol x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (smol x)) (im (bvand (_ bv1 64) (arba x)) (arba (smol x)) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (smol x)) (im (bvand (_ bv1 64) (arba (smol x))) (arba (smol x)) (_ bv0 64)))))) (im (bvand (_ bv1 64) x) (im (shesh (bvnot x)) (bvnot x) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (shesh (bvnot x)) (bvnot x) (bvxor (_ bv1 64) x)) (bvxor (_ bv1 64) x)) (im (shesh (bvnot x)) (bvnot x) (bvxor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvxor (_ bv1 64) x) (im (bvor (_ bv1 64) x) (_ bv0 64) (bvnot x)))))))

real	0m0.243s
user	0m0.234s
sys	0m0.008s
PRE_icfp_gen_6.18.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (shesh (arba (arba x))) (im (shesh (ehad x)) (_ bv0 64) (im (bvand x (ehad x)) (_ bv0 64) (shesh (arba (arba x)))))) (im (shesh (ehad x)) (_ bv0 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (im (bvnot x) (_ bv0 64) (smol x)) (smol x)) (smol x)))) (im (bvand (_ bv1 64) x) (smol (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (im (ehad (bvnot x)) (shesh (arba (arba x))) (im (shesh (ehad x)) (smol x) (shesh (arba (arba x))))) (im (shesh (ehad x)) (smol x) (shesh (arba (arba x))))) (im (shesh (ehad x)) (smol x) (shesh (arba (arba x))))))))

real	0m0.091s
user	0m0.085s
sys	0m0.005s
PRE_icfp_gen_6.19.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvxor (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (bvadd (_ bv1 64) x)) (bvxor x (smol x))) (bvxor x (smol x))) (im (shesh x) (im (shesh (bvadd x (arba x))) (im (shesh (bvand x (smol x))) (bvxor x (smol x)) (bvnot (bvor x (arba x)))) (bvnot (bvor x (arba x)))) (im (bvor (_ bv1 64) (shesh x)) (bvadd (_ bv1 64) (bvadd (_ bv1 64) x)) (bvxor x (smol x))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvor x (arba x))) (bvadd (_ bv1 64) (bvadd (_ bv1 64) x))) (im (arba x) (bvadd (_ bv1 64) (bvadd (_ bv1 64) x)) (bvxor x (smol x))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) x) (im (shesh (bvadd x (ehad x))) (bvnot (bvor x (arba x))) (bvxor x (smol x))) (bvxor x (smol x))) (im (bvand (_ bv1 64) x) (bvxor x (smol x)) (im (shesh (im (bvand (_ bv1 64) x) (_ bv0 64) x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (bvor x (arba x))) (bvxor x (smol x))) (bvnot (bvor x (arba x)))) (bvxor x (smol x)))))) (bvxor x (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (bvor x (arba x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvnot (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvor x (arba x))) (bvnot x)))) (bvnot (bvor x (arba x))))))

real	0m0.330s
user	0m0.324s
sys	0m0.004s
PRE_icfp_gen_6.2.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvor (_ bv1 64) (bvnot x)) (smol x) (im (bvadd x (arba x)) (smol (bvor x (smol x))) (bvnot (ehad x)))) (bvnot (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvor (_ bv1 64) (bvnot x)) (bvnot (ehad x)) (im (bvnot (smol (bvor (_ bv1 64) x))) (smol x) (bvnot (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvor x (smol x))) (bvnot (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvor x (smol x))) (bvnot (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (bvnot (ehad x)) (smol (bvor x (smol x))))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (bvor x (smol x))) (bvnot (ehad x))) (smol (bvor x (smol x)))) (im (bvor (_ bv1 64) (smol x)) (bvnot (ehad x)) (smol (bvor x (smol x))))) (smol (bvor x (smol x))))) (bvnot (_ bv0 64))))

real	0m0.168s
user	0m0.159s
sys	0m0.008s
PRE_icfp_gen_6.20.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (_ bv0 64))

real	0m0.013s
user	0m0.010s
sys	0m0.003s
PRE_icfp_gen_6.3.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor x (shesh x)) (ehad x)) (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (bvor x (shesh x)) (ehad x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor x (shesh x)) (im (ehad (bvand x (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor x (shesh x)) (_ bv1 64)) (bvor (_ bv1 64) (ehad x)))) (_ bv1 64))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor x (shesh x)) (bvor (_ bv1 64) (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (bvor x (shesh x)) (bvor (_ bv1 64) (ehad x))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) x (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (ehad (bvand x (arba x))) x (im (bvand (_ bv1 64) (arba (smol x))) (ehad x) x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (arba (ehad (ehad x))) x (_ bv1 64)) x)) (im (ehad (bvand x (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (ehad x) x)))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) (ehad x)) x))))

real	0m0.271s
user	0m0.261s
sys	0m0.009s
PRE_icfp_gen_6.4.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh x)) (ehad x) (_ bv0 64)) (im (bvand (_ bv1 64) (arba x)) (im (shesh (shesh (arba x))) (smol (bvor x (arba x))) (smol x)) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (shesh (arba x))) (smol (bvor x (arba x))) (smol x)) (smol x)))) (_ bv0 64)))

real	0m0.182s
user	0m0.177s
sys	0m0.004s
PRE_icfp_gen_6.5.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (im (shesh (bvadd (_ bv1 64) x)) (bvand (_ bv1 64) x) (smol x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (bvadd (_ bv1 64) x)) (bvand (_ bv1 64) x) (smol x)) (smol x)) (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (im (shesh (shesh (arba x))) x (_ bv0 64)) (im (shesh (shesh (arba x))) x (_ bv1 64)))))

real	0m1.726s
user	0m1.673s
sys	0m0.049s
PRE_icfp_gen_6.6.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) x) (im (bvand x (shesh x)) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvand x (arba x))) (bvand x (arba x))) (_ bv0 64)) (_ bv1 64)) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (im (shesh (bvnot x)) (bvand x (arba (smol x))) (bvand x (arba x))) (bvand x (arba (smol x)))) (bvand x (arba x))) (bvand x (arba x))) (im (bvand (_ bv1 64) (shesh x)) (bvand x (arba x)) (im (bvnot (bvor x (shesh x))) (bvand x (arba (smol x))) (bvand x (arba x)))))))

real	0m0.297s
user	0m0.289s
sys	0m0.006s
PRE_icfp_gen_6.7.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (smol (bvnot (bvxor (_ bv1 64) x)))) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (smol (bvnot (bvor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (smol (bvnot (bvxor (_ bv1 64) x))) (shesh (bvadd x (shesh x)))) (im (bvand (_ bv1 64) (shesh x)) (shesh (bvadd x (shesh x))) (smol (bvnot (bvxor (_ bv1 64) x)))))) (bvnot (_ bv1 64))))

real	0m0.112s
user	0m0.106s
sys	0m0.006s
PRE_icfp_gen_6.8.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (im (arba x) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (arba x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvxor x (shesh x))) (bvadd x (shesh (arba x))) x) x)) (bvadd x (shesh (arba x)))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (bvand x (ehad x))) x (bvadd x (shesh (arba x)))) x) (bvand (_ bv1 64) (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvadd x (shesh (arba x))) (_ bv1 64)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) x (_ bv0 64))) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) x)))

real	0m0.359s
user	0m0.352s
sys	0m0.005s
PRE_icfp_gen_6.9.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot (bvand x (arba x)))) (im (bvand (_ bv1 64) (bvor x (arba (bvnot x)))) (bvor x (shesh x)) (im (bvand (_ bv1 64) (bvor x (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (arba (smol x)))) (im (arba (bvand x (shesh (shesh x)))) (arba (arba (ehad x))) (arba (arba (ehad (bvand x (shesh x)))))) (im (bvand (_ bv1 64) (shesh (bvadd x (smol x)))) (im (bvand (_ bv1 64) (arba (ehad (bvnot x)))) (arba (arba (ehad x))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x))))))) (im (bvor (_ bv1 64) (bvxor x (ehad (smol x)))) (arba (arba (ehad x))) (arba (arba (ehad (bvand x (shesh x)))))))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (bvand x (im x (_ bv1 64) (shesh x)))) (im (bvand (shesh x) (bvxor x (bvadd (_ bv1 64) x))) (arba (arba (ehad (bvand x (shesh x))))) (arba (arba (ehad x)))) (arba (arba (ehad (bvand x (shesh x)))))) (arba (arba (ehad (bvand x (shesh x))))))))

real	0m12.263s
user	0m12.155s
sys	0m0.067s
PRE_icfp_gen_7.1.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (im (shesh (arba x)) x (_ bv1 64))) (im (bvand (_ bv1 64) (im (shesh (shesh x)) x (_ bv1 64))) (im (bvand (_ bv1 64) (bvor x (arba (arba x)))) (im (bvand (_ bv1 64) (bvor x (ehad (ehad x)))) (im (bvand (_ bv1 64) (bvor x (shesh (shesh x)))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (bvnot (im (shesh (arba x)) (_ bv0 64) (_ bv1 64))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (im (bvand (_ bv1 64) (bvor x (shesh (arba x)))) (arba (ehad (bvxor x (ehad (bvnot x))))) (arba (ehad (bvnot (bvxor x (ehad x))))))) (arba (ehad (bvnot (bvxor x (ehad x)))))) (arba (ehad (bvxor x (ehad (bvnot x)))))) (arba (ehad (bvxor x (ehad x))))) (arba (ehad (bvxor x (ehad (bvnot x)))))))

real	0m8.260s
user	0m8.175s
sys	0m0.058s
PRE_icfp_gen_7.10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (bvadd (_ bv1 64) (shesh (bvnot x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand x (ehad x)) (bvadd (_ bv1 64) (shesh (bvnot (_ bv0 64)))) (smol (_ bv1 64))) (bvadd (_ bv1 64) (shesh (bvnot (_ bv0 64)))))))

real	0m0.142s
user	0m0.133s
sys	0m0.008s
PRE_icfp_gen_7.11.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (arba (ehad (bvnot x))) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (arba x)) (im (arba (bvand x (shesh x))) (bvxor (_ bv1 64) x) (im (shesh (smol (bvnot x))) (arba (ehad (bvnot (_ bv0 64)))) (arba (ehad (bvnot x))))) (im (bvadd x (shesh x)) (arba (ehad (bvnot x))) (im (ehad (bvand x (shesh x))) (bvxor (_ bv1 64) x) (arba (ehad (bvnot x))))))) (im (bvor (_ bv1 64) (shesh (bvnot x))) (arba (ehad (bvnot (_ bv0 64)))) (im (bvand (_ bv1 64) (bvnot x)) (arba (ehad (bvnot x))) (bvxor (_ bv1 64) x))))) (_ bv0 64)))

real	0m0.140s
user	0m0.133s
sys	0m0.007s
PRE_icfp_gen_7.12.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (im (shesh (bvxor x (bvadd (_ bv1 64) x))) (bvnot (smol x)) (bvadd (_ bv1 64) x)) (bvnot (smol x))) (bvnot (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvnot (smol x)) (im (bvand (_ bv1 64) x) (bvnot (smol x)) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) x) (bvadd (_ bv1 64) x) (bvnot (smol x))) (bvadd (_ bv1 64) x)) (bvnot (smol x)))))

real	0m0.092s
user	0m0.086s
sys	0m0.006s
PRE_icfp_gen_7.13.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (smol x))) (bvand x (bvadd (_ bv1 64) x)) x) (bvand x (bvadd (_ bv1 64) x))) x) (im (bvand (_ bv1 64) (bvnot x)) x (im (bvand (_ bv1 64) (shesh (ehad x))) (im (arba (bvxor x (bvadd (_ bv1 64) x))) x (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (arba x))) x (bvand x (bvadd (_ bv1 64) x)))))) (bvand x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) x) (_ bv1 64) x)))

real	0m0.156s
user	0m0.152s
sys	0m0.003s
PRE_icfp_gen_7.14.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (shesh (shesh (arba x))) x (_ bv0 64)) (shesh (ehad (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (shesh (shesh (arba x))) x (_ bv0 64)) (shesh (ehad (smol (bvnot x)))))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (shesh (shesh (arba x))) x (_ bv1 64)) (shesh (ehad (smol (bvnot x)))))))

real	0m11.711s
user	0m11.556s
sys	0m0.123s
PRE_icfp_gen_7.15.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) x) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvor (_ bv1 64) (shesh x)) (arba x) (arba (bvadd x (smol x)))) (arba (bvadd x (smol x)))) (im (bvand (_ bv1 64) (arba x)) (arba (bvadd x (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (bvor (_ bv1 64) (shesh x)) (arba x) (arba (bvadd x (smol x)))) (arba (bvadd x (smol x))))))) (_ bv0 64)))

real	0m0.299s
user	0m0.297s
sys	0m0.002s
PRE_icfp_gen_7.16.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot (_ bv1 64)) (bvnot (bvxor (_ bv1 64) (ehad x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand x (arba x)) (bvadd (_ bv1 64) x) (smol x)) (smol x))))

real	0m0.092s
user	0m0.086s
sys	0m0.006s
PRE_icfp_gen_7.17.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (smol (bvor (_ bv1 64) x)) (im (shesh (ehad x)) x (bvor x (ehad x)))))

real	0m0.044s
user	0m0.041s
sys	0m0.003s
PRE_icfp_gen_7.18.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (smol x)) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) x)))

real	0m0.125s
user	0m0.120s
sys	0m0.005s
PRE_icfp_gen_7.19.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvnot x) (smol x) (smol (bvor (_ bv1 64) x))) (smol (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba x)) x (im (bvor (_ bv1 64) (arba x)) (_ bv1 64) x))))

real	0m0.036s
user	0m0.035s
sys	0m0.002s
PRE_icfp_gen_7.2.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (ehad (bvand x (shesh x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (shesh (arba x)) (ehad (bvand x (shesh x))) (smol x)) (im (shesh (arba x)) (_ bv0 64) (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (shesh (arba x)) (ehad (bvand x (shesh x))) (smol x)) (smol x)))) (smol x)))

real	0m0.111s
user	0m0.108s
sys	0m0.003s
PRE_icfp_gen_7.20.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (bvnot x)) (smol x) (smol (bvand x (smol x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol (bvand x (smol x))) (im (shesh (bvnot x)) (smol x) (smol (bvand x (smol x))))) (im (shesh (bvnot x)) (bvor (_ bv1 64) (smol x)) (smol (bvand x (smol x)))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (smol (bvand x (smol x))) (im (bvand (_ bv1 64) x) (bvor (_ bv1 64) (smol x)) (smol x))) (smol (bvand x (smol x)))) (im (bvand (_ bv1 64) x) (smol (bvand x (smol x))) (im (shesh (bvnot x)) (smol x) (smol (bvand x (smol x))))))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh x)) (bvadd x (bvor (_ bv1 64) x)) (smol x)) (smol x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvor (_ bv1 64) (smol x)) (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (bvadd x (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvor (_ bv1 64) (smol x)) (smol x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (smol x) (bvadd x (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvor (_ bv1 64) (smol x)) (smol x))))) (bvor (_ bv1 64) (smol x))))

real	0m0.348s
user	0m0.343s
sys	0m0.004s
PRE_icfp_gen_7.3.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvand x (arba x))) (shesh (arba (ehad (bvadd (_ bv1 64) x)))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (im (shesh (arba (bvnot x))) (_ bv0 64) (shesh (arba (ehad x)))) (_ bv0 64))))

real	0m0.603s
user	0m0.590s
sys	0m0.012s
PRE_icfp_gen_7.4.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvadd x (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvadd x (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvor (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) (bvadd x (bvnot (_ bv0 64)))) (im (bvor (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol x)) (bvadd x (bvnot (_ bv0 64)))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (bvor (_ bv1 64) (smol x)) (bvxor x (shesh x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvadd x (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) (smol x)) (bvadd x (bvnot (_ bv0 64)))))))) (im (bvand (_ bv1 64) (im (shesh x) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (shesh x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvor (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvor (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x))) (im (arba (bvand x (smol x))) (bvxor (_ bv1 64) x) (im (bvxor (_ bv1 64) (shesh x)) (bvxor (_ bv1 64) x) (bvor (_ bv1 64) (smol x))))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (bvor (_ bv1 64) (smol x)) (bvor (_ bv1 64) (bvadd x (bvnot (_ bv0 64))))) (bvadd x (bvnot (arba x)))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (bvadd x (bvnot (arba x))) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvor (_ bv1 64) (smol x)) (bvadd x (bvnot (arba x)))))))

real	0m0.556s
user	0m0.547s
sys	0m0.007s
PRE_icfp_gen_7.5.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvnot (bvor x (shesh x))) (bvnot x) (bvnot (smol x))) (im (shesh (bvnot x)) (bvnot x) (bvnot (smol x)))) (im (bvand (_ bv1 64) x) (bvnot (smol x)) (bvnot x))) (bvnot (smol x))) (bvnot (bvand (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (im (shesh (bvnot x)) (bvnot x) (bvnot (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (im (shesh (bvnot x)) (bvnot x) (bvnot (smol x))) (im (bvor (_ bv1 64) (shesh (bvnot x))) (bvnot x) (bvnot (smol x))))) (bvnot (smol x))) (bvnot (bvand (_ bv1 64) x)))))

real	0m0.237s
user	0m0.230s
sys	0m0.006s
PRE_icfp_gen_7.6.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (arba x) (im (shesh x) (smol (bvnot (_ bv1 64))) (arba x))) (smol (bvnot (_ bv1 64)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (shesh (bvadd x (arba x))) (arba x) (im (bvand (_ bv1 64) (arba (arba x))) (bvnot (_ bv1 64)) (arba x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba x) (im (shesh x) (arba x) (bvnot (_ bv1 64)))) (arba x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (arba x) (im (shesh (bvadd x (ehad x))) (arba x) (bvnot (_ bv1 64)))) (arba x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (shesh x) (arba x) (bvnot (_ bv1 64))) (arba x)) (arba x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (shesh x) (arba x) (bvnot (_ bv1 64))) (arba x)))))))

real	0m0.332s
user	0m0.327s
sys	0m0.004s
PRE_icfp_gen_7.7.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (bvadd (_ bv1 64) (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (im (bvor (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (smol (_ bv1 64))) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvor (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (_ bv0 64)) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (im (ehad (bvadd (_ bv1 64) (shesh x))) (im (shesh (bvadd x (bvnot (_ bv1 64)))) (_ bv0 64) (bvadd (_ bv1 64) (bvadd (_ bv1 64) x))) (bvadd (_ bv1 64) (bvadd (_ bv1 64) x)))))))

real	0m0.181s
user	0m0.173s
sys	0m0.007s
PRE_icfp_gen_7.8.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvor x (ehad (bvnot x))))) (im (bvxor (_ bv1 64) (arba (bvand x (bvadd (_ bv1 64) (bvnot x))))) (im (bvand (_ bv1 64) (ehad (bvor x (shesh (bvnot x))))) (im (bvand (_ bv1 64) (bvor x (shesh (ehad (bvnot x))))) (im (bvand (_ bv1 64) (shesh (bvnot (bvand x (arba x))))) (im (bvxor (_ bv1 64) (arba (bvxor x (bvadd (_ bv1 64) (bvor (_ bv1 64) x))))) (im (bvand (_ bv1 64) (shesh (bvor x (shesh (bvnot x))))) (im (bvand (_ bv1 64) (bvnot (bvand x (shesh (ehad x))))) (im (bvand (_ bv1 64) (bvor (bvnot x) (shesh x))) (im (bvand (_ bv1 64) (bvnot (bvand (ehad x) (arba x)))) (im (bvand (_ bv1 64) (ehad (bvnot (bvand x (arba x))))) (im (bvand (_ bv1 64) (shesh (bvadd x (arba (bvnot x))))) (shesh (arba (ehad (bvand x (arba (arba x)))))) (im (bvand (_ bv1 64) (bvor (bvnot x) (arba (ehad x)))) (shesh (arba (ehad (bvand x (arba (arba x)))))) (smol (bvadd x (bvxor (_ bv1 64) (im (bvor (_ bv1 64) x) (_ bv1 64) x)))))) (smol (bvadd x (bvxor (_ bv1 64) x)))) (smol (bvadd x (bvxor (_ bv1 64) x)))) (smol (bvadd x (bvxor (_ bv1 64) x)))) (smol (bvadd x (bvxor (_ bv1 64) x)))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (smol (bvadd x (bvxor (_ bv1 64) x)))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (smol (bvadd x (bvxor (_ bv1 64) x)))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (shesh (arba (ehad (bvand x (arba (arba x))))))) (im (bvand (_ bv1 64) (bvor x (arba (smol x)))) (shesh (arba (ehad (bvand x (arba (arba x)))))) (smol (bvadd x (bvxor (_ bv1 64) x))))))

real	1m36.999s
user	1m36.029s
sys	0m0.648s
PRE_icfp_gen_7.9.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (bvor (_ bv1 64) (smol x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba x)) (im (shesh x) (im (shesh (bvadd (_ bv1 64) x)) (bvadd x (smol x)) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))) (im (shesh (bvand x (smol x))) (bvadd x (smol x)) (bvor (_ bv1 64) (smol x)))) (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvor (_ bv1 64) (shesh x)) (im (shesh (bvand x (smol x))) (bvadd x (smol x)) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (shesh x)) (im (shesh x) (im (shesh (bvand x (smol x))) (bvadd x (smol x)) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))) (bvor (_ bv1 64) (smol x))))))

real	0m0.117s
user	0m0.112s
sys	0m0.005s
PRE_icfp_gen_8.1.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvor (_ bv1 64) (arba (bvand x (bvadd (_ bv1 64) (bvnot x))))) (im (bvxor (_ bv1 64) (arba (bvand x (bvadd (_ bv1 64) (bvnot x))))) (im (bvand (_ bv1 64) (bvor x (shesh (bvnot x)))) (im (bvand (_ bv1 64) (shesh (bvor x (bvadd x (ehad x))))) (im (bvand (_ bv1 64) (arba (arba (bvor x (ehad x))))) (im (bvand (_ bv1 64) (bvor x (shesh (arba x)))) (im (bvand (_ bv1 64) (shesh (bvor x (arba (smol x))))) (im (bvand (_ bv1 64) (arba (bvor (bvnot x) (smol x)))) (bvadd (_ bv1 64) (arba (bvand (smol x) (arba x)))) (shesh (arba x))) (shesh (arba x))) (shesh (arba x))) (shesh (arba x))) (shesh (arba x))) (_ bv0 64)) (_ bv0 64)) (_ bv0 64)))

real	0m14.599s
user	0m14.397s
sys	0m0.153s
PRE_icfp_gen_8.10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (arba (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (arba (bvadd (_ bv1 64) (shesh x))) (arba (ehad (bvnot x))) (im (bvnot (bvor x (smol x))) (arba (ehad (bvnot (_ bv0 64)))) (arba (ehad (bvnot x))))) (arba (ehad (bvnot x))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (shesh (arba x)) (shesh x) (shesh (smol x))) (im (arba (bvadd (_ bv1 64) (shesh x))) (shesh x) (im (shesh (arba x)) (shesh x) (shesh (smol x)))))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (arba (bvand x (shesh x))) (shesh x) (im (bvand (_ bv1 64) (shesh (smol x))) (im (arba (bvadd (_ bv1 64) (shesh x))) (shesh x) (shesh (smol x))) (shesh (smol x)))) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh x) (im (shesh (arba x)) (shesh x) (arba (ehad (bvnot x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (ehad (bvnot x))) (im (shesh (arba x)) (arba (ehad (bvnot x))) (shesh (smol x))))) (im (arba (bvadd (_ bv1 64) (shesh x))) (arba (ehad (bvnot x))) (shesh (smol x))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (im (shesh (bvand x (smol x))) (shesh x) (arba (ehad (bvnot x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba (ehad (bvnot x))) (shesh (smol x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (smol x)) (im (arba (bvadd (_ bv1 64) (shesh x))) (shesh x) (shesh (smol x))))) (arba (ehad (bvnot x)))) (shesh x))))))

real	0m0.378s
user	0m0.369s
sys	0m0.008s
PRE_icfp_gen_8.11.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv0 64) (arba (ehad x))) (arba (ehad x))) (im (bvor (_ bv1 64) (bvand x (shesh x))) (ehad (im (bvand (_ bv1 64) x) (_ bv0 64) x)) (arba (ehad x)))) (im (bvor (_ bv1 64) (bvand x (shesh x))) (_ bv0 64) (arba (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand x (shesh x)) (ehad (bvadd x (arba x))) (ehad x)) (im (shesh x) (ehad (bvadd x (arba x))) (ehad x))) (ehad x)) (im (bvand (_ bv1 64) (bvand x (ehad x))) (im (bvand x (shesh x)) (ehad (bvadd x (arba x))) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (ehad x) (ehad (bvadd x (arba x))))))) (im (bvand (_ bv1 64) (shesh x)) (arba (ehad x)) (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (ehad x) (arba (ehad x)))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (ehad x) (arba (ehad x))) (arba (ehad x)))))

real	0m0.389s
user	0m0.381s
sys	0m0.006s
PRE_icfp_gen_8.12.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (shesh x) (bvadd x (shesh (ehad x)))) (bvadd x (shesh (ehad x)))) (bvadd x (shesh (ehad x)))))

real	0m0.185s
user	0m0.177s
sys	0m0.007s
PRE_icfp_gen_8.13.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (_ bv1 64) (bvxor x (shesh (arba x)))))

real	0m0.153s
user	0m0.147s
sys	0m0.005s
PRE_icfp_gen_8.14.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (ehad (bvnot x))) (shesh (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh (ehad (ehad x))) (arba (ehad (ehad x)))) (shesh (ehad (ehad x)))) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (ehad (ehad x))) (arba (ehad (ehad x)))))) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh (ehad (ehad x))) (arba (ehad (ehad x)))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (ehad (ehad x))) (shesh (ehad (ehad x))))) (im (bvand (_ bv1 64) (shesh x)) (arba (ehad (ehad x))) (shesh (ehad (ehad x))))) (arba (ehad (ehad x)))))))

real	0m0.225s
user	0m0.218s
sys	0m0.006s
PRE_icfp_gen_8.15.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (im x (_ bv1 64) (arba x))) (smol (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol x) (smol (bvor x (ehad x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (arba x))) (smol (bvor x (ehad x))) (im (bvand x (bvadd x (arba x))) (smol x) (smol (bvor x (ehad x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (smol (bvor x (ehad x))))))) (im (bvand (_ bv1 64) (im x (_ bv1 64) (arba x))) (smol (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (shesh x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand x (bvadd x (arba x))) (smol x) (smol (bvor x (ehad x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvor x (ehad x))) (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol x) (smol (bvor x (ehad x))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (smol (bvor x (ehad x))) (im (bvand (_ bv1 64) (shesh (arba x))) (smol (bvor x (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand x (bvadd x (arba x))) (smol x) (smol (bvor x (ehad x)))) (smol (bvor x (ehad x))))))))) (bvor x (smol x))) (bvor x (smol x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) x) (bvxor x (smol (smol (_ bv1 64)))) (bvor x (smol x))) (bvor x (smol x))) (bvor x (smol x)))) (smol x)))

real	0m0.537s
user	0m0.526s
sys	0m0.009s
PRE_icfp_gen_8.16.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (bvor (_ bv1 64) x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (shesh (arba (bvnot (arba x)))) (bvnot (shesh (arba (bvnot (_ bv0 64)))))) (shesh (arba (bvnot (_ bv0 64))))))

real	0m0.450s
user	0m0.440s
sys	0m0.009s
PRE_icfp_gen_8.17.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvnot x) (bvadd x (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (bvand x (shesh x)) (im (ehad (bvnot x)) (_ bv0 64) (bvand x (shesh x)))) (bvand x (shesh x))) (bvand x (shesh x))) (smol (bvor (_ bv1 64) x)))))

real	0m0.036s
user	0m0.031s
sys	0m0.005s
PRE_icfp_gen_8.18.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) x) (_ bv0 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba (ehad x)) (im (bvand (_ bv1 64) (ehad x)) (arba (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (_ bv1 64) (im (bvand (_ bv1 64) (arba (ehad x))) (arba (ehad x)) (_ bv1 64))) (im (bvand (_ bv1 64) (arba (smol x))) (bvor (_ bv1 64) (arba (ehad x))) (_ bv1 64)))))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvor (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv1 64) (arba (ehad x))) (bvor (_ bv1 64) (arba (ehad x)))) (_ bv1 64))) (bvxor (_ bv1 64) x))))

real	0m0.148s
user	0m0.144s
sys	0m0.004s
PRE_icfp_gen_8.19.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (smol x)) (smol (bvadd (_ bv1 64) x))) (smol (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (im (bvand (_ bv1 64) (shesh x)) (shesh (smol x)) (smol x)))) (im (bvnot (bvor x (arba x))) (smol x) (smol (bvadd (_ bv1 64) x))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (shesh (smol x)) (smol x)) (shesh (smol x)))) (smol (bvadd (_ bv1 64) x))) (smol (bvadd (_ bv1 64) x))))

real	0m0.158s
user	0m0.152s
sys	0m0.006s
PRE_icfp_gen_8.2.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) x) (bvadd x (smol x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (bvxor (_ bv1 64) (arba x)) (arba x)) (bvxor (_ bv1 64) (arba x)))) (_ bv0 64)))

real	0m0.029s
user	0m0.025s
sys	0m0.004s
PRE_icfp_gen_8.20.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (arba x))) (ehad x) (bvand x (ehad x))) (im (bvand (_ bv1 64) (arba x)) (bvand x (ehad x)) (arba x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba x) (ehad x)) (im (bvand (_ bv1 64) (arba (arba x))) (ehad x) (arba x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (bvnot x)) (bvand x (ehad x)) (arba x)) (ehad x)) (im (bvand (_ bv1 64) x) (arba x) (im (bvand (_ bv1 64) (arba (arba x))) (arba x) (bvand x (ehad x)))))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvor (_ bv1 64) (shesh (bvnot x))) (_ bv0 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba x) (bvand x (ehad x)))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (arba x))) (im (bvand (_ bv1 64) x) (arba x) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvand x (ehad x)) (arba x)) (bvand x (ehad x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (ehad x) (arba x)))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (arba x) (bvand x (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (ehad x) (arba x))))) (_ bv0 64)))

real	0m0.271s
user	0m0.265s
sys	0m0.005s
PRE_icfp_gen_8.3.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (im (shesh x) x (_ bv1 64))) (im (bvadd (_ bv1 64) (im (shesh x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvor (_ bv1 64) (bvand x (smol x))) (bvnot (shesh (shesh (bvnot (_ bv0 64))))) (bvnot (shesh (shesh (bvnot x))))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (ehad (ehad (ehad (bvnot x)))) (ehad (ehad (ehad (bvnot (_ bv0 64)))))) (ehad (ehad (ehad (bvnot x)))))) (bvnot (shesh (shesh (bvnot x))))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvnot (shesh (shesh (bvnot x)))) (ehad (ehad (ehad (bvnot x)))))) (bvnot (shesh (shesh (bvnot x))))))

real	0m0.804s
user	0m0.788s
sys	0m0.013s
PRE_icfp_gen_8.4.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (bvnot x)) (bvnot (arba x)) (bvnot (arba (bvnot (ehad x))))) (im (bvand (_ bv1 64) (bvnot x)) (bvxor x (shesh x)) (bvnot (arba (bvnot (ehad x)))))))

real	0m1.490s
user	0m1.476s
sys	0m0.009s
PRE_icfp_gen_8.5.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (ehad (smol x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol x) (ehad (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (ehad (smol x)))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (ehad (smol x)) (smol x)) (smol x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (ehad (smol x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (smol x) (ehad (smol x))) x)) (im (bvand (_ bv1 64) (arba (smol x))) (ehad (smol x)) (smol x))))))

real	0m0.157s
user	0m0.153s
sys	0m0.004s
PRE_icfp_gen_8.6.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) x (bvor (_ bv1 64) (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvor (_ bv1 64) (smol x)) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) x (bvor (_ bv1 64) (smol x)))) (im (bvand (_ bv1 64) (arba (smol x))) (_ bv1 64) x)))

real	0m0.116s
user	0m0.110s
sys	0m0.005s
PRE_icfp_gen_8.7.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvnot x) (im (shesh (arba x)) (bvnot (bvadd x (smol x))) (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (shesh (arba x)) (bvnot (bvadd x (smol x))) (bvnot x)) (bvnot x)) (bvnot x))) (bvnot (bvadd x (smol x)))) (bvnot x)))

real	0m2.222s
user	0m2.178s
sys	0m0.038s
PRE_icfp_gen_8.8.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (bvnot x) (_ bv0 64) (shesh (arba (ehad x)))) (smol (bvand x (smol x)))) (smol (bvand x (smol x)))) (im (bvand (_ bv1 64) (ehad x)) (im (bvnot (bvor x (smol x))) (shesh (arba (ehad x))) (im (bvand (_ bv1 64) (arba x)) (shesh (arba (ehad x))) (smol (bvand x (smol x))))) (im (bvand (_ bv1 64) (arba x)) (smol (bvand x (smol x))) (shesh (arba (ehad x)))))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (shesh (arba (ehad x))) (smol (bvand x (smol x)))) (im (bvand (_ bv1 64) (arba x)) (smol (bvand x (smol x))) (shesh (arba (ehad x)))))) (_ bv0 64)))

real	0m0.114s
user	0m0.108s
sys	0m0.006s
PRE_icfp_gen_8.9.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (bvnot (_ bv0 64)) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba (smol x))) (smol (_ bv1 64)) (im (bvand (_ bv1 64) (shesh (smol x))) (smol (_ bv1 64)) (bvnot (shesh (arba x))))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (smol x))) (smol (_ bv1 64)) (bvnot (shesh (arba x)))) (smol (_ bv1 64)))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (shesh x)) (smol (_ bv1 64)) (bvnot (shesh (arba x))))))))

real	0m0.081s
user	0m0.078s
sys	0m0.002s
PRE_icfp_gen_9.1.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (arba x) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (shesh x) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (shesh x) (im (bvand (_ bv1 64) (ehad (ehad x))) (shesh x) (_ bv0 64))))) (arba x))))

real	0m0.140s
user	0m0.131s
sys	0m0.008s
PRE_icfp_gen_9.10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (im (shesh x) x (_ bv1 64))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) (im (shesh x) (_ bv1 64) x)) (im (bvadd (_ bv1 64) (im (shesh x) (_ bv1 64) (_ bv0 64))) (bvor x (smol (smol (_ bv1 64)))) (bvor x (smol (smol x)))) (bvand x (shesh x))) (_ bv0 64)) (bvand x (shesh x))) (bvand x (shesh x))) (_ bv0 64)))

real	0m0.216s
user	0m0.207s
sys	0m0.008s
PRE_icfp_gen_9.11.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im (arba x) (_ bv1 64) (_ bv0 64))) (im (bvadd (_ bv1 64) (im (bvor (_ bv1 64) x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (bvnot (shesh (arba x))) (im (arba (ehad x)) (bvnot (_ bv0 64)) (smol x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (smol x) (im (bvand (_ bv1 64) (shesh (arba x))) (bvnot (shesh (arba x))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (ehad x))) (bvnot (shesh (arba (bvnot x)))) (bvnot (shesh (arba x)))) (bvnot (shesh (arba x)))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) x))) (im (bvor (_ bv1 64) (shesh x)) (smol x) (bvnot (shesh (arba x)))) (smol x)))))) (bvnot (_ bv0 64))) (bvnot (_ bv0 64))))

real	0m0.965s
user	0m0.951s
sys	0m0.011s
PRE_icfp_gen_9.12.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (im (shesh x) x (_ bv1 64))) (bvor x (ehad x)) x) (im (bvand (_ bv1 64) (im (shesh x) x (_ bv1 64))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvxor x (bvor x (arba x))) (bvnot (arba x)) (bvor x (ehad x))) (bvor x (ehad x))) (im (ehad (bvadd (_ bv1 64) (arba x))) (bvnot (arba x)) (bvor x (ehad x)))) x)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvadd (_ bv1 64) (im (shesh x) (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvxor x (arba x))) (im (arba (ehad (bvadd (_ bv1 64) x))) (bvor x (ehad x)) (bvnot (arba (bvnot (ehad x))))) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvor (_ bv1 64) (shesh x)) (bvor x (ehad x)) (bvnot (arba (bvnot (ehad x))))) (bvnot (arba (bvnot (ehad x)))))) (bvnot (arba (bvnot (ehad x))))) (bvnot (arba (bvnot (ehad x)))))))

real	0m1.139s
user	0m1.125s
sys	0m0.010s
PRE_icfp_gen_9.13.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (ehad (ehad x)) (bvnot (smol x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x)) (im (bvor (_ bv1 64) (arba x)) (bvnot (smol x)) (bvadd (_ bv1 64) (bvor (_ bv1 64) x))))) (bvnot (smol x))))

real	0m0.030s
user	0m0.027s
sys	0m0.002s
PRE_icfp_gen_9.14.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im x (bvor x (smol x)) (im (bvand (_ bv1 64) (ehad x)) (bvor x (smol x)) (im (ehad (ehad (bvnot x))) (bvnot (bvxor (_ bv1 64) x)) (bvnot (_ bv0 64))))) (im (bvand (_ bv1 64) (ehad x)) (bvor x (smol x)) (im (ehad (ehad (bvnot x))) (bvnot (bvxor (_ bv1 64) x)) (bvnot (_ bv1 64))))))

real	0m0.052s
user	0m0.049s
sys	0m0.003s
PRE_icfp_gen_9.15.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (arba x)) (im (arba (smol (bvnot x))) (im (arba (bvxor x (smol x))) (_ bv0 64) (shesh x)) (im (ehad (ehad (bvnot x))) (_ bv0 64) (im (bvnot x) (_ bv0 64) (shesh (ehad (smol x)))))) (shesh (ehad (smol x)))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh x)) (im (arba (smol (bvnot x))) (im (arba (bvxor x (smol x))) (_ bv0 64) (shesh x)) (im (ehad (bvnot x)) (_ bv0 64) (shesh x))) (shesh x)) (shesh x))) (im (bvand (_ bv1 64) (shesh x)) (_ bv0 64) (shesh (arba x)))) (_ bv0 64)))

real	0m0.153s
user	0m0.145s
sys	0m0.007s
PRE_icfp_gen_9.16.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) x) (smol (bvxor x (arba x))) (arba x)) (im (bvand (_ bv1 64) x) (smol (bvxor x (arba x))) (bvor (_ bv1 64) (arba x)))))

real	0m0.071s
user	0m0.068s
sys	0m0.002s
PRE_icfp_gen_9.17.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (bvxor (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (ehad x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand x (arba x)) (bvnot (bvadd x (ehad x))) (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (bvnot x) (bvnot (bvadd x (ehad x))))) (bvxor (_ bv1 64) x))))

real	0m0.140s
user	0m0.134s
sys	0m0.006s
PRE_icfp_gen_9.18.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) (_ bv1 64) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv1 64) (im (bvand (_ bv1 64) (shesh x)) (smol (smol (shesh x))) (_ bv0 64)))) (im (shesh (arba x)) (_ bv0 64) (smol (smol (shesh x))))))

real	0m0.111s
user	0m0.105s
sys	0m0.005s
PRE_icfp_gen_9.19.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (ehad (bvxor x (bvadd (_ bv1 64) x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (ehad (ehad x))) (_ bv0 64) (bvxor (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (bvxor (_ bv1 64) x) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh (smol x))) (_ bv0 64) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) x)) (_ bv0 64)) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (ehad (ehad x))) x (_ bv0 64)) (_ bv0 64)))) (smol (ehad x))))

real	0m0.215s
user	0m0.209s
sys	0m0.005s
PRE_icfp_gen_9.2.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad x)) (bvor (_ bv1 64) (smol (smol x))) (bvnot (smol (bvand (_ bv1 64) x)))) (im (bvand (_ bv1 64) (arba (smol x))) (bvnot (smol (bvand (_ bv1 64) x))) (bvor (_ bv1 64) (smol (smol x))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvnot (smol (bvand (_ bv1 64) x))) (im (bvand (_ bv1 64) x) (bvnot (smol (bvand (_ bv1 64) x))) (bvor (_ bv1 64) (smol (smol x)))))) (bvnot (smol (bvand (_ bv1 64) x)))))

real	0m0.083s
user	0m0.079s
sys	0m0.003s
PRE_icfp_gen_9.20.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (bvnot (bvadd x (shesh x))) (im (bvand (_ bv1 64) (bvnot x)) (smol x) (smol (bvor x (arba x))))))

real	0m0.092s
user	0m0.088s
sys	0m0.004s
PRE_icfp_gen_9.3.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (ehad (bvnot x))) (im (bvand (_ bv1 64) (shesh x)) (bvnot x) (im (bvxor (_ bv1 64) x) (bvnot (bvor x (smol (_ bv1 64)))) (bvnot x))) (bvnot x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh x) (im (bvand (_ bv1 64) (ehad x)) (shesh x) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh x) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (arba (ehad x))) (shesh x) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (_ bv0 64))) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (shesh x)))))) (im (bvand (_ bv1 64) (arba (bvnot x))) (bvnot x) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) (shesh x)) (shesh x) (im (shesh (ehad (bvnot x))) (shesh x) (im (bvand (_ bv1 64) (ehad x)) (_ bv0 64) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (shesh x))))) (im (bvand (_ bv1 64) (shesh (smol x))) (shesh x) (im (bvand (_ bv1 64) (arba (ehad x))) (_ bv0 64) (shesh x)))))) (bvnot x)))

real	0m0.253s
user	0m0.245s
sys	0m0.007s
PRE_icfp_gen_9.4.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (shesh x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (bvnot x)) (im (bvand (_ bv1 64) (arba x)) x (smol x)) (im (bvand (_ bv1 64) (arba x)) (smol x) x)) x) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (ehad (ehad x))) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (arba (smol x))) (smol x) (smol (bvadd x (ehad x)))) (bvadd x (smol x))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol x) (bvadd x (smol x))) (smol (bvadd x (ehad x))))) (im (bvand (_ bv1 64) (ehad (ehad x))) (smol x) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (bvnot x)) (smol (bvadd x (ehad x))) (im (bvand (_ bv1 64) (arba (arba x))) (smol x) (smol (bvadd x (ehad x))))) (im (bvand (_ bv1 64) (arba x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (smol (bvadd x (ehad x))) (smol x)) (im (bvand (_ bv1 64) (arba (ehad x))) (smol (bvadd x (ehad x))) (smol x))))))))

real	0m0.141s
user	0m0.138s
sys	0m0.003s
PRE_icfp_gen_9.5.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (bvand (_ bv1 64) (ehad x)) (arba (arba (ehad x))) (bvnot (_ bv1 64))) (im (bvand (_ bv1 64) (ehad x)) (im (ehad (smol (bvnot x))) (im (bvnot x) (arba (arba (ehad x))) (bvnot x)) (bvnot (_ bv0 64))) (arba (arba (ehad x))))))

real	0m0.062s
user	0m0.058s
sys	0m0.004s
PRE_icfp_gen_9.6.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (shesh (arba (arba x))) (_ bv0 64) (im (bvand (_ bv1 64) (shesh (bvnot x))) (shesh (arba (arba (ehad x)))) (arba (bvnot x)))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (im (bvand (_ bv1 64) (arba (bvnot x))) (im (bvand (_ bv1 64) (arba (smol x))) (im (bvand (_ bv1 64) (shesh (smol x))) (arba (bvnot x)) (arba (bvnot (_ bv0 64)))) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba (bvnot x)) (im (bvand (_ bv1 64) (arba (ehad x))) (arba (bvnot (_ bv0 64))) (im (bvand (_ bv1 64) (ehad (ehad x))) (arba (bvnot (_ bv0 64))) (arba (bvnot x)))))) (im (bvand (_ bv1 64) (ehad x)) (arba (bvnot x)) (im (bvand x (shesh (ehad x))) (arba (bvnot x)) (im (bvand (_ bv1 64) (arba (smol x))) (arba (bvnot x)) (arba (bvnot (_ bv0 64))))))) (im (bvand (_ bv1 64) (shesh (shesh x))) (arba (bvnot x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh (ehad x))) (arba (bvnot x)) (im (bvand (_ bv1 64) (arba (smol x))) (arba (bvnot x)) (im (bvand (_ bv1 64) (bvand x (arba x))) (arba (bvnot (_ bv0 64))) (arba (bvnot x))))) (im (arba (bvand x (shesh x))) (arba (bvnot x)) (arba (bvnot (_ bv0 64)))))))))

real	0m0.926s
user	0m0.914s
sys	0m0.009s
PRE_icfp_gen_9.7.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvnot x)) (im (bvor (_ bv1 64) x) (_ bv0 64) (im (arba (ehad x)) (bvnot (smol x)) (bvnot x))) (im (bvand (_ bv1 64) (arba x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)) (im (bvor (_ bv1 64) (shesh x)) (im (bvor (_ bv1 64) (ehad x)) (_ bv0 64) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x)))) (bvor (_ bv1 64) (bvadd (_ bv1 64) x))))))

real	0m0.038s
user	0m0.038s
sys	0m0.001s
PRE_icfp_gen_9.8.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) x) (im (ehad x) x (im (ehad (ehad x)) x (im x x (im (bvnot (bvxor (_ bv1 64) x)) (smol (shesh x)) x)))) (smol (shesh x))))

real	0m0.025s
user	0m0.021s
sys	0m0.004s
PRE_icfp_gen_9.9.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (im (bvand (_ bv1 64) (bvor x (shesh x))) (im (bvand (_ bv1 64) (bvor x (arba x))) (im (bvand (_ bv1 64) (bvor x (ehad x))) (im (bvand (_ bv1 64) x) (im (bvadd (_ bv1 64) (im x (_ bv1 64) (_ bv0 64))) (im (bvand (_ bv1 64) (shesh (smol x))) (im (bvand (_ bv1 64) (shesh (arba x))) (ehad x) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) x))) (ehad x) (bvadd x (ehad x)))) (im (bvand (_ bv1 64) (shesh (arba x))) (im (bvand (_ bv1 64) (arba (bvadd (_ bv1 64) x))) (im (bvand x (bvadd x (arba x))) (bvadd x (ehad x)) (ehad x)) (ehad (bvadd x (smol x)))) (im (bvand (_ bv1 64) (shesh (ehad x))) (im (bvand (_ bv1 64) (ehad x)) (im (bvand (_ bv1 64) (shesh x)) (ehad x) (im (bvand x (bvadd x (arba x))) (bvadd x (ehad x)) (ehad x))) (im (bvand (_ bv1 64) (shesh (bvnot x))) (ehad x) (bvadd x (ehad x)))) (im (bvand (_ bv1 64) (ehad (bvadd (_ bv1 64) x))) (bvadd x (ehad x)) (ehad x))))) (_ bv1 64)) (arba x)) (arba x)) (arba x)) (arba x)))

real	0m0.444s
user	0m0.438s
sys	0m0.005s
if0_70_10.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (if0 (bvand (_ bv1 64) x) (if0 (bvand (_ bv1 64) (ehad x)) (smol x) (shesh x)) (shesh x)))

real	0m0.018s
user	0m0.013s
sys	0m0.005s
if0_70_100.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (if0 (bvand (_ bv1 64) x) (if0 (bvand (_ bv1 64) (ehad x)) (smol x) (shesh x)) (shesh x)))

real	0m0.049s
user	0m0.043s
sys	0m0.006s
if0_70_1000.sl
unsat
(define-fun f ((x (_ BitVec 64))) (_ BitVec 64) (if0 (bvand (_ bv1 64) (ehad x)) (if0 (bvand (_ bv1 64) x) (smol x) (shesh x)) (shesh x)))

real	0m0.502s
user	0m0.482s
sys	0m0.018s
